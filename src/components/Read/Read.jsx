import React from 'react';

import './read.scss';
function Read() {
  const [show, setShow] = React.useState(false);
  const [show1, setShow1] = React.useState(false);
  const [show2, setShow2] = React.useState(false);
  const [show3, setShow3] = React.useState(false);
  const [show4, setShow4] = React.useState(false);
  const [show5, setShow5] = React.useState(false);
  const [show6, setShow6] = React.useState(false);
  const [show7, setShow7] = React.useState(false);
  const [show8, setShow8] = React.useState(false);
  const [show9, setShow9] = React.useState(false);
  const [show10, setShow10] = React.useState(false);
  const [show11, setShow11] = React.useState(false);
  const [add, setAdd] = React.useState(1);

  const onShow = () => {
    setShow(!show);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow1 = () => {
    setShow(false);
    setShow1(!show1);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow2 = () => {
    setShow(false);
    setShow1(false);
    setShow2(!show2);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow3 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(!show3);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow4 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(!show4);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow5 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(!show5);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow6 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(!show6);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow7 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(!show7);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow8 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(!show8);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow9 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(!show9);
    setShow10(false);
    setShow11(false);
  };
  const onShow10 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(!show10);
    setShow11(false);
  };
  return (
    <div className="container">
      <div className="read">
        <div className="readLeft">
          <h2 className="read__title">Мазмұны</h2>
          <ul className="read__menu">
            <li onClick={() => onShow()} className="read__item">
              <h3 className="read__menu-title">Лекция 1. Машиналық оқытудың негіздері.</h3>
              {show && (
                <ul>
                  <li onClick={() => setAdd(1)}>Машиналық оқыту дегеніміз не?</li>
                  <li onClick={() => setAdd(2)}>Жұмыс істеу принципі</li>
                  <li onClick={() => setAdd(3)}>Машиналық оқытудың класстары</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow1()}>
              <h3 className="read__menu-title">Лекция 2. Машиналық оқытудың логикалық моделі</h3>
              {show1 && (
                <ul>
                  <li onClick={() => setAdd(4)}>Машиналық оқытудың логикалық моделі</li>
                  <li onClick={() => setAdd(5)}>Деректер (Data)</li>
                  <li onClick={() => setAdd(6)}>Алгоритм (Algorithm)</li>
                  <li onClick={() => setAdd(7)}>Машиналық оқытудың негізгі түрлері</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow2()}>
              <h3 className="read__menu-title">
                Лекция 3. Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
              </h3>
              {show2 && (
                <ul>
                  <li onClick={() => setAdd(8)}>
                    Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
                  </li>
                  <li onClick={() => setAdd(9)}>Нейрондық желілер және терең оқыту</li>
                  <li onClick={() => setAdd(10)}>Бақыланатын және бақыланбайтын оқыту</li>
                  <li onClick={() => setAdd(11)}>Жіктеу және регрессия</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow3()}>
              <h3 className="read__menu-title">
                Лекция 4. Расс-Лассо регрессиясы: олардың дұрыс қолдануы
              </h3>
              {show3 && (
                <ul>
                  <li onClick={() => setAdd(12)}>
                    Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керек?
                  </li>
                  <li onClick={() => setAdd(13)}>
                    Бақыланатын машиналық оқыту: Регрессия Vs классификациясы
                  </li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow4()}>
              <h3 className="read__menu-title">
                Лекция 5. Машиналық оқытудың логикалық моделі. Ранжирлеу шежіресі
              </h3>
              {show4 && (
                <ul>
                  <li onClick={() => setAdd(14)}>
                    Машинаны оқыту негіздері: сызықтық регрессия және логикалық регрессия
                  </li>
                  <li onClick={() => setAdd(15)}>Регрессия: сызықтық және логистикалық</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow5()}>
              <h3 className="read__menu-title">Лекция 6. Machine Learning VS Адамды оқыту</h3>
              {show5 && (
                <ul>
                  <li onClick={() => setAdd(16)}>Machine Learning VS Адамды оқыту</li>
                  <li onClick={() => setAdd(17)}>Адамның білімін түсінуден бастайық.</li>
                  <li onClick={() => setAdd(18)}>
                    Осындай нәрсені үйренгенде біздің нейрондық желілеріміз қандай болады?
                  </li>
                  <li onClick={() => setAdd(19)}>Біздің миымыз бір нәрсені қалай біледі?</li>
                  <li onClick={() => setAdd(20)}>Машиналар қалай үйренеді?</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow6}>
              <h3 className="read__menu-title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері.
              </h3>
              {show6 && (
                <ul>
                  <li onClick={() => setAdd(21)}>
                    Статистикалық шешім қабылдау әдістері тәуекелге ұшырайды
                  </li>
                  <li>fds</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => setAdd(22)}>
              <h3 className="read__menu-title">Лекция 8. Машиналық оқытудың қолдану ауқымы</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(23)}>
              <h3 className="read__menu-title">Лекция 9. Data Mining модельдері</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(24)}>
              <h3 className="read__menu-title">Лекция 10. Data Mining модельдерінің түрлері</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(25)}>
              <h3 className="read__menu-title">
                Лекция 11. Білімдерді ұсыну үшін семантикалық желілер.
              </h3>
            </li>
            <li className="read__item" onClick={() => onShow7()}>
              <h3 className="read__menu-title">
                Лекция 12. Критериалды әдістер. Шешімді қабылдаудың кейбір әдістемелері.
              </h3>
              {show7 && (
                <ul>
                  <li onClick={() => setAdd(26)}>Шешім көпкритериалды қабылдауының оқу мысалы.</li>
                  <li onClick={() => setAdd(27)}>Критериалды әдістер</li>
                  <li onClick={() => setAdd(28)}>Таңдау есебі</li>
                  <li onClick={() => setAdd(29)}>Өлшеуіш шкалалар</li>
                  <li onClick={() => setAdd(30)}>Шешімді қабылдаудың кейбір әдістемелері</li>
                  <li onClick={() => setAdd(31)}>Шешім көпкритериалды қабылдауының оқу мысалы</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow8()}>
              <h3 className="read__menu-title">Лекция 13. Ықтималдық әдістер. Нейрон желілері</h3>
              {show8 && (
                <ul>
                  <li onClick={() => setAdd(32)}>Ықтималдық әдістер.</li>
                  <li onClick={() => setAdd(33)}>Нейрон желілері</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow9()}>
              <h3 className="read__menu-title">
                Лекция 14. Сараптамалық жүйелермен жұмыс істеу технологиясы.
              </h3>
              {show9 && (
                <ul>
                  <li onClick={() => setAdd(34)}>Сараптамалық жүйелердің құрылымы және жіктеуі.</li>
                  <li onClick={() => setAdd(35)}>
                    Сараптамалық жүйелермен жұмыс істеу технологиясы
                  </li>
                  <li onClick={() => setAdd(36)}>Сараптамалық жүйелердің құрылымы</li>
                  <li onClick={() => setAdd(37)}>Сараптамалық жүйелердің жіктеуі</li>
                  <li onClick={() => setAdd(38)}>Шешілетін міндеті бойынша жіктеу</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow10()}>
              <h3 className="read__menu-title read__menu-title2">
                Лекция 15. Сараптамалық жүйелерді жасау технологиясы.
              </h3>
              {show10 && (
                <ul>
                  <li onClick={() => setAdd(39)}>Құрастырудың негізгі кезеңдері.</li>
                  <li onClick={() => setAdd(40)}>Кейбір тәжірибелік ұсыныстар</li>
                </ul>
              )}
            </li>
          </ul>
        </div>
        <div className="readRight">
          {add === 1 && (
            <>
              <h2 className="readRight__title">Лекция 1. Машиналық оқытудың негіздері</h2>
              <p className="readRight__descr">
                <h3>1. Лекция мақсаты мен міндеттері: Машиналық оқытудың негіздері,</h3>машинаны
                оқытудың негізгі принциптері, әдістері мен міндеттері оқыту, логикалық машиналық
                оқыту модельдері; метрикалық моделі машина оқыту және машиналық оқытудың ықтималды
                модельдері. <h3> 2. Лекция мазмұны:</h3>
                <li>1. Машиналық оқытудың жұмыс істеу принциптері.</li>
                <li>2. Машиналық оқытудың класстары.</li>{' '}
                <h3>3. Оқытудың техникалық құралдары: Zoom онлайн оқыту платформасы </h3>
                <h3>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері:</h3> баяндау, сұрақ –
                жауап, түсіндіру, кіріспе лекция <br />
                <h3>Машиналық оқыту дегеніміз не?</h3>{' '}
                <p>
                  Машиналық оқыту (Engl. Machine learning, ML) - бұл жасанды интеллект әдістерінің
                  классы. Оның сипаттамасы мәселені тікелей шешу емес, көптеген ұқсас мәселелерге
                  шешім қолдану процесінде жаттығу болып табылады. Мұндай әдістерді құру үшін
                  математикалық статистика, сандық әдістер, оңтайландыру әдістері, ықтималдық
                  теориясы, графтар теориясы, сандық түрде мәліметтермен жұмыс істеудің әртүрлі
                  әдістері қолданылады. Машиналық оқыту күнделікті біздің өмірімізде көптеген
                  қолданыстарға ие болуда. Оның қолданылуының кеңдігіне байланысты IT технологияда
                  маңызды орын алады. Қазіргі кезде машиналық оқыту әдістеріне негізделген кейбір
                  қосымшалар жақсы жұмыс істейді. Жасанды Интеллект туралы мақаланы мына жерден оқи
                  аласыз:{' '}
                  <a
                    href="https://oilay.kz/%d0%b6%d0%b0%d1%81%d0%b0%d0%bd%d0%b4%d1%8b-%d0%b8%d0%bd%d1%82%d0%b5%d0%bb%d0%bb%d0%b5%d0%ba%d1%82/"
                    style={{ color: 'green' }}>
                    Жасанды Интеллект қалай пайда болды?{' '}
                  </a>
                  Машиналық оқыту жасанды интеллекттің бір саласы болып саналады. Оның негізгі
                  идеясы компьютер алдын-ала жазылған алгоритмді қолданумен ғана шектеліп қоймай,
                  мәселені өздігімен шешуді үйрену. Кез келген жұмыс машиналық оқыту технологиясын
                  шартты түрде қол жетімділікке байланысты үш деңгейдің біреуіне тағайындалуы
                  мүмкін. Бірінші деңгей - бұл Google немесе IBM деңгейіндегі әртүрлі технологиялық
                  алыптар үшін қол жетімді болған кезде. Екінші деңгей - белгілі бір білімі бар
                  студент оны қолдана алатын кезде. Үшінші деңгей - бұл тіпті ата-әжелер оны басқара
                  алатын кез. Қазір машиналық оқыту екінші және үшінші деңгейлердің түйіскен
                  жерінде, осы технологияның көмегімен әлемнің өзгеру қарқыны күн сайын артып
                  келеді.
                </p>
              </p>
            </>
          )}
          {add === 2 && (
            <>
              <h2 className="readRight__title">Жұмыс істеу принципі</h2>
              <p>
                <p>
                  Машиналық оқыту тапсырмаларының көпшілігін “бақыланатын оқытуға” (supervised
                  learning) және “бақыланбайтын оқытуға” (unsupervised learning) бөлуге болады.
                  «Бақыланатын» түсінігінде адамның мәліметтерді өңдеуге араласуы деп түсініледі.
                  Адам машиналық оқытуға араласқан кезде бізде белгілі бір болжамалы ақпараттар бар.
                  Ал адамсыз оқу кезінде бізде тек анықталатын мәліметтер болады.
                </p>{' '}
                <p>
                  1. Бақыланатын оқыту. Мысалы, бізде Алматы қаласындағы 10 000 пәтерлер туралы
                  мәліметтер бар. Сондай-ақ, әр пәтердің ауданы, бөлмелер саны, орналасқан қабаты,
                  автотұрақтың болуы, метро станциясына дейінгі қашықтық және басқалары белгілі.
                  Сонымен қатар, әр пәтердің құны белгілі. Біздің міндетіміз - осы белгілер
                  негізінде пәтердің құнын болжай алатын модель құру. Бұл бақыланатын оқытудың
                  классикалық мысалы. Мұндай тапсырма регрессиялық есеп деп аталады. Басқа мысалдар:
                  әр түрлі медициналық көрсеткіштерге негізделген ақпараттар бойынша науқаста
                  қатерлі ісіктің бар-жоғын болжау. Немесе электрондық поштаның мәтініне сүйене
                  отырып, бұл спамның ықтималдығын болжау және т.б.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img1.png" alt="" />
                  http://www.machinelearning.ru/
                </p>
                <p>
                  2. Бақыланбайтын оқыту. Бұл оқыту өте қызықты болып келеді. Себебі біз нақты дұрыс
                  жауабын білмейміз. Мысалы, бізге белгілі бір адамдардың бойы мен салмағы туралы
                  деректер берілсін. Деректерді 3 санатқа (немесе топ) топтастыру керек. Сонымен
                  қатар адамдардың әр санаты үшін қолайлы өлшемдегі көйлек жасау керек. Бұл тапсырма
                  класстерлік тапсырмасы деп аталады.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img2.png" alt="" />
                  https://www.intuit.ru/
                </p>
              </p>
            </>
          )}
          {add === 3 && (
            <>
              <h2 className="readRight__title">Машиналық оқытудың класстары</h2>
              <p>
                <p>
                  <i>Регрессиялық мәселелер.</i> Әр түрлі белгілерге сүйене отырып, материалдық
                  реакцияны болжау. Басқаша айтқанда, жауап 1, 5, 23.575 немесе кез-келген нақты сан
                  болуы мүмкін.
                </p>{' '}
                <p>
                  <i>Жіктеу мәселесі.</i> Әр түрлі белгілер негізінде категориялық жауапты болжау.
                  Мысалдар: мәтінді қолжазбамен тану, фотосуреттегі адамның немесе мысықтың
                  бар-жоғын анықтау.
                </p>
                <p>
                  <i>Класстерлік мәселелер:</i> мәліметтерді ұқсас категорияларға бөлу. Мысалдар:
                  ұялы байланыс операторы клиенттерінің төлем қабілеттілігі бойынша бөлу, ғарыш
                  объектілерінің ұқсас заттарға бөлу және т.б. (галактикалар, планеталар, жұлдыздар
                  және басқалар).
                </p>{' '}
                <p>
                  <i>Өлшемді азайту мәселесі:</i>
                  біздің мәліметтерімізді N белгілерімен емес, кішірек санмен сипаттауға үйрену
                  (әдетте кейінгі визуализация үшін 2-3). Мысал ретінде, визуализация қажеттілігінен
                  басқа, деректерді сығуды келтіруге болады.
                </p>
                <p>
                  <i>Аномалияларды анықтауға байланысты мәселелер:</i> белгілер негізінде
                  аномалияларды «аномалиялардан» айыра білуді үйрену. Бұл міндеттің жіктеу
                  мәселесінен еш айырмашылығы жоқ сияқты. Бірақ аномалияны анықтаудың ерекшелігі -
                  бізде модельді үйрету үшін аномалиялардың мысалдары өте аз немесе мүлдем жоқ.
                  Сондықтан біз классификация мәселесін шеше алмаймыз.
                </p>{' '}
                <br />
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3> 1-деңгей.</h3> <li> • “Машиналық оқыту” терминіне анықтама беріңіз.</li>
                <li>• Жасанды интеллект түсінігіне анықтама беріңіз.</li> <h3>2-деңгей.</h3>{' '}
                <li>• Машиналық оқытудың жұмыс істеу принциптері қандай?</li>
                <li> • Машиналық оқытудың класстары қанша?</li>
                <h3>3-деңгей.</h3> <li>• Машиналық оқыту дегеніміз не?</li>
                <li> • Жасанды интеллект дегенміз не?</li>
                <li>• Машиналық оқытудың класстарын атаңыз?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <p>Тірек векторлары ұғымы. Тұрақты c таңдау бойынша ұсыныстар?</p>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <p>Сызықтық классификатор, шығындардың шекті функциясының үздіксіз жуықтауы. </p>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 4 && (
            <>
              <h2 className="readRight__title">Лекция 2. Машиналық оқытудың логикалық моделі</h2>
              <p>
                <h3>1. Лекция мақсаты мен міндеттері: Машиналық оқытудың логикалық моделі,</h3>{' '}
                шешімдер шежіресінің негізгі принциптері, әдістері мен міндеттері оқыту.{' '}
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Машиналық оқытудың логикалық модельдері.</li>
                <li>2. Шешімдер шежіресі.</li>
                <h3>3. Оқытудың техникалық құралдары:</h3>
                Zoom онлайн оқыту платформасы
                <h3>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </h3>
                баяндау, сұрақ – жауап, түсіндіру, кіріспе лекция <br />
                <p>
                  Машиналық оқыту (Machine learning, ML) – жасанды интеллект саласындағы әдістер
                  жиынтығы, ӛз тәжірибесінен үйренетін машинаны жасау үшін қолданылатын алгоритмдер
                  жиынтығы. Оқыту ретінде машина үлкен кӛлемді деректерді ӛңдейді және олардан
                  заңдылықтарды табады. Data science және Machine learning ұғымдарын шатастырмаңыз.
                  Бұл құралдар кӛптеген жолдармен қиылысады, бірақ олар әр түрлі және әрқайсысы ӛз
                  міндеттерімен. Сондай-ақ, осы мақалада біз машиналық оқытуды, жасанды интеллект
                  пен нейрондық желілерді бір үйіндіге қалай араластырмауға болатындығын бір рет
                  түсінеміз.
                </p>{' '}
                <p>
                  Artificial (жасанды интеллект, АИ) – адамның ақыл-ойына ұқсас бағдарламалар
                  жасауға кӛмектесетін әртүрлі технологиялық және ғылыми шешімдер мен әдістер.
                  Жасанды интеллект кӛптеген құралдарды қамтиды, Data, Science Machine деректер
                  туралы ғылым Машиналық оқыту.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img3.png" alt="" />
                </p>{' '}
                <p>
                  Data science-деректерді талдау және олардан құнды ақпарат, білім алу әдістері
                  туралы ғылым. Ол машиналық оқыту және ойлау туралы ғылым (Cognitive Science)
                  сияқты салалармен, сондай-ақ үлкен деректермен (Big Data) жұмыс істеуге арналған
                  технологиялармен қиылысады. Data science жұмысының нәтижесі-талданған деректер
                  және деректерді одан әрі ӛңдеу, сұрыптау, іріктеу, іздеу үшін дұрыс тәсілді табу.
                </p>{' '}
                <p>
                  Мысалы, кәсіпорынның қаржылық шығындары мен контрагенттердің деректері туралы
                  келісілмеген мәліметтер бар. Бұл деректер аралық банктік деректер немесе
                  операциялардың күні мен уақыты арқылы ғана ӛзара байланысты. Терең машиналық
                  талдау нәтижесінде аралық деректер арқылы қай контрагенттің ең қымбат екенін
                  анықтауға болады.{' '}
                </p>
                <p>
                  Машиналық оқыту немесе Machine learning – AI бӛлімдерінің бірі, Алгоритмдер
                  компьютерге қатаң белгіленген ережелерді сақтамай мәліметтер негізінде қорытынды
                  жасауға мүмкіндік береді. Яғни, машина күрделі және кӛп параметрлік есептерде
                  үлгіні таба алады (оны адам миы шеше алмайды), осылайша нақты жауаптарды таба
                  алады. Нәтижесінде - дұрыс болжау.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img4.png" alt="" />
                </p>{' '}
                <p>
                  {' '}
                  Жасанды нейрондардың кӛмегімен нейрондық желі белгілі бір мәселені шешетін адам
                  миының (нейрондардың) жұмысын модельдейді, алдыңғы тәжірибені ескере отырып
                  ӛзін-ӛзі үйретеді. Әр жолы ол аз қателіктер жібереді. Нейрондық желілер-бұл жеке
                  құрал емес, машиналық оқытудың бір түрі.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img5.png" alt="" />
                </p>{' '}
                <p>Машиналық оқытудың мақсаты және оны қолдану аясы</p>{' '}
                <p>
                  Машиналық оқытудың мақсаты әртүрлі күрделі аналитикалық мәселелерді шешуді ішінара
                  немесе тіпті толық автоматтандыру болып табылады.
                </p>{' '}
                <p>
                  Сондықтан, ең алдымен, Машиналық оқыту бизнес иелері, Маркетологтар мен
                  қызметкерлер ӛз жұмысында дұрыс шешім қабылдауы үшін кіріспе мәліметтер негізінде
                  ең дәл болжам жасауға арналған. Оқыту нәтижесінде машина нәтижені болжай алады,
                  оны есте сақтайды, қажет болған жағдайда оны ойнатады, бірнеше нұсқаның ең
                  жақсысын таңдай алады.
                </p>{' '}
                <p>
                  {' '}
                  Қазіргі уақытта Машиналық оқыту банктерден, мейрамханалардан, жанармай құю
                  бекеттерінен бастап ӛндірістегі роботтарға дейін кӛптеген қосымшаларды қамтиды.
                  Күн сайын дерлік пайда болатын жаңа міндеттер машиналық оқытудың жаңа бағыттарының
                  пайда болуына әкеледі.
                </p>{' '}
                <p>Сапалы Машиналық оқыту үшін не қажет</p> Машиналық оқыту үш китке негізделген:{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img6.png" alt="" />
                </p>{' '}
                <p>
                  А) деректер - біз әдетте клиенттен сұрайтын негізгі ақпарат. Бұған жүйені оқыту
                  қажет кез-келген мәліметтер жиынтығы кіреді;
                </p>{' '}
                <p>
                  Б) белгілері – жұмыстың бұл бӛлігі клиентпен тығыз ынтымақтастықта жүзеге
                  асырылады. Біз бизнестің негізгі қажеттіліктерін анықтаймыз және оқыту нәтижесінде
                  жүйенің қандай сипаттамалары мен қасиеттерін бақылау керектігін бірлесіп шешеміз;
                </p>{' '}
                <p>
                  В) алгоритм-қойылған бизнес-міндеттерді шешу үшін әдісті таңдау. Бұл міндетті біз
                  клиенттің қатысуынсыз, қызметкерлеріміздің күшімен шешеміз.
                </p>
              </p>
            </>
          )}
          {add === 5 && (
            <>
              <h2 className="readRight__title"> Деректер (Data)</h2>
              <p>
                <p>
                  Жүйеге неғұрлым кӛп деректерді жүктейтін болсақ, ол соғұрлым жақсы және дәл жұмыс
                  істейді. Ӛздері деректер тікелей тәуелді міндеттері алдымызда машинамен.
                </p>{' '}
                <p>
                  {' '}
                  Мысалы, поштаны маңызды хаттардан спамды сүзуге үйрету үшін мысалдар қажет.
                  Олардың үлгісі неғұрлым кӛп болса, соғұрлым жақсы. Осылайша, жүйе спамның
                  белгілері ретінде белгілі бір сӛздерді – "сатып алу", "қосымша табыс", "үйде ақша
                  табу", "ақша", "несие", "әлеуетті арттыру" – қабылдауды және осындай хаттарды жеке
                  қалтаға жіберуді үйренеді.
                </p>{' '}
                <p>
                  Басқа тапсырмалар үшін бастапқы деректер басқаша болады. Сатып алушыға оны
                  қызықтыруы мүмкін тауарларға кеңес беру үшін сізге сатып алу тарихы қажет.
                  Нарықтағы бағаның ӛзгеруін болжау үшін баға тарихы қажет.
                </p>{' '}
                <p>
                  Жұмыстың ең қиын және сонымен бірге кӛлемді бӛлігі-осы мәліметтерді жинау.
                  Деректерді жинаудың екі әдісі бар: қолмен және автоматты түрде. Қол әдісі
                  әлдеқайда баяу,бірақ дәл. Автоматты әлдеқайда жылдам, бірақ сонымен бірге кӛп
                  қателіктер жібереді.
                </p>{' '}
                <p>
                  Деректердің жақсы үлгісі қымбатқа түседі, ӛйткені ол сіз болжаудың дәлдігіне жауап
                  береді. Деректерді жинауды адамның ойлауымен шектемеу ӛте маңызды, бірақ шашыраңқы
                  ақпаратты барынша қамтамасыз ету ӛте маңызды, ӛйткені машина адам байқамайтын
                  жерде пайда мен ӛзара байланысты кӛре алады.
                </p>{' '}
                <b> Белгілері</b>(қасиеттері, ӛлшемдері, ерекшеліктері, ерекшеліктері, features).{' '}
                <p>
                  Мысалы, автомобиль жағдайында белгілер жүгіріс, цилиндрлер саны, мүмкін болатын ең
                  жоғары жылдамдық болады. Сатып алушы жағдайында: Жасы, жынысы, білімі, табыс
                  деңгейі және т.б. Жануарлар жағдайында: тұқымы, бойы, құйрықтың ұшынан мұрынға
                  дейінгі ұзындығы, түсі.
                </p>{' '}
                <p>
                  Қасиеттердің дұрыстығы сіз алған нәтижеге тікелей әсер ететіндіктен, оларды таңдау
                  кӛбінесе Машиналық оқыту процесіне қарағанда кӛп уақытты алады. Мұнда
                  бастысы-машиналық қабылдауды бұрмаламау үшін жеке пікірге негізделген сипаттамалар
                  жиынтығын шектемеу. Онымен бірге соңғы нәтиже.
                </p>{' '}
                <p>
                  Белгілері бойынша құрастырылған датасет мысалы:
                  https://github.com/php-ai/php-ml/blob/master/data/wine.csv Бұл деректер Италияның
                  бір аймағында ӛсірілген, бірақ үш түрлі сорттан алынған шараптарды химиялық талдау
                  нәтижелері болып табылады. Талдау шараптың үш түрінің әрқайсысында кездесетін 13
                  компонентті анықтады. Шараптың компоненттеріне сүйене отырып, оның класын
                  анықтауға болады.
                </p>
              </p>
            </>
          )}
          {add === 6 && (
            <>
              <h2 className="readRight__title">Алгоритм (Algorithm)</h2>
              <p>
                <p>
                  {' '}
                  Белгілі бір мәселені шешу үшін жүйелі операциялар жүйесі. Басқаша айтқанда-шешім
                  әдісі. Әрбір нақты тапсырма үшін жеке талғампаз алгоритмді таңдауға болады.
                  Бастапқы деректерді ӛңдеу нәтижесінің жылдамдығы мен дәлдігі таңдалған әдіске
                  тікелей байланысты.
                </p>{' '}
                <p>
                  Тіпті тамаша жазылған Алгоритмдер де қойылған бизнес-міндеттерді шешуге
                  кӛмектеспейтін жағдайлар да болады. Мысалы, егер сіз сайттағы кросс-сатылымдардың
                  санын кӛбейтуді қаласаңыз және бұл үшін сізге ӛнімді ұсыну алгоритмін жақсарту
                  қажет екеніне сенімді болсаңыз. Бірақ сіздің клиенттеріңіз іздеуден тікелей
                  сілтемелер арқылы келетінін және сайтта кӛрсетілген басқа ӛнімдерді сатып алу
                  бойынша кеңестерді елемейтінін білмейсіз. Сондықтан, жұмысқа кіріспес бұрын, біз
                  клиенттің проблемасының нақты себебін анықтаймыз. Егер ол техникалық болса, оны
                  шешуге қуана кӛмектеседі.
                </p>
              </p>
            </>
          )}
          {add === 7 && (
            <>
              <h2 className="readRight__title">Машиналық оқытудың негізгі түрлері</h2>
              <p>
                Бұл мақалада біз машиналық оқытудың негізгі түрлерін қысқаша қарастырамыз, болашақта
                олардың әрқайсысына жеке егжей-тегжейлі материал арнаймыз.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img7.png" alt="" />
                </p>
                <p>
                  {' '}
                  Мұғалімнің болу белгісі бойынша оқыту мұғаліммен (Supervised Learning), мұғалімсіз
                  (Unsupervised Learning) және арматурамен (Reinforcement Learning) оқуға бӛлінеді.
                </p>{' '}
                <li>
                  {' '}
                  - Мұғаліммен бірге оқыту машинаны заттарды немесе сигналдарды тануға үйрету қажет
                  болған кезде қолданылады. Мұғаліммен бірге оқытудың жалпы қағидасы - "міне, есік,
                  бұл да есік, және бұл да есік".
                </li>{' '}
                <li>
                  - Мұғалімсіз оқыту "бұл нәрсе басқалармен бірдей"принципін қолданады. Алгоритмдер
                  ұқсастықтарды зерттейді және айырмашылықты анықтап, аномалияны анықтай алады,
                  Ерекше немесе ұқсас емес нәрсені таниды.
                </li>
                <li>
                  {' '}
                  - Арматуралық оқыту машинаның алдында тұрған жерде қолданылады-ісәрекеттің
                  кӛптеген нұсқалары бар сыртқы ортада тапсырмаларды дұрыс орындау. Мысалы,
                  компьютерлік ойындарда, сауда операцияларында, ұшқышсыз техникаға арналған.
                </li>{' '}
                <p>Қолданылатын алгоритмдердің түріне сәйкес екі түрді бӛлуге болады:</p>{' '}
                <p>
                  А) классикалық оқыту-негізінен 50 жылдан астам уақыт бұрын статистикалық бюролар
                  үшін әзірленген белгілі және жақсы зерттелген оқыту алгоритмдері. Ең алдымен
                  деректермен жұмыс істеу міндеттеріне сәйкес келеді: жіктеу, кластерлеу, регрессия
                  және т.б. болжау, клиенттерді сегменттеу және т. б. үшін қолданылады.
                </p>{' '}
                <p>
                  {' '}
                  Б) нейрондық желілер және терең оқыту – машиналық оқытудың ең заманауи тәсілі.
                  Нейрондық желілер суреттер мен бейнелерді тану немесе құру, күрделі басқару немесе
                  шешім қабылдау алгоритмдері, машиналық аударма және ұқсас күрделі тапсырмалар
                  қажет болған жерде қолданылады. Бірнеше тәсілдерді біріктіруге болады, содан кейін
                  сіз модельдер ансамбльдерін аласыз.
                </p>{' '}
                <h3> Машиналық оқытудың басты пайдасы</h3>{' '}
                <p>
                  Шебер тәсілмен машиналық оқытудың әртүрлі түрлерін біріктіре отырып, күнделікті
                  бизнес-процестердің кӛпшілігін автоматтандыруға қол жеткізуге болады. Басқаша
                  айтқанда, Машиналық оқыту арқылы дайындалған алгоритмдер мен роботтар күнделікті
                  жұмысты орындай алады. Барлық шығармашылық бӛлігі адамдар үшін қалады:
                  стратегияларды құру, келіссӛздер жүргізу, келісімшарттар жасау және т.б. Бұл
                  маңызды фактор, ӛйткені машина ӛзіне берілген шеңберден шыға алмайды, ал адам миы
                  ойланбастан ойлана алады.
                </p>{' '}
                <p>
                  Машиналардың сипаттамаларын сапалы талдау сізге клиенттерді тарту үшін кӛп күш
                  жұмсау керектігін айтады, ал адамдардың міндеті – бұл күшжігердің стратегиясын
                  ойластыру. Сіздің бизнес міндеттеріңізді шешу үшін машиналық оқыту мен жасанды
                  интеллектті қалай жақсы пайдалану керектігін білгіңіз келе ме? Бізге хабарласыңыз,
                  Сіздің бизнесіңізге ең қолайлы нұсқаны айтыңыз.
                </p>{' '}
                <h3>5. Деңгейлік тапсырмалар:</h3> <h3>1-деңгей.</h3>{' '}
                <li>• Жасанды интеллект дегеніміз не?</li> <li> Data science дегеніміз не?</li>{' '}
                <h3>2-деңгей.</h3> <li>Нейронды желі дегеніміз не?</li>
                <li>Нейронды желінің қызметі қандай?</li> <h3>3-деңгей.</h3>{' '}
                <li>Машиналық оқыту мақсаты мен қолдану саласы қандай?</li>{' '}
                <li> Машиналық оқытудың үш құрамдас бӛліктері?</li>
                <li>Машиналық оқытуда берілгендермен қалай жұмыс жасайды?</li>{' '}
                <h3>6. БОӨЖ тапсырмалары:</h3> <p>РВМ тиісті векторларының әдісі</p>{' '}
                <h3>7. БӨЖ тапсырмалары: </h3>
                <p>Ықтималдылықтың максималды әдісімен байланыс.</p>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 8 && (
            <>
              <h2 className="readRight__title">
                Лекция 3. Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
              </h2>
              <p>
                <p>
                  <b> 1. Лекция мақсаты мен міндеттері: </b>Машиналық оқыту, жасанды интеллект және
                  нейрондық желілердің айырмашылықтарын анықтау.{' '}
                </p>
                <h3>2. Лекция мазмұны:</h3> <li>1. Машиналық оқыту, жасанды интеллект.</li>
                <li> 2. Нейрондық желілер. </li>
                <p>
                  <b>3. Оқытудың техникалық құралдары: </b>Zoom онлайн оқыту платформасы
                </p>{' '}
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері:</b> баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>{' '}
                <p>
                  Машинамен оқыту бір нәрсені өте қарапайым деңгейде жасайды. Ол белгілі немесе
                  белгісіз мәліметтермен қоректенеді және берілген тапсырманың оңтайлы нәтижелерін
                  табады. Инженер тапсырманы және пайдаланылатын деректер көзін көрсетуі керек.
                  Мысалы, суреттердегі мәтінді сәйкестендіру үшін OCR (суреттерді оптикалық тану)
                  кескіндер жиынтығын немесе оларды табуға болатын орынмен қамтамасыз етілуі керек,
                  тұтынушы профилі клиенттің деректерін талап етеді, ал жолдағы сәйкестендіретін
                  жолдар суреттің суретін талап етеді. Бұл модельдерді құрастырып, үйреткеннен
                  кейін, екіншісінің тапсырмасын орындауға тырысу мүмкін емес. Бұл жерде машиналық
                  оқыту мен шынайы жасанды интеллект ерекшеленеді.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img8.png" alt="" />
                </p>{' '}
                <p>
                  Машинамен жұмыс жасанды интеллектке балама ретінде жиі айтылады. Алайда, AI мен
                  машиналық оқытуды теңестіру Ferrari-ді оның берілуіне теңестіруге ұқсайды. Беріліс
                  Ferrari-нің маңызды құрамдас бөлігі болып табылады, бірақ жай ғана берілу сізде
                  Ferrari бар дегенді білдірмейді; бұл біреуін құруға бір қадам ғана. Бұл мысалды
                  машинамен үйреніңіз. Біздің Ferrari (AI) құру үшін біз жоғары сапалы
                  автомобильдердің (машиналық оқыту) құрамдас бөліктерін жинауымыз керек.
                </p>{' '}
                <p>
                  Қазіргі уақытта компаниялар мен зерттеушілер өздігінен жүретін автомобильдер,
                  автоматтандырылған акциялар саудасы немесе ауылшаруашылық өнімдерін талдау сияқты
                  нақты мәселелерді шешу үшін әртүрлі машиналарды оқыту әдістерін біріктіреді. Бұл
                  шынайы жасанды интеллект емес. Шын AI - бұл машина бұрын-соңды белгісіз кез-келген
                  мәселені шеше алатын кез. Ал машиналық оқыту белгілі немесе белгісіз мәліметтерді
                  бере отырып, белгілі және белгілі бір мәселені шешуге арналған.
                </p>{' '}
                <p>
                  Автокөліктердің ұқсастығына тоқталатын болсақ, компаниялар 'ВИПОН' сияқты
                  'автомобильдің алғашқы моделін шығару үшін төмен сапалы компоненттері бар негізгі'
                  AI 'құрды, бірақ 2019 жылы Ford Model T моделін кім жұмысқа енгізеді? Бұл мысалдар
                  - бұл көбінесе бірге жасаушылар «AI» деп аталатын, машинамен жұмыс істейтін
                  көптеген желі. Алайда, бұл шынайы жасанды интеллект емес; шынайы жасанды интеллект
                  әлі алда.
                </p>
              </p>
            </>
          )}
          {add === 9 && (
            <>
              <h2 className="readRight__title">Нейрондық желілер және терең оқыту</h2>
              <p>
                <p>
                  {' '}
                  Қазіргі уақытта AI, машиналық оқыту немесе компьютерлік ғылымның кез-келген басқа
                  тақырыбын талқылау кезінде сіз «терең оқыту» немесе «нейрондық желі» тіркестерін
                  кез-келген жерде кездестіресіз. Нейрондық желілер - бұл машинаны оқытудың ең
                  төменгі нұсқасы, бірақ оның нұсқасы неғұрлым заманауи машиналық оқыту міндеттері
                  қалай шешілетіндігі. Нейрондық жүйенің мақсаты - адамның миының сыртқы
                  ынталандыруды көру, есту және басқа биологиялық реакцияларға қалай әсер ететінін
                  елестету. Адамның миы өте күрделі тақырып болғандықтан, нейрондық желілер де бар,
                  сондықтан мен сіздер туралы терең түсінікке ие болу үшін тек қысқаша шолу
                  жасаймын.
                </p>{' '}
                <p>
                  Нейрондық желілер ортасында «жасырын» қабаттармен бірге кіріс және шығыс қабатын
                  қолданады. Бұл орта қабаттар алдыңғы қабаттағы мәліметтер негізінде шешім
                  қабылдайды және келесі қабатқа «таңдау» ықтималдығын жариялайды. Қарапайым
                  нейрондық желіде бұл ағын - жасырын-шығыс. «Терең оқыту» нейрондық желілер - бұл
                  бірнеше жасырын қабаттары бар нейрондық желілер. Бұл шатастыратын сияқты, бірақ
                  мидың нысанды қалай тани алатындығы туралы ойланыңыз. Алдымен ол пішінді алады,
                  содан кейін су бөтелкесі, шляпа немесе кез-келген зат болу ықтималдығын шешеді.
                  Бұл нейрондық желіге мысал, бірақ көп жағдайда формасы (бір қабаты) жеткіліксіз.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img9.png" alt="" />
                </p>{' '}
                <p>
                  Содан кейін сіздің миыңыз түс, мөлдірлік, белгілер сияқты басқа факторларға сүйене
                  отырып шешім қабылдайды, тізім жалғасады. Мұны терең үйрету еліктеуге тырысады.
                  Қарапайым екі қабатты терең білім беру желісінде біз пішін сияқты бір қабатты
                  аламыз, содан кейін келесі қабаттың түсімен үйлесетін су құтысы, шляпалар немесе
                  көлік деген ықтималдылықты анықтаймыз. Бұл шын мәнінде болып жатқанның өте
                  жеңілдетілген нұсқасы, бірақ бұл тұжырымдаманы түсіну өте маңызды. Терең оқыту
                  желілері сіз қалағанша көп қабаттарға ие бола алады және осылайша едәуір күрделі
                  бола алады.
                </p>{' '}
                <p>
                  {' '}
                  Машинамен оқытудың кез-келген мәселесін тереңдетіп оқытуға көшуге болатындығын
                  ескеру керек, бұл жай ғана деректерді баптауға және жинауға көп жұмысты қажет
                  етеді. Терең білім беру желілері үлкен көлемде деректерді сіңіре алатындықтан,
                  оларды ірі корпорациялар жиі қолдана бастады. Олар тіпті кейбір танымдық
                  тапсырмаларды орындау барысында адамдарды ұрып-соғып үлгерді, мысалы IBM
                  компаниясының Уотсон Джеопардиядағы бәсекелестерін ұрып жіберді.
                </p>
              </p>
            </>
          )}
          {add === 10 && (
            <>
              <h2 className="readRight__title">Бақыланатын және бақыланбайтын оқыту</h2>
              <p>
                <p>
                  Машиналық оқыту модель алатын мәліметтер типіне байланысты екі бөлек категорияға
                  бөлінеді. Жетекшілік ететін оқыту құрылымдық деректер жиынтығын пайдаланады, онда
                  машиналар мәліметтерді дұрыс талдағанын көрсететін нәтижелер көрсетілген.
                  Бақылаусыз оқыту құрылымы жоқ және дерексіз мәліметтер жиынтығын алдыңғы
                  мәліметтерге негізделген тапсырма үшін заңдылық немесе қорытынды іздеу үшін
                  пайдаланады.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img10.png" alt="" />
                </p>{' '}
                <p>
                  {' '}
                  Бақылауды үйрену жағдайында сіз машинаны біреу дұрыс жауаппен белгіленген
                  мәліметтер жиынтығын бере отырып, «бақылап отырасыз». Жеміс суреттерінен алманы
                  тану туралы ойланыңыз. Сіз кескіндер жиынтығын құрып, олардың аттарын тиісті
                  жемістерге қоюға болады. Машина модельдің әртүрлі әдістерін үйреніп, тексере
                  бастағанда, оның жеміс түрін анықтай алған-алмағаны туралы нақты жауап (файл атауы
                  негізінде) болады.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img11.png" alt="" />
                </p>
                <p>
                  Екінші жағынан, бақылаусыз оқыту кезінде құрылғы белгісіз деректер жиынтығын
                  немесе «белгісіз» деректерді пайдаланады. Бұл кең статистиканы құру кезінде
                  пайдалы болуы мүмкін. Мысалы, жақында ит пен макаронды жақсы көретін алыс
                  қашықтықтағы адамдарға бағытталған жарнамалық портфолиоларды құру Google және
                  Facebook жарнамалық API-де мүмкін. Бұл машиналар сіздің деректеріңізде бақылаусыз
                  оқумен айналысады, пайдаланушының мінез-құлқы мен алдыңғы әрекеті негізінде
                  осындай профиль түрлерін болжау мүмкіндігіне ие болады.{' '}
                </p>
                <p>
                  Біз біліп отырғанымыздай, бақыланбайтын оқыту әдістері бақыланатын әдістерге
                  қарағанда анағұрлым құнды, өйткені қазіргі қоғамда белгісіз мәліметтер әлдеқайда
                  көп. Бақылаусыз оқыту «дұрыс» немесе «бұрыс» дегенді айтпай-ақ, күрделі деректерді
                  қарап, оны мағыналы жолдармен ұйымдастыра алады. Кез-келген мәселеге кез-келген
                  әдісті қолдануға болатындығын білу маңызды, бірақ жағдайға байланысты бір әдіс,
                  әдетте, басқасына қарағанда жақсы.
                </p>
              </p>
            </>
          )}
          {add === 11 && (
            <>
              <h2 className="readRight__title">Жіктеу және регрессия</h2>
              <p>
                <p>
                  Мәселені шешу үшін машиналық оқытуды қолданғанда көбінесе нысанды анықтау немесе
                  пайдаланушының кіруін болжау сияқты әртүрлі мақсаттар болады. Алма мәселесін
                  шешіңіз - біздің мақсатымыз кескінді жіктеу және берілген мағынасыз пиксельдер
                  жиынтығы қандай жемістерге қатысты болатындығын анықтау болды. Бұл «классификатор»
                  деп айтылады, өйткені ол пиксель аймақтарын жіктейді және қандай жеміс болуы
                  мүмкін екенін шешеді. Содан кейін клиенттің алдын-ала мәліметтері негізінде сатып
                  алушының профилін болжаудың аналитикалық мәселесін шешіңіз. Бұл «регрессия»
                  мәселесі, бұл клиенттің шынымен де макарон сүйетін, алыс қашықтықтағы, иттермен
                  жүретін-жүрмейтіндігіне болжау жасау үшін алдын-ала мәліметтерді қолданумен
                  байланысты.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img12.png" alt="" />
                </p>{' '}
                <p>
                  {' '}
                  Жіктеу дегеніміз - берілген объектіге затбелгі беру міндеті. Мысалы, өздігінен
                  жүретін автомобиль жолдағы объект байкер, басқа көлік, құлатылған ағаш және т.б.
                  екендігін анықтау үшін классификацияны қолданады. Осыны басқа машинамен оқыту
                  модельдерімен бірге қолданушыға дұрыс жауап беру үшін қолдануға болады. жаңадан
                  табылған объект. Классификацияның мақсаты - компьютерлерге объектілерді тануға
                  мүмкіндік беру, әдетте суреттерден емес.
                </p>
                <p>
                  {' '}
                  Екінші жағынан регрессия мәліметтер негізінде статистикалық болжау жасау үшін
                  қолданылады. Өздігінен жүретін автомобильдің мысалында регрессия жолдағы
                  сызықтарды табу үшін қолданылатын технология болуы мүмкін. Жол сызықтарының бәрі
                  бірдей жақсы боялмаған, кейбірінде олқылықтар, жарықтар бар немесе олар тіпті жоқ.
                  Компьютерлік ғалымдар дискіде жиналған алдыңғы жол сызбасы туралы деректер
                  негізінде болмаса да, сызықтың күткен жерін талдау үшін регрессияны қолдана алады.
                </p>{' '}
                <p>
                  Жіктеу және регрессия терең білім алудың жалғыз әдісі емес. Бұл машиналарды оқыту
                  алгоритмдерінің көпшілігіне жататын екі басым категория. Егер сіз машинаны оқыту
                  алгоритмдерін зерттеуді қаласаңыз, мен осы мақаланы ұсынамын.
                </p>{' '}
                <h3>
                  <i> Барлығын бірге әкелу</i>
                </h3>{' '}
                <p>
                  Жасанды интеллект дегеніміз - кеңінен таралған термин, ол көбінесе машиналық
                  оқумен бір-бірімен қолданылады, бірақ іс жүзінде машиналық оқыту - жасанды
                  интеллекттің қосалқы бөлігі. Есіңізде болсын, AI - бұл Ferrari, ал машиналық оқыту
                  - бұл трансмиссия сияқты мүмкін болатын компоненттердің бірі. Компьютерлерді
                  адамдар сияқты ойлауға үйрету AI мақсаты болып табылады және ішінара машиналық
                  оқыту арқылы жүзеге асырылады, бірақ белгілі бір тапсырма үшін.
                </p>
                <p>
                  {' '}
                  Нейрондық желілер - бұл миды еліктеудің басты мақсаты бар машиналық оқытуды жүзеге
                  асыру. Бұл нейрондық желілерде кіріс деректеріне сүйене отырып қорытынды шығару
                  үшін кем дегенде бір қабат бар. Бұл желілерге қосымша қабаттар қосуға болады және
                  нәтиже - терең білім деп аталатын қосымша топтама. Терең оқу дегеніміз бірнеше
                  қабаттан тұратын нейрондық желі дегенді білдіреді.
                </p>{' '}
                <p>
                  Машинамен оқытуды кез-келген жеңілдету үшін болжам жасау үшін мәліметтер қажет
                  болады. Бұл деректер белгіленбеуі немесе белгіленуі мүмкін және нәтижесінде
                  алынған оқыту моделі сәйкесінше бақыланбайтын немесе бақыланатын ретінде белгілі
                  болады. Бақылаусыз оқытудың артықшылықтары бар, мысалы, алдын-ала өңделген
                  деректер жиынтығын жасау үшін адамның араласуын қажет етпейді, бірақ оңтайлы
                  күйіне жету үшін көптеген мәліметтер қажет болатын сияқты кемшіліктерден зардап
                  шегеді.
                </p>{' '}
                <p>
                  Машиналық оқыту оқытудың екі негізгі тәсілін қолданады: классификация және
                  регрессия. Жіктеу мәліметтерді қорытынды жасау және сол объектілерді 'класс' деп
                  белгілеу үшін пайдаланады. Мысалы, акулалардың бейнелері балыққа, ал нәжіс
                  орындыққа жатқызылуы мүмкін. Екінші жағынан регрессия мәліметтерді белгісіздер
                  туралы болжам жасау үшін пайдаланады. Бұған мысал сатып алушыларға қолхаттар
                  туралы мәліметтерді оларға сатып алынған купондарға электрондық пошта арқылы
                  жіберу болып табылады. Бұл технология іс жүзінде әлемнің көптеген ірі азық-түлік
                  дүкендерінде қолданылады.
                </p>
                <p>
                  Машинамен оқытудың осы қысқаша мазмұны сіздің адамыңыздың пән туралы білуіне ықпал
                  етті деп үміттенемін. Машиналық оқыту үлкен математикалық терминдер мен
                  өрнектермен өте қиын болып көрінуі мүмкін. Сонымен, өтпес бұрын үлкен ұғымдарды
                  түсінікті терминдерге бөлуді ұмытпаңыз. Егер сіз осы блогты ұнатсаңыз, менің соңғы
                  жаңалықтарыммен (төмендегі twitter сілтемесі) хабардар болу үшін мені әлеуметтік
                  желілерде қадағалап отырыңыз!
                </p>{' '}
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3> 1-деңгей.</h3> <li>Нейрондық желілер және терең оқыту.</li>
                <li>Бақыланатын және бақыланбайтын оқыту</li>
                <h3> 2-деңгей.</h3>
                <li>Жіктеу дегеніміз не?</li>
                <li>Регрессия дегеніміз не?</li> <h3>6. БОӨЖ тапсырмалары:</h3>{' '}
                <p>
                  Белгілерді таңдау үшін жүйелеу: Lasso SVM, SVM серпімді желісі, SFM, RFM астерлеу.
                  kMeans, MeanShift, DBSCAN, Affinity Propagation.
                </p>{' '}
                <h3>7. БӨЖ тапсырмалары:</h3>{' '}
                <p>
                  Стохастикалық градиент әдісі және ерекше жағдайлар: адаптивті сызықтық элемент
                </p>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 12 && (
            <>
              <h2 className="readRight__title">
                Лекция 4. Расс-Лассо регрессиясы: олардың дұрыс қолдануы
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> OLS сызықтық регрессия туралы түсінік
                  беру. Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керектігін айқындау.
                  Бақыланатын машиналық оқыту: Регрессия Vs классификациясына анықтама беру.
                </p>{' '}
                <h3>2. Лекция мазмұны:</h3> <li>1. Расс-Лассо регрессиясы.</li>{' '}
                <li>2. Жоталардың шығыс функциясы. </li>
                <li>3. Lasso шығындар функциясы </li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b>Zoom онлайн оқыту платформасы
                </p>{' '}
                <p>
                  {' '}
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері:</b> баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>{' '}
                <h3>Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керек? </h3>
                <p>
                  Жақында мен қазіргі кездегі деректанушы ғалымның жоталар мен лассо регрессиясының
                  арасындағы айырмашылықты еске түсіру үшін күресетін мақаласын оқыдым. Бұл
                  лауазымның мақсаты - деректер ғылымымен жаңадан келген және соған ұқсас күресіп
                  жүрген адамдарға кӛмектесу, жақсы идеялар тізбегі мен лассо-регрессияны алуға
                  кӛмектеседі. Бұл лауазымға қарапайым квадраттарды (OLS) және сызықты алгебраны
                  білу ұсынылады
                </p>{' '}
                <h3>Өзіңіз білетін нәрседен бастаңыз</h3>{' '}
                <p>
                  Жоталар мен лассо регрессиясы қарапайым ең кіші квадраттардың сызықтық
                  регрессиясының «модификациясы» болып табылады. OLS бірнеше сызықтық регрессияда
                  біздің шығындар функциясы:
                </p>
                <p style={{ margin: '15px 0 ' }}>
                  <img src="img/img13.png" alt="" />
                </p>{' '}
                <p>
                  Егер жоғарыда айтылғандар сізге түсініксіз болса, онда сізде сызықтық алгебра мен
                  векторлық белгілерде білім болмағандықтан болуы мүмкін. Бұл OLS құны функциясымен
                  таныс болған кезде жақсы болуы мүмкін, егер сіз, ең болмағанда, тӛмендегі түйсікті
                  ұстануыңыз мүмкін. Біздің y мәндеріміз y векторында, х-мәндері X матрицасында, ал
                  сызықтық регрессия коэффициенттеріміз - векторда β.
                </p>{' '}
                <p>
                  Егер сіз осы лауазымға ӛту барысында әлі де шатасып жатсаңыз, бірнеше сызықты
                  регрессияны мұқият түсініп, осы лауазымға оралмас бұрын негізгі сызықтық алгебраны
                  құруды ұсынамын.
                </p>
                <h3>Білгенге сұрақ</h3>{' '}
                <p>
                  OLS сызықтық регрессия - бұл пайдалы әдіс, бірақ бұл әрқашан идеалды әдіс емес.
                  Мысалы, егер бізде сатушылар бар болса ше? Немесе біздің кӛп модельділік модельге
                  қалай әсер етуі мүмкін? Осындай сұрақтар қоюда OLS әрдайым регрессия үшін қолайлы
                  әдіс емес екені белгілі болады. Сызықтық регрессияны кӛп полиноларлықты кӛрсететін
                  қасиеттерде қолданғымыз келеді делік. Мультиколлинарлық біздің дисперсиямыздың
                  жоғарылауына әкелуі мүмкін, бұл біздің модельге шамадан тыс сәйкес келуіне
                  әкеледі. Біздің модельдеріміз жаңа деректерге жалпыланғанын қалаймыз, сондықтан
                  мұндай жарамсыздықтың алдын-алу әдісі пайдалы.
                </p>{' '}
                <p>
                  Регуляризация - бұл біздің моделімізде жоғары қарама-қайшылықты болдырмауға
                  арналған әдіс. Ол үшін жоғарыда кӛрсетілген шығын функциясына айыппұл мерзімін
                  енгіземіз. Осы жаза мерзімін қосу арқылы біз сызықтық функцияның
                  коэффициенттерінің тым үлкен болуына жол бермейміз. Бұл жағымсыздықты енгізу
                  дисперсияны азайтып, сәйкестікке жол бермеу керек.
                </p>
                <h3>Жоталардың шығыс функциясы</h3>{' '}
                <p>
                  Жоталардың шығыны функциясы L2 нормасын of-ге айыппұл мерзімі ретінде қосады, бұл
                  біз «барлық коэффициенттерді квадрат қосамыз» деп айтудың қиял тәсілі. Бұл ӛте
                  дұрыс емес, ӛйткені L2 norm нормасы біздің модельге қаншалықты әсер ететінін
                  бақылауды қалаймыз, сондықтан біз баптау параметріне кӛбейтеміз,.
                </p>
                <p style={{ margin: '15px 0 ' }}>
                  <img src="img/img14.png" alt="" />
                </p>
                <p>
                  Егер λ едәуір үлкен болса, квадраттық қателіктер жиынтығы біздің шығындар
                  функциясында аз болады. Жоғарыда аталған функцияны азайтуға тырысқанымыз үшін, бұл
                  күш 0-ден 0-ге дейін жетеді. Сонымен, λ кӛбейген сайын values мәні азайғанын
                  кӛреміз. Бұл біз қалаған мінез-құлық, ӛйткені ол дисперсияны азайтады. Неліктен
                  бұлай екенін білу үшін дисперсияны кіші коэффициенттермен есептеу туралы ойлана
                  аласыз.
                </p>{' '}
                <h3>Lasso шығындар функциясы</h3>{' '}
                <p>
                  Лассо құны функциясы, екінші жағынан, L1 norm нормасын ӛзінің жаза мерзімі ретінде
                  қолданады. L1 нормасы β - бұл біздің коэффициенттеріміздің абсолютті шамаларының
                  қосындысы.
                </p>{' '}
                <p style={{ margin: '15px 0 ' }}>
                  <img src="img/img15.png" alt="" />
                </p>
                Сол сияқты, significantly едәуір үлкен болған сайын 0 0-ге мәжбүр болады. Бірақ
                лассо құны функциясы туралы айта кететін маңызды нәрсе, біз коэффициенттеріміздің
                квадратының орнына абсолютті мәнді қолданатындықтан, маңызды емес коэффициенттер аз
                болуы мүмкін. бұл 0 мәнін тағайындады. Бұл әсіресе мүмкіндік таңдау үшін пайдалы.
                Айыппұл мерзімі коэффициенттердің нӛлге тең болуының себебі мен шектелетін аймаққа
                қатысты болуы мүмкін, бірақ мен мұнда кірмеймін, бірақ мен оқуды ұсынамын, ӛйткені
                бұл L1 айыппұлына мүмкіндік беретін идеяны бекіту үшін пайдалы болады. кейбір
                коэффициенттер нӛлге тең болады. Lasso шектеу аймағы кӛк (сол жақта), жотасы (оң
                жақта)
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img16.png" alt="" />
                </p>
                <h3>Бірге қою</h3> Жоталар мен лассо регрессиясының не істейтінін түсінгеннен кейін,
                қайсысы регулирование әдісін қолданатынын еске түсіру оңай болады. Жеке ӛзім сандық
                жолда сандарды нӛлге дейін түсіретін елестеткенді ұнатамын. Бұл маған лассо
                регрессиясы модельдің кейбір коэффициенттерін нӛлге әкелуі мүмкін екенін есіме
                салады. L1 нормасы мұны мүмкін ететін шектеуші аймақты құрайтындықтан, Лассо L1
                нормасын ӛзінің жаза мерзімі ретінде қолданатынын білеміз. Егер сіз Лассо мен
                жотаның L1 және L2 нормаларын айыппұл шарты ретінде қолданатындығын есіңізде
                сақтасаңыз, онда жотаның L2 нормасы қолданылады. Бұл біреуіне осы екі регрессиялық
                әдісті түзу ұстау қиынға соғатын адамға кӛмектесе алады деп үміттенемін.
              </p>
            </>
          )}
          {add === 13 && (
            <>
              <h2 className="readRight__title">
                Бақыланатын машиналық оқыту: Регрессия Vs классификациясы
              </h2>
              <p>
                <h3>Бақыланатын машиналық оқыту: Регрессия Vs классификациясы</h3>
                Бұл мақалада мен басқарылатын машинаны оқыту алгоритмдерінің жіктеу мен жіктеу
                арасындағы негізгі айырмашылықтарды түсіндіремін. Тиісті машинаны оқыту алгоритмін
                таңдағанға дейін айырмашылықтарды түсіну керек. Хабарламадан бас тартуды оқып
                шығыңыз.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img17.png" alt="" />
                </p>
                Мен қысқаша 7 негізгі бағытты сипаттаймын:
                <li>1. Регрессия мен жіктеу арасындағы айырмашылық</li>
                <li>2. Жалпы регрессия және жіктеу алгоритмдерінің атаулары</li>
                <li>3. Алогритмаңыздың жақсылығын тексеру</li>
                <li>4. Үстеме бағаны түсіндіру</li>
                <li>5. Асып кетудің алдын алу әдістері</li>
                <li>6. Реттеудің қысқаша мазмұны</li>
                <li>7. Градиенттің түсуі туралы айтып беріңіз</li>
                <h3>1. Регрессия мен жіктеу арасындағы негізгі айырмашылықтар қандай?</h3>
                Екеуі де:
                <li>• Жетекшілік ететін оқыту алгоритмдері</li>
                <li>• Тарихи деректерді болжау және шешім қабылдау үшін пайдаланыңыз</li>
                <li>• Фитингтің ең жақсы сызығына назар аударыңыз</li>
                Жетекшілік етілетін оқу алгоритмдері мәліметтерді белгілеуді талап етеді.
                Бақыланатын машинамен оқыту туралы қосымша ақпарат алу үшін менің мақалама қараңыз:
                8 минут ішінде машиналық оқыту
                <h3>Регрессия:</h3>
                <p>
                  Регрессия сіздің деректер нүктелеріңіздің үздіксіз мәндерге ие болуын талап етеді.
                  Алдымен факторлар (тәуелсіз айнымалылар) табылған. Содан кейін нақты және
                  болжанатын шамалар арасындағы айырмашылықты азайтуға мүмкіндік беретін тәуелсіз
                  айнымалыларға коэффициенттер (кӛбейткіштер) есептеледі. Соңында формула
                  есептеледі. Формула тәуелсіз айнымалылардан (сіз ӛлшегіңіз келетін) тәуелді
                  айнымалы мәнді болжау үшін қолданылады (сіздің мақсатыңыз қандай болатынына
                  байланысты). Болжалды шамалар үздіксіз. Регрессия сізге үнемі нәтиже береді.
                </p>
                <h3>Жіктеу:</h3>
                <p>
                  Жіктеу сіздің деректер нүктелеріңізде дискретті мәндердің болуын талап етеді,
                  мысалы категориялары. Алғашқы тарихи деректер санаттарға (класстарға) бӛлінген.
                  Содан кейін жаңа енгізілген деректер тарихи деректер негізінде жіктеледі және
                  соңында шешімдер қабылданады. Болжалды мәндер дискретті болып табылады. Жіктеу
                  дискретті мәндер мен қатаң санаттарға арналған мәліметтер жиынтығын шығарады.
                </p>
                Қолданады
                <li>
                  • Егер нәтижелер сіздің деректер жинағыңыздағы деректер нүктелерінің сыныбын
                  белгілі бір нақты санаттарға кӛрсеткіңіз келсе, жіктеуді қолданыңыз, мысалы, егер
                  сіз есімнің ер немесе әйел екенін білгіңіз келсе.
                </li>
                <li>
                  • Егер сіз жеке тармақтарды, мысалы, ылғалдылық пен ластанудың арақатынасын жақсы
                  ажыратқыңыз келсе, регрессияны қолданыңыз.
                </li>
                <h3>2. Жалпы регрессия және жіктеу алгоритмдері</h3>
                <p>3 белгілі алгоритм.</p>
                <p>
                  Регрессия: сызықтық регрессия, регрессия орманы, регрессиялық нейрондық желілер.
                </p>
                <p>Жіктеу: K жақын кӛрші, логистикалық регрессия, тірек векторлық машиналар</p>
                <p>
                  Алгоритмдердің егжей-тегжейлі салыстыруы мына жерде келтірілген: Машиналарды оқыту
                  алгоритмдерін салыстыру
                </p>
                <h3>3. Менің регрессия немесе жіктеу үлгісі қаншалықты жақсы?</h3>
                <p>
                  Үлгіңыздың дұрыстығын тексеру үшін әр түрлі шаралар бар: Реттелген R-квадраты
                  (Регрессия): Теңдеудегі еркіндік дәрежесі үшін жазалағаннан кейін нақты және
                  болжамды шамалар арасындағы айырмашылықты есептейді. Мен бұл мақалада қалай
                  есептелетінін түсіндірдім: Менің болжамды моделім қаншалықты жақсы - регрессиялық
                  талдау
                </p>
                <p>
                  F1 (Жіктеу): F1 кӛрсеткіші - модельдің жұмысының ӛлшемі. Бұл модельдің дәлдігі мен
                  еске түсірілуінің орташа мәні. Нәтижелер 1-ден 0-ге дейін. 1-ге ұмтылған нәтижелер
                  ең жақсы деп саналады, ал 0-ге бағытталғандар ең нашар деп саналады. F1
                  классификациялық сынақтарда қолданылады, онда шынайы теріс мәндер онша маңызды
                  емес.
                </p>
                <p>
                  Шатастыру матрицасы (жіктеу): қарапайым түрде, шатастыру матрицасы нақты нақты
                  мәндер белгілі болған кезде жіктеу алгоритмінің нәтижелерін жинақтайтын нәтижелер
                  кестесі. Бірнеше термин қолданылады:
                </p>
                <li>
                  {' '}
                  • Шын позитивті: нақты нәтиже шын болғанда және болжамды мән де дұрыс болса
                </li>
                <li> • Шын теріс: нақты нәтиже жалған болса және болжамды мән де жалған болса</li>
                <li> • Жалған позитив: нақты нәтиже жалған болса, бірақ болжамды мәні шын болса</li>
                <li> • Жалған теріс: нақты нәтиже шын болса, бірақ болжамды мәні жалған болса</li>
                <h3>4. Асып кету дегеніміз не?</h3>
                <p>
                  Асып кету - модельдің экспрессивтілігі тым жоғары болған кезде. Асып кету
                  дегеніміз - модель жаттығу мәліметтеріне сәйкес келетін жағдай, бірақ модельді
                  тестілік деректерге қарсы тексергенде, ол жаман болады. Егер сіз ӛзіңіздің
                  модельіңізді жаттығу деректеріне үйретіп жатсаңыз және ол оның ережелері мен
                  заңдылықтарын жаттығу деректерінің айналасында қалыптастыратын болса, ол
                  кӛрінбейтін мәліметтер бойынша жалпылай алмайды. Бұл деректердің шуылына
                  (кездейсоқтыққа) байланысты. Соның салдарынан модель бұрын болмаған сценарийлерді
                  болжай алмайды. Бұл модель бастапқы деректерді оқытуда стохастикалық мінез-құлықты
                  ескере отырып аяқталады және жақсы жинақтала алмайды. Бұл артық шығындар деп
                  аталады.
                </p>
                <p>
                  Асып кету - бұл жалпылау кезінде модель нашар болған кезде. Асып кету - бұл
                  машиналарды оқыту алгоритмдерінің жиі кездесетін мәселесі. Бұл жаттығулар туралы
                  мәліметтер шу болғандықтан және модель ӛзінің алгоритміне шу енгізгендіктен
                  болады.
                </p>
                <p>
                  Әрі қарай түсіндіру, болжау моделін дайындау үшін жаттығу және тест мәліметтерін
                  жинау керек. Егер сіздің жаттығу деректеріңізде кездейсоқтық болса, онда сіз
                  шығаратын модель нақты мәндер деп болжайды, ол болжанған мәндерді нақты мәндерге
                  мүмкіндігінше жақын болатын теңдеулерді құрастырады. Алайда, сынақ деректері
                  кӛбірек енгізілгеннен кейін, модельдің болжамдылығы сәтсіз болады. Ол дәл емес
                  жалпылауды береді, ӛйткені ол шуды ӛзімен бірге алып жүреді.
                </p>
                <p>
                  Екінші жағынан, жарамсыздық асып кетудің керісінше. Егер модель жарамсыз болса,
                  онда ол мәліметтерді жете түсінбейді және мәндерді болжай алмайды.
                </p>
                <h3>5. Артық салмауды болдырмаңыз</h3>
                <p>Шамадан тыс киюдің бірнеше әдісі бар:</p>
                <li>1. Сіздің жаттығуларыңыздың кӛлемін және тестілеу деректерін кӛбейтіңіз.</li>
                <li>
                  2. Ӛз модельіңіздің параметрлерін, еркіндік дәрежелерін және параметрлерін
                  азайтыңыз. Бұл сіздің моделіңіздің қарапайым болуын қамтамасыз етеді және жаттығу
                  деректеріндегі шуды (стохастикалық мінез-құлықты) азайтуға мүмкіндік береді.
                </li>
                <li>
                  3. Айқас тексеру әдісін қолданыңыз. Ол модельдің жалпылау қатесінің орташа мәнін
                  алдыңғы орташа деңгеймен салыстырады. Крестті тексеру әдісі k-қатпарларды қамтиды.
                </li>
                <li>
                  4. Модель параметрлерін шамадан тыс сәйкестендіруге әкелетін болса, айыппұл
                  салыңыз. Бұл процесс жүйелеу деп аталады.
                </li>
                <h3>6. Реттеу дегеніміз не?</h3>
                <p>
                  Асып кетуді азайтудың бір тәсілі - бұл жүйелеу. Үлгіге айыппұл салу үшін модельге
                  қосымша шарттар енгізілуі мүмкін. LASSO (L1) және Ridge (L2) - белгілі жүйелеу
                  әдісі. L1 және L2 - коэффициенттердің мӛлшеріне / квадратына сәйкес келетін екі
                  жоғалту функциясы.
                </p>
                <li>
                  • L1 есептелген және нақты мәндер арасындағы абсолютті айырмашылықтардың
                  қосындысын азайтады.
                </li>
                <li>
                  • L2 есептелген және нақты мәндер арасындағы квадраттық айырмашылықты азайтады.
                </li>
                L1 берік, бірақ L2 тұрақты деп саналады
                <h3>7. Градиент түсу дегеніміз не?</h3>
                <p>
                  Градиентті түсіру - оңтайландыру алгоритмі. Ол функцияның қателіктерін азайтуға
                  мүмкіндік береді. Градиентті түсіру машинаны оқыту алгоритмдерінің барлығында
                  қолданылады. Машина үйрену алгоритмі мәліметтерді болжаған кезде, алгоритмнің
                  қаншалықты жақсы екенін бағалау үшін оның шығындар функциясын таба аламыз.
                  Шығындар функциясы машинаны оқыту алгоритміндегі болжамды қателерді бақылайды.
                  Машиналарды оқыту алгоритмінің болжамды қуатын оның параметрлерін ӛзгерту арқылы
                  жақсартуға болады. Шығын функциясы максималды дәлдікте максималды болатындығын
                  білдіретін шығын функциясы ең тӛменгі нүктеге жеткенге дейін біз параметрлерді
                  жедел кӛбейтуге болады. Бұл процесс градиентті түсіру деп аталады.
                </p>
                <p>
                  Алгоритмнің бірнеше ӛзгерісі бар, оның ішінде стохастикалық градиент түседі.
                  Стохастикалық градиентті түсіру (SGD) нейрондық желілерді оқытуда қолданылады.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  {' '}
                  <b>•</b> Жоталардың шығыс функциясы дегеніміз не?.
                </li>
                <li>
                  <b>•</b>Lasso шығыс функциясы қалай беріледі?
                </li>
                <h3>2-деңгей. </h3>
                <li>•Жалпы регрессия және жіктеу алгоритмдердің берілуі?</li>
                <li>•Асып кету дегеніміз не?</li>
                <h3>3-деңгей.</h3>
                <li>•Реттеу дегеніміз не?</li>
                <li>•Градиентті түсу дегенміз не?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>Ауыстыру және дисперсия (bias and variance). Орта гипотеза ұғымы.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>ADALINE, персептрон Розенблатта, Хебб ережесі.</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 14 && (
            <>
              <h2 className="readRight__title">
                Лекция 5. Машиналық оқытудың логикалық моделі. Ранжирлеу шежіресі
              </h2>
              <p>
                <p>
                  <b> 1. Лекция мақсаты мен міндеттері: Машиналық оқытудың логикалық моделі,</b>{' '}
                  шешімдер шежіресінің негізгі принциптері, әдістері мен міндеттері оқыту.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Машиналық оқытудың логикалық модельдері</li>
                <li>2. Шешімдер шежіресі.</li>
                <li>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </li>
                <li>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері:</b> баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </li>
                <h3>Машинаны оқыту негіздері: сызықтық регрессия және логикалық регрессия</h3>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img18.png" alt="" />
                </p>
                <p>
                  Сондықтан бірнеше ай бұрын мен Эндрю Нг үйрететін «Intro to Machine Learning»
                  курсына баруды шештім. Бұл машиналық оқытудың негізгі тұжырымдамаларына арналған
                  11 апталық кіріспе және сіздің машинаңызды үйрену сапарын бастау үшін тамаша орын
                  - сіз сұрағаныңызға қарамастан Бұл сапарға қайда барсаңыз да, сызықтық және
                  логистикалық регрессияның айырмашылығын білу өте қажет. Шын мәнінде, мен бұл
                  сұрақты өткен аптада бір сұхбатта кездестірдім және мен оған жақсы жауап бере алар
                  едім. Мен сияқты болмаңыз, оны сұхбат алдында дәл алыңыз.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img19.png" alt="" />
                </p>
                <p>
                  Түсінетін бірінші нәрсе, моделімізді оқытпас бұрын, жауаптың (шығудың) қандай
                  болуы керектігін түсінген кезде, бақыланатын оқыту алгоритмдері қолданылады.
                  Мысалы, тұрғын үй бағасын тек шаршы кадрлар үшін ғана болжау. Біздің үлгіні үйрету
                  үшін тұрғын үй бағалары мен олармен байланысты квадраттық мәліметтер туралы
                  мәліметтер жинауға болады, сондықтан біз бақылау алгоритмін қолдана аламыз. Егер
                  тапсырма машинаны басқарудың орнына болса, біз мұны қалай жасау керектігін үйрету
                  үшін мәліметтер базасын оңай құра алмаймыз. Оның орнына біз бақыланбайтын оқыту
                  алгоритмін қолдануымыз керек еді, бірақ бұл туралы алаңдамайық.
                </p>
                <br />
              </p>
            </>
          )}
          {add === 15 && (
            <>
              <h2 className="readRight__title">Регрессия: сызықтық және логистикалық</h2>
              <p>
                <p>
                  Сызықтық регрессия - бұл көбінесе нүктелер жиынтығы арқылы сызық сызуға арналған
                  модельді үйрету. Әр тармаққа жақын болған сайын, модель дәлірек болады. Бұл
                  шамадан тыс өзгерту, бірақ көп емес! Квадрат метрлерді пайдалану үшін тұрғын үй
                  бағасын болжау мысалын алыңыз:
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img20.png" alt="" />
                </p>
                Кіріс: шаршы суреттер <br /> <br />
                Қорытынды: тұрғын үй бағасы <br /> <br />
                <p>
                  Жоғарыда келтірілген сызықтар сызықтық регрессияның нәтижесін көрсетеді: кіріс -
                  квадрат, ал шығысы - тұрғын үй бағасы. Осы функцияны пайдаланып, сіз модель әлі
                  көрмеген үйлердің тұрғын үй бағаларын нақты болжай аласыз. Егер алгоритм тек бұрын
                  көрген үйлердің бағасын болжай алса, бұл өте пайдалы болмас еді, иә?
                </p>
                <p>
                  Логистикалық регрессия ұқсас, бірақ бірдей емес. Логистикалық регрессияда функция
                  сызықтық емес, логистикалық. Бұл біздің нәтиже 0 мен 1 аралығында екенін білдіреді
                  және әдетте ықтималдық ретінде түсіндіріледі (шарт бойынша). Науқастарда қатерлі
                  ісік ауруын анықтайтын мысалды алыңыз. Шаршы суреттердің орнына біз ісіктің
                  мөлшерін біздің нұсқа ретінде қолданамыз (айнымалы). Біздің мәліметтер
                  жиынтығымызда ісіктердің мөлшері болады және олар қатерлі ісік па, жоқ па (0
                  немесе a 1 түрінде берілген).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img21.png" alt="" />
                </p>
                Кіріс: ісік мөлшері
                <br />
                <br />
                Шығу: қатерлі ісіктің ықтималдығы <br /> <br />
                <p>
                  Енді сіз «бұл классификацияға ұқсайды, мен регрессия туралы айтып отырмыз» деп
                  ойлайтын шығарсыз, сіз дұрыс айтасыз. Логистикалық регрессияны жіктеу мәселесін
                  шешуге тағы бір қадам жасауға болады (және ол солай болады!). Егер біз 0,5-тен
                  жоғары ықтималдылық қатерлі ісік, ал одан аз нәрсе қатерлі ісікті білдіреді деп
                  шешсек, онда voila! Біз үздіксіз енгізу, АКА, классификациядан дискретті
                  категорияларды жасадық. Мен бұл семантика сияқты көрінетінін білемін, бірақ
                  айырмашылықты білу өте маңызды!
                </p>
                <p>
                  Сонымен, Регрессия кіріс айнымалыларын сызықтық немесе логистикалық болсын, кейбір
                  тұрақты функцияға картаға түсіру үшін қолданылады, ал классификация кіріс айнымалы
                  мәндерін дискретті санаттарға салыстыру үшін қолданылады.
                </p>
                <p>
                  Логистикалық регрессияны жіктеу мәселелерін шешуге қолдануға болады, бірақ ол әлі
                  де регрессия болып табылады.
                </p>
                <p>
                  Бұл түсінік сізге ұнады деп сенемін. Сіз сондай-ақ Эндрю Нгтің «Машиналарды
                  үйрену» курсынан өттіңіз бе? Сіз оны қарастырып жатырсыз ба? Сіз машинаны үйрену
                  сапарында қайда жүрсіз?
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей. </h3>
                <li>• Сызықтық регрессия дегеніміз не?</li>
                <li>• Логикалық регрессия дегеніміз не?</li>
                <h3>2-деңгей.</h3>
                <li>• Машиналық оқытуда регрессияға анықтама беріңіз?</li>
                <li>• Логистикалық регрессияны жүктеу мәселелері?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>Ағаш шешімдерін күшейту.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>Новиковтың конвергенция туралы теоремасы. Новиков теоремасының дәлелі</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 16 && (
            <>
              <h2 className="readRight__title">Лекция 6. Machine Learning VS Адамды оқыту</h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Machine Learning VS Адамды оқыту түсінігі
                  мен «вирцет» деген сӛздің мағынасын ұғындыру. Жасанды нейрондық желілердің жұмыс
                  істеу принциптерін қарастыру. Ережеге негізделген боттар - AI боттарымен танысу.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Machine Learning VS Адамды оқыту.</li>
                <li>2. Ережеге негізделген боттар - AI боттары.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <h3>Machine Learning VS Адамды оқыту</h3>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img22.png" alt="" />
                </p>
                <p>
                  Жасанды нейрондық желілерді биологиялық нейрондық желілер шабыттандырды.
                  Машиналарды біз сияқты ойлауға үйрету үшін адамдардың не ойлайтынын түсіну
                  пайдалы. Адамдар машиналар жаман екендігімен жақсы. Капчта осы себепті жақсы жұмыс
                  істейді. Әріптік-цифрлық хабарламаны дәл оқи алатын болсаңыз, компьютер жай ғана
                  пикселдерді кӛреді. Пиксельдердің орналасуы «5» немесе «3» екенін анықтауға
                  машинаны қалай үйретеміз? Мұны сіздің миыңыз биологиялық нейрондық желілермен
                  жасай алады. Егер біз жасанды нейрондық желілері бар машинаны ойлап тапсақ, біз
                  дәл осындай нәтижеге қол жеткізе аламыз.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img23.png" alt="" />
                </p>
              </p>
            </>
          )}
          {add === 17 && (
            <>
              <h2 className="readRight__title">Адамның білімін түсінуден бастайық.</h2>
              <p>
                <p>
                  Егер мен сізге осы суретті кӛрсетсем және «вирцет» сӛзін айтсам, «вирцет» сӛзін
                  нені түсінесіз? Сіз ӛзіңіздің болжамыңызға қаншалықты сенімдісіз?
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img24.png" alt="" />
                </p>
                Егер мен қазір сіздерге суреттер галереясын кӛрсетсем және «вирцет» сӛзі олардың
                барлығына қатысты болса, «вирцет» сӛзін нені түсінесіз? Қазір ӛзіңізге қаншалықты
                сенімдісіз?
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img25.png" alt="" />
                </p>
                Егер мен сізге қазір кӛрмеген суретті кӛрсетсем және сізден: «бұл вирзет пе?» Деп
                сұрасам, ӛз жауабыңызға қаншалықты сенімдісіз
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img26.png" alt="" />
                </p>
                <p>
                  Сіз жаңа сӛз білдіңіз. «Вирзет» - бұл Дотракидің қызыл түсі, мұз бен оттың
                  фантастикалық романындағы фантастикалық тіл. Алғашқы кескін ұсынылған кезде, сіз
                  «вирцет» алма, жеміс-жидек, тамақ, қол, бірдеңе немесе басқа нәрсені білдіретінін
                  түсінген боларсыз.
                </p>
                <p>
                  Барлық суреттер галереясымен «вирцет» қойылған кезде, сіз фотолардың ұқсастығын
                  тауып, сӛздің анықтамасына келдіңіз. Барлық суреттерде ортақ жалғыз нәрсе - бұл
                  қызыл түс, сондықтан сіз «вирцет» сӛзінің қызыл дегенді білдіретінін дұрыс
                  түсінген шығарсыз. Сіз әр фотодағы кӛптеген факторларды ажыратып, барлық
                  фотосуреттерде сәйкес келетін бір факторға - түске назар аудара алдыңыз.
                </p>
                <p>
                  Кескіндердің келесі галереясы кӛрсетілгенде, сіз кескіндерді «вирцет» деп дұрыс
                  анықтай алдыңыз, тіпті сіз бұрын осы суреттерді кӛрмеген едіңіз. Бұл жалпылау деп
                  аталады.
                </p>
                <p>
                  Біз ӛзіміздің ӛмірімізді осы әдіспен білдік, саналы түрде дискриминация мен
                  жалпылауды қолдана отырып, ӛз әлемімізді анықтайық.
                </p>
              </p>
            </>
          )}
          {add === 18 && (
            <>
              <h2 className="readRight__title">
                Осындай нәрсені үйренгенде біздің нейрондық желілеріміз қандай болады?
              </h2>
              <p>
                <p>
                  Біздің миымыз ұзын ұзартқыштары бар нейрондардан (жүйке жасушаларынан) тұрады,
                  олар жақын орналасқан нейрондарға сигнал береді. Нейрондар ешқандай нақты
                  ақпаратты ӛткізбейді. Олар жай қозғаушы (келесі ұяшыққа сигнал берілсін деп
                  айтады) немесе ингибиторлық сигналды (келесі ұяшыққа от қоймауды айтады) жібереді.
                  Қабылдайтын жасуша кӛптеген басқа нейрондардан сигнал алады. Кейбір сигналдар
                  қозуы мүмкін, ал кейбіреулері тежелуі мүмкін. Қабылдаушы нейрон осы сигналдардың
                  барлығын жинақтайды және егер олар тау бӛктерінде алдын ала белгіленген шекті
                  деңгейге жетсе, клетка аксоннан келесі нейронға сигнал шығарады.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img27.png" alt="" />
                </p>
                <p>
                  Нейрондар екілік. Олар не атысады, не атпайды. Егер кірістер шекті деңгейге жетсе,
                  ұяшық күйіп кетеді. Егер кірістер шекті деңгейге жетпесе, ұяшық жанбайды.
                  Кірістері шектелген деңгейге жеткен ұяшықтар мен кірістері шекті мәннен асып
                  кеткен ұяшықтар арасында шығуда ешқандай айырмашылық жоқ.
                </p>
              </p>
            </>
          )}
          {add === 19 && (
            <>
              <h2 className="readRight__title">Біздің миымыз бір нәрсені қалай біледі?</h2>
              <p>
                <p>
                  Біз бірнеше рет қайта-қайта бірдей сигнал қабылдаған кезде, мысалы, «вирцет» деген
                  сӛзді кӛрген сайын, қызыл түсті кӛремін, сӛзді ӛңдейтін осы нейрондар арасындағы
                  байланыстар (синапстар) тиімдірек болады. Бұл ұзақ мерзімді потенциация (LTP) деп
                  аталатын процесс. Нерв жасушасы басқа жүйке жасушасымен бірнеше рет байланысқан
                  кезде, ол сол сигналдарға сезімтал болу үшін ӛзгереді. Қабылдайтын нейрон оның
                  бетіне кӛп рецепторлар қосады, ол қабылдаған кірісті үлкейтеді және шекті деңгейге
                  жету мүмкіндігін арттырады.
                  <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                    <img src="img/img28.png" alt="" />
                  </p>
                  Сіз «вирцет» сӛзін қызыл кескінмен дұрыс байланыстырған сайын, осы жолға қатысатын
                  нейрондар арасындағы байланыс күшейе түседі. Егер сіз қателесеңіз, байланыстар
                  әлсіреді. Мысалы, егер сіз жасыл алманы кӛрсеңіз және «вирцет» дегенді білсеңіз,
                  сізге қателесіп, миыңыз жасыл алма мен «вирцет» арасындағы байланысты әлсіретеді.
                </p>
              </p>
            </>
          )}
          {add === 20 && (
            <>
              <h2 className="readRight__title">Машиналар қалай үйренеді?</h2>
              <p>
                <p>
                  Жасанды нейрондық желілер машиналарды адамдарға жақсы нәрсе жасауға үйретеді,
                  бірақ машиналары нашар. Сіз капчыкты оқи аласыз. Қолмен жазылған «5» сізге әлі де
                  «5» сияқты кӛрінеді. Компьютер тек пикселдерді кӛреді. Сіз «5» пішінін оның
                  мағынасымен байланыстырдыңыз және сіз оны нейрондық желілермен жасадыңыз. Сіз мұны
                  жасай аласыз, ӛйткені сіздің миыңызда кірістерді қабылдайтын, шығаратын және
                  енгізетін салмақты реттейтін есептеу бірліктері (нейрондар) бар. Біз машинамен де
                  солай жасай аламыз.
                </p>
                <p>
                  Жасанды нейрон салмақты кірістерді алады, оларды жинақтайды, бұрыс жақтарын
                  ескереді және нейронның ӛртеніп немесе ӛшпейтіндігін анықтау үшін қосындыны шекті
                  деңгеймен салыстырады.
                </p>
                <h3>Ережеге негізделген боттар - AI боттары</h3>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img29.png" alt="" />
                </p>
                <p>
                  Егер бот сұраққа қисынды жауап берсе немесе берілген тапсырманы шешсе, оны ақылды
                  деп санаған жӛн. Apple Siri, Amazon Alexa және Google Home сияқты кӛптеген жеке
                  кӛмекшілерді ақылды деп санауға болады. Бұл кӛмекші боттар Тюрингті ақылды деп
                  айта аламыз ба? Егер біз бот пен адамды ажырата алмайтын болсақ, онда ботты
                  «Тюринг ақылды» деп атауға болады.
                </p>
                <p>
                  Боттың адам деңгейіне сәйкес келетіндігін немесе жоқ екенін тексеру үшін кӛптеген
                  әдістер бар, ал ең бастысы - Тюринг сынағы. 1950 жылы Алан Тьюринг жасаған Тюринг
                  сынағы - бұл машинаның адамның мінез-құлқына тең немесе оған ұқсас емес
                  интеллектуалды мінез-құлықты кӛрсете білу қабілеті. Тюринг адам бағалаушысы адам
                  мен адамға ұқсас жауаптар шығаруға арналған машина арасындағы табиғи тілдегі
                  сӛйлесулерге баға беруді ұсынады. Бағалаушы әңгімедегі екі серіктестің бірі машина
                  екенін біледі және барлық қатысушылар бір-бірінен ажыратылады. Қарым-қатынас
                  компьютерлік пернетақта және экран сияқты мәтіндік арнамен ғана шектеледі,
                  сондықтан нәтиже машинаның сӛздерді сӛйлеу қабілетіне тәуелді болмауы керек. Егер
                  бағалаушы машинаны адамнан сенімді түрде айта алмаса, онда ол сынақтан ӛткен
                  дейді. Тест сұрақтарға дұрыс жауап беру қабілеттілігін тексермейді, жауаптар
                  адамның берген жауаптарына қаншалықты жақын екенін анықтайды.{' '}
                </p>
                Тест және оны жеңіп алған боттар туралы кӛбірек білу үшін менің алдыңғы блогымды
                қараңыз. <br />
                Ботты адам ақылдылығымен салыстыра отырып, оны қаншалықты ақылды ету керек деген
                сұрақ туындайды. Мұның негізінен екі әдісі бар:
                <p>
                  1. Ережеге негізделген кӛзқарас: Ережеге негізделген тәсілмен бот сұрақтарға
                  бірнеше ережелер негізінде жауап береді. Анықталған ережелер ӛте қарапайым болуы
                  мүмкін. Бұл боттарды құру ережеге негізделген кейбір тәсілдерді қолдану арқылы
                  салыстырмалы түрде қарапайым, бірақ бот ботқа үйретілетін ережелерге сәйкес
                  келмейтін сұрақтарға жауап беруде тиімді емес. Осындай тілдердің бірі - AIML
                  (Жасанды интеллект белгілері тілі): XML-ге негізделген тіл, әзірлеушілерге ботқа
                  ережелер жазуға мүмкіндік береді. Сонымен қатар, әртүрлі сценарийлер үшін ережелер
                  жазу ӛте кӛп уақытты қажет етеді және мүмкін болатын сценарий үшін ережелер жазу
                  мүмкін емес. Боттар қарапайым сұрауларды ӛңдей алады, бірақ күрделі сұрауларды
                  басқара алмайды. Демек, бот ешқашан Turing тестінен ӛтпейді, егер кейбір
                  ережелерге негізделген модельдерге сүйенсе.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img30.png" alt="" />
                </p>
                <p>
                  2. Ӛздігінен оқуға қабілетті боттар: бұл ережелерге негізделген боттардан гӛрі
                  тиімдірек ететін машиналық оқытуға негізделген кейбір тәсілдерді қолданатын
                  боттар. Бұл боттар екі түрлі болуы мүмкін:
                </p>
                <p>
                  2.1 Шығаруға негізделген модельдер: Бұл боттар сұрақтардың жиынтығы және олардың
                  мүмкін нәтижелері бойынша оқытылады. Әр сұрақ үшін бот барлық ықтимал жауаптар
                  жиынтығынан ең қажетті жауаптарды таба алады, содан кейін жауап шығарады. Кӛптеген
                  сұрақтар мен жауаптар жиынтығы бойынша дайындалған болса, бот жаңа жауаптар шығара
                  алмайды, ал егер деректер жиынтығы алдын ала ӛңделген болса, бот сұраныстарды ӛте
                  жақсы шеше алады. Күрделілік сұраныстың қарапайым ережелерінен бастап, ең қолайлы
                  жауапты табу үшін бірнеше машинаны оқыту алгоритмін қолдана отырып, күрделі
                  ережелерге дейін ӛзгеруі мүмкін. Сонымен қатар, тілдер мен грамматикада
                  проблемалар туындамайды, ӛйткені жауаптар алдын-ала анықталған және синтаксистік
                  түрде қате кете алмайды.
                </p>
                <p>
                  2.2 Генеративті модельдер: Генеративті модельдер ережелерге негізделген
                  модельдерден гӛрі, олар жауаптарды қалыптастыра алатындай етіп жасалады және
                  әрдайым жауаптар жиынтығынан біреуіне жауап бере бермейді. Бұл оларды ақылды
                  етеді, ӛйткені олар сұрау арқылы сӛзбе-сӛз алып, жауаптарын қалыптастырады. Бұл
                  сонымен қатар оларды қателіктерге бейім етеді, ӛйткені олар емле мен грамматиканы
                  ескеруі керек. Бұл қателерді ӛңдеуді жақсарту үшін, бұл модельдерді дәлірек оқыту
                  керек. Оқығаннан кейін олар ережелерге негізделген модельдерден асып түседі,
                  ӛйткені олар күрделі және кӛрінбейтін сұрауларға жауап бере алады. Мұндай үлгіні
                  құруда тілдік аударма модельдерін қолдануға болады.
                </p>
                Менің жауаптарымды құратын дәйекті оқыту моделіне тізбектілік құру үшін келесі
                блогты тексеріңіз.
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b> Ережеге негізделген боттар - AI боттары.
                </li>
                <li>
                  <b>•</b>Ӛздігінен оқуға қабілетті боттар?
                </li>
                <h3>2-деңгей. </h3>
                <li>• Шығаруға негізделген модельдер?</li>
                <li>•Генеративті модельдер дегеніміз не?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>
                  Үлгі ішіндегі және сыртындағы қате. Жалпылау қатесі. Хефдинг теңсіздігі. Валидация
                  және кросс-валидация.
                </li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>
                  Эвристика: таразыны инициализациялау, нысандарды ұсыну тәртібі, градиент қадамының
                  мәнін таңдау, жергілікті минимумдардан "соғу".
                </li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 21 && (
            <>
              <h2 className="readRight__title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері. Статистикалық
                шешім қабылдау әдістері тәуекелге ұшырайды
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық және статистикалық шешім
                  қабылдау модельдері туралы түсінік беру. Статистикалық шешім қабылдау әдістеріне
                  мысалдар келтіру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Ықтималдылық теориясы – кездейсоқ бір оқиғаның ықтималдығы бойынша онымен қандай
                  да бір байланыста болатын басқа бір кездейсоқ оқиғаның ықтималдығын анықтауға
                  мүмкіндік беретін математика білімі. Ықтималдылық теориясында кездейсоқ
                  құбылыстардың заңдылығы зерттеледі. Кездейсоқ құбылыстарға анықталмағандық,
                  күрделілік, кӛп себептілік қасиеттері тән. Сондықтан мұндай құбылыстарды зерттеу
                  үшін арнайы әдістер құрылады. Ол әдістер мен тәсілдер ықтималдылық теориясында
                  жасалынады. Мысалы, біркелкі болып келетін кездейсоқ құбылыстарды жан-жақты
                  бақылай отырып қандай да болмасын бір заңдылықты (тұрақтылықты), яғни статистик.
                  заңдылықты байқаймыз. Ықтималдылық теориясының негізгі ұғымдары элементар
                  ықтималдылық теориясы шегінде қарапайым түрде анықталады. Элементар ықтималдылық
                  теориясында қарастырылатын әрбір сынау (Т) Е1,Е2, ...,Еs оқиғаларының тек қана
                  біреуімен ғана аяқталады. Бұл оқиғалар сынау нәтижесі (қорытындысы) деп аталады.
                  Әрбір Еk нәтижесімен оның ықтималдығы деп аталатын рk оң саны байланыстырылады.
                  Бұл жағдайда рk сандарының қосындысы бірге тең болуы керек. А оқиғасы тең
                  мүмкіндікті бірнеше оқиғаларға (Еі ,Еj , …, Еk) бӛлінеді және олардың кез келген
                  біреуінің (не Еі , не Еj ,…, не Еk) пайда болуынан А оқиғасының пайда болуы
                  шығады. Сынау нәтижесінде А оқиғасы бӛлінетін мүмкін мәндері (Еі E,j , …, Еk) осы
                  оқиғаға (А-ға) қолайлы жағдайлар деп атайды. Анықтама бойынша А оқиғасының р(А)
                  ықтималдығы оған қолайлы жағдайлар нәтижелері ықтималдықтарының қосындысына тең
                  деп ұйғарылады: P(A)=Pі+Pj+...+Pk (1) Дербес жағдайда р1=р2=...=рs=1/s болғанда
                  Р(А) =r/s (2) болады. А оқиғасына қолайлы жағдайлар нәтижесі санының (r) барлық
                  тең мүмкіндікті нәтижелер санына (s) қатынасы А оқиғасының ықтималдығы деп
                  аталады. (2) формула ықтималдықтың классикалық анықтамасын ӛрнектейді. Бұл
                  анықтама “ықтималдық” ұғымын дәл анықтамасы берілмейтін “тең мүмкіндік” (тең
                  ықтималдық) ұғымына келтіреді. Тең мүмкіндік немесе тең ықтималдық ұғымдары
                  алғашқы ұғымдарға жатады.Олар логикалық (формалды) анықтама беруді қажет етпейді.
                  Егер жалпы сынау нәтижесінде бірнеше оқиғалар пайда болса және олардың біреуінің
                  пайда болу мүмкіндігінің екіншісіне қарағанда артықшылығы бар деп айта алмасақ
                  (яғни сынаулар нәтижесінде симметриялы қасиеті болса) онда мұндай оқиғалар тең
                  мүмкіндікті делінеді. Элементар ықтималдылық теориясының негізгі формулаларының
                  қатарына ықтималдылықтардың толық формуласы да жатады: егер А1, А2,..., Аr
                  оқиғалары қос-қостан үйлесімсіз болып әрі олардың бірігуі нақты бір оқиға болса,
                  онда кез келген В оқиғасының ықтималдылығы: Р(В)= Р(В/Аk)Р(Аk) қосындысына тең
                  болады. Ықтималдылық теориясының негізін құрудағы қазіргі ең жиі тараған логик.
                  сұлбаны 1933 ж. кеңес математигі А.Н. Колмогоров жасаған. Бұл сұлбаның негізгі
                  белгілері тӛмендегідей. Ықтималдылық теориясының тәсілдерімен қандай да болмасын
                  нақты бір есепті зерттегенде ең алдымен U элементтерінің (элементар оқиғалар деп
                  аталатын) U жиыны бӛлініп алынады. Кез келген оқиға оған қолайлы жағдайлардың
                  элементар оқиғаларының жиыны арқылы толық сипатталынады. Сондықтан ол элементар
                  оқиғалардың белгілі бір жиыны ретінде де қарастырылады. Белгілі бір А оқиғалары
                  мен олардың ықтималдығы деп аталатын Р(А) сандары байланыстырылады және олар
                  мынадай шарттарды қанағаттандырады:
                  <li>1. Р(U)=1,</li>
                  <li>2. Егер А1, ..., Аn</li>
                  оқиғалары қос-қостан үйлесімсіз болып, ал А – олардың қосындысы болса, онда:
                  Р(А)=Р(А1)+Р(А2)+...+Р(Аn) болады. Толық матем. теория құру үшін 3- шарттың
                  қос-қостан үйлесімсіз оқиғалардың шектеусіз тізбегі үшін де орындалуы қажет. Теріс
                  еместік пен аддитивтілік қасиеттері – жиын ӛлшеуінің негізгі қасиеттері. Сондықтан
                  Ы. т. формалды түрде ӛлшеуіштер теориясының бӛлігі ретінде де қарастырылуы мүмкін.
                  Бұл тұрғыдан қарағанда Ы. т-ның негізгі ұғымдары жаңа мәнге ие болады. Кездейсоқ
                  шамалар ӛлшемді функцияларға, ал олардың матем. үміті А.Лебегтің абстракт
                  интегралына айналады, тағы басқа. Бірақ ықтималдылық теориясы мен ӛлшеуіштер
                  теориясының негізгі мәселелері әр түрлі болып келеді. Ықтималдылық теориясының
                  негізгі, ӛзіне тән ұғымына оқиғалардың, сынаулардың, кездейсоқ шамалардың
                  тәуелсіздік ұғымы жатады. Сонымен бірге ықтималдылық теориясында шартты үлестіру,
                  шартты матем. үміт, тағы басқа объектілер де зерттеледі. Ықтималдылық теориясы 17
                  ғ-дың орта кезінде пайда болды. Ықтималдылық теориясы 17 ғ-дың орта шенінде әйгілі
                  ғалымдар Б.Паскаль (1623 – 62) мен П.Ферма (1601 – 65), Х.Гюйгенс (1629 – 95),
                  Я.Бернулли (1654 – 1705), Муавр (1667 – 1754), Гаус (1777 – 1885) еңбектерінде
                  пайда болып, әрі қарай дамыған. Қазір Лаплас (1812) пен Пуассон (1837)
                  теоремаларының дәлелденуі осы кезеңге жатады; ал А.Лежандр (Франция, 1806) мен
                  К.Гаусс (1808) ең кіші квадраттар тәсілін жетілдірді. Ықтималдылық теориясы
                  тарихының үшінші кезеңі (19 ғ-дың 2- жартысы) негізінен орыс математиктері П.Л.
                  Чебышев, А.М. Ляпунов және А.А. Марков (үлкені) есімдеріне байланысты. 19 ғ-дың
                  2-жартысында Батыс Еуропада матем. статистика (Белгияда А.Кетле, Англияда
                  Ф.Гальтон) мен статис. физика (Австрияда Л.Больцман) бойынша кӛптеген еңбектер
                  жазылды. Бұл еңбектер (Чебышев, Ляпунов және Марковтардың негізгі теор.
                  еңбектерімен қатар) ықтималдылық теориясы тарихының тӛртінші кезеңінде
                  ықтималдылық теориясының шешілуге тиісті мәселелерінің аясын кеңейтті. Бұл кезеңде
                  шет елде де (Францияда Э.Борель, П.Леви, т.б., Германияда Р.Мизес, АҚШ-та Н.
                  Винер, т.б., Швецияда Г.Крамер) КСРО-да ӛте маңызды зерттеулер жүргізілді.
                  Ықтималдылық теориясының жаңа кезеңі С.Н. Бернштейннің зерттеулерімен байланысты.
                  Ресейде А.Я. Хинчин мен А.Н. Колмогоров ықтималдылық теориясының мәселелеріне
                  нақты айнымалы функциялар теориясының тәсілдерін қолдана бастады. Кейінірек (30-
                  жылдары) олар процестер теориясының негізін қалады. Қазақстан ғалымдары да (І.Б.
                  Бектаев, Б.С. Жаңбырбаев) Ықтималдылық теориясы бойынша зерттеулер жүргізіп
                  келеді.
                </p>
                <p>
                  Тәуекел жағдайында шешім қабылдау әдістері де теория деп аталатын шеңберде
                  әзірленеді және негізделген{' '}
                  <a href="https://i-topmodel.ru/kk/statisticheskie-metody-prinyatiya-reshenii-praktikum-metody-statisticheskih/">
                    статистикалық шешімдер...
                  </a>{' '}
                  Статистикалық шешім теориясы - бұл статистикалық бақылаулар жасау, сол
                  бақылауларды ӛңдеу және оларды қолдану теориясы. Ӛздеріңіз білетіндей,
                  экономикалық зерттеудің міндеті - экономикалық объектінің табиғатын түсіну, оның
                  маңызды айнымалылары арасындағы байланыс механизмін ашу. Бұл түсінік осы объектіні
                  басқару үшін қажетті шараларды әзірлеуге және жүзеге асыруға мүмкіндік береді,
                  немесе{' '}
                  <a href="https://i-topmodel.ru/kk/nep-novaya-ekonomicheskaya-politika-sovetskogo-gosudarstva/">
                    экономикалық саясат...
                  </a>{' '}
                  Бұл зерттелетін экономикалық объект немесе құбылыс туралы сапалы және сандық
                  мәлімдемелер үшін негіз болатын экономикалық деректердің табиғаты мен
                  ерекшеліктерін ескере отырып, тапсырмаға барабар әдістерді қажет етеді.
                </p>
                <p>
                  Кез-келген экономикалық деректер кез-келген экономикалық субъектінің сандық
                  сипаттамаларын білдіреді. Олар кӛптеген факторлардың әсерінен қалыптасады, олардың
                  барлығы сыртқы бақылауға қол жетімді емес. Бақыланбайтын факторлар мәндер
                  жиынтығынан кездейсоқ шамаларды алып, осылайша олар анықтайтын мәліметтердің
                  кездейсоқтығын анықтай алады. Экономикалық деректердің стохастикалық сипаты оларды
                  талдау мен ӛңдеу үшін арнайы адекватты статистикалық әдістерді қолдануды қажет
                  етеді.
                </p>
                <p>
                  Кәсіпкерлік тәуекелді сандық бағалау, белгілі бір есеп мазмұнына қарамастан, ереже
                  бойынша, математикалық статистика әдістерін қолдана отырып мүмкін болады. Бұл
                  бағалау әдісінің негізгі құралдары дисперсия, стандартты ауытқу, вариация
                  коэффициенті болып табылады.
                </p>
                <p>
                  дартты ауытқу, вариация коэффициенті болып табылады. Қолданбаларда тәуекелмен
                  байланысты жағдайлардың ӛзгергіштік немесе ықтималдылық кӛрсеткіштеріне
                  негізделген типтік жобалар кеңінен қолданылады. Сонымен, нәтиженің ауытқуынан
                  туындаған қаржылық тәуекелдер күтілетін мәннің айналасында, мысалы, тиімділікте
                  дисперсияны немесе орташадан күтілетін абсолютті ауытқуды қолдана отырып
                  бағаланады. Капиталды басқару проблемаларында болжамды нұсқаға қарағанда кірістің
                  жоғалуы немесе жоғалту ықтималдығы тәуекел дәрежесінің жалпы ӛлшемі болып
                  табылады.
                </p>
                Тәуекел шамасын (тәуекел дәрежесін) бағалау үшін біз келесі критерийлерге
                тоқталамыз: <br />
                <li>• 1) күтілетін орташа мән;</li>
                <li>• 2) мүмкін нәтиженің ӛзгергіштігі (ӛзгергіштігі).</li>
                <p>Статистикалық іріктеме үшін</p>
                Қайда Xj - әрбір бақылау жағдайы үшін күтілетін мән (/ «\u003d 1, 2, ...), l, -
                бақылау жағдайларының саны (жиілік) мәні l:, x \u003d E - орташа күтілетін <br />
                мән, st - дисперсия, <br />
                V - вариация коэффициенті, бізде: <br />
                Іскерлік келісім шарттардың тәуекелін бағалау проблемасын қарастырыңыз.
                «Интерпродукт» жауапкершілігі шектеулі серіктестігі үш базаның бірінен тамақ
                ӛнімдерін жеткізуге келісімшарт жасасуға шешім қабылдады. Осы негіздер бойынша
                тауарларға ақы тӛлеу мерзімдері туралы мәліметтерді жинағаннан кейін (6.7-кесте),
                тәуекелді бағалағаннан кейін, ӛнімді жеткізуге келісімшарт жасасу кезінде тауарларды
                қысқа мерзімде тӛлейтін базаны таңдау қажет.
                <h3>6.7 кесте</h3>
                <p style={{ margin: '15px 0 ' }}>
                  <img src="img/img31.png" alt="" />
                </p>
                <p>Формулаларға негізделген бірінші база үшін (6.4.1): </p>
                Екінші негіз үшін <br />
                Үшінші негіз үшін <br />
                <p>
                  Бірінші базаның вариация коэффициенті ең кіші, бұл осы базамен ӛнімді жеткізуге
                  келісімшарт жасасудың орындылығын кӛрсетеді.
                </p>
                <p>
                  Қарастырылған мысалдар тәуекелдің статистикалық мәліметтерге негізделген және
                  айтарлықтай жоғары дәлдікпен есептелетін математикалық түрде кӛрсетілген шығын
                  ықтималдығына ие екендігін кӛрсетеді. Ең қолайлы шешімді таңдау кезінде нәтиженің
                  ықтималды ықтималдығы ережесі қолданылды, ол мүмкін шешімдердің ішінен кәсіпкер
                  үшін нәтиже ықтималдығы қолайлы болатынын таңдайтындығынан тұрады.
                </p>
                <p>
                  Тәжірибеде нәтиженің оңтайлы ықтималдығы ережесін қолдану, әдетте, нәтиженің
                  оңтайлы ӛзгергіштік ережесімен үйлеседі.
                </p>
                <p>
                  Белгілі болғандай, кӛрсеткіштердің ӛзгергіштігі олардың дисперсиясымен, стандартты
                  ауытқуымен және вариация коэффициентімен кӛрінеді. Нәтиженің оңтайлы ӛзгергіштік
                  ережесінің мәні ықтимал шешімдердің ішінен сол тәуекелді капитал салымы үшін жеңіп
                  алу мен ұтылу ықтималдығы аз алшақтыққа ие болатынының таңдалатындығында.
                  дисперсияның ең кіші мәні, вариацияның стандартты ауытқуы. Қарастырылып отырған
                  мәселелерде оңтайлы шешімдерді таңдау осы екі ережені қолдану арқылы жүзеге
                  асырылды.
                </p>
                <p>
                  Бұл Ұлыбританияның қырықыншы және қырық екінші (кезеңдер 19 ғасырдың 2-жартысына
                  сәйкес келеді) болған Бенджамин Дизраэлиге жатқызылған «жай ӛтірік» пен «ашық
                  ӛтіріктен» кейін пайда болады. Алайда, біздің уақытымызда Марк Твен жарнамалаған
                  Дизраэлидің авторлығын жоққа шығарады. Бірақ, мүмкін, кӛптеген мамандар бұл
                  фразаны ӛз еңбектерінде қайталайды немесе негізгі мазмұны әдістер болып табылады{' '}
                  <a href="https://i-topmodel.ru/kk/statisticheskii-faktornyi-analiz-faktornyi-analiz-statisticheskie-metody-i/">
                    статистикалық талдау...
                  </a>{' '}
                  Әдетте, бұл әзіл сияқты естіледі, онда әзілдің бір бӛлігі ғана бар ...
                </p>
                <p>
                  Статистика - бұл сапалы және сандық түрде үлкен кӛлемдегі деректерді жинау, талдау
                  және түсіндіру процедурасын сипаттайтын нақты білім саласы. Бұл ӛмірдің әртүрлі
                  ғылыми немесе практикалық салаларына қатысты. Мысалы, қолданбалы статистика сізге
                  талдау үшін барлық деректерді ӛңдеудің дұрыс статистикалық әдісін таңдауға
                  кӛмектеседі. Құқық бұзушылық саласындағы құқықтық жұмыстар және оларды бақылау.
                  Математика алынған ақпаратты практикалық немесе ғылыми мақсатта жүйелеу және
                  пайдалану үшін математикалық әдістерді дамытады. Демография заңдылықтарды
                  сипаттайды Сұрау статистикасы лингвистер мен Интернетте кӛбірек сәйкес келеді.
                </p>
                <p>
                  Статистикалық әдістерді қолдану біздің дәуірге дейінгі 5 ғасырдан басталады.
                  Алғашқы жазбалардың бірі біздің дәуіріміздің 9 ғасырында жазылған кітапты қамтиды.
                  e. Араб философы, дәрігері, математигі және музыканты Аль-Кинди. Ол жиіліктік
                  анализді (гистограмма) қалай қолдану керектігі туралы толық сипаттама берді. 14
                  ғасырдан бастау алатын және Флоренция тарихын сипаттайтын жаңа шежірелер тарихтағы
                  статистиканың алғашқы оң еңбектерінің бірі болып саналады. Оларды флоренциялық
                  банкир Джованни Виллани құрастырды және халық, үкімет, сауда және сауда, білім
                  беру және діни сайттар туралы кӛптеген ақпаратты қамтиды.
                </p>
                <p>
                  Статистиканы ерте пайдалану мемлекеттің демографиялық және экономикалық
                  негізделген саясат құруға деген ұмтылысымен анықталады. Оның ауқымы 19 ғасырдың
                  басында кеңейтіліп, жалпы мәліметтер жинау мен талдауды қамтыды. Бүгінгі күні бұл
                  білім саласын мемлекеттік органдар, бизнес, жаратылыстану және әлеуметтік ғылымдар
                  кеңінен қолданады. Оның қажеттілігі құмар ойындарын зерттеу кезінде пайда болған
                  математикалық негіздер 17-ғасырда француз математиктері мен Пьер де Ферманың
                  ықтималдықтар теориясын дамытудан басталды. Статистикалық сипаттаманы алғаш рет
                  Карл Фридрих Гаусс 1794 жылы сипаттаған.
                </p>
                <p>
                  20 ғасырдың екінші жартысынан бастап есептеу қуатының қарқынды және тұрақты ӛсуі
                  қолданбалы статистиканың дамуына айтарлықтай әсер етті. Компьютерлік революция
                  оның эксперименттік және эмпирикалық компоненттеріне жаңа екпін берді. Қазір жалпы
                  және арнайы бағдарламалардың саны ӛте кӛп, олардың кӛмегімен кез-келген
                  статистикалық әдісті іс жүзінде оңай қолдана аласыз, мысалы, бақылау схемалары,
                  гистограммалар, бақылау тізімі, стратификация әдісі, Исикава схемасы немесе Парето
                  анализі.
                </p>
                <p>
                  Бүгінгі күні статистика бизнесті және ӛндірісті тиімді ұйымдастырудың негізгі
                  құралдарының бірі болып табылады. Бұл ӛзгергіштік тенденцияларын түсінуге және
                  ӛлшеуге, нәтижесінде процестерді басқаруды жақсартуға, сондай-ақ ӛнімдер мен
                  қызметтердің сапасын арттыруға мүмкіндік береді. Мәселен, мысалы, басшылар{' '}
                  <a href="https://i-topmodel.ru/kk/ponyatie-o-statisticheskih-metodah-kachestva-ponyatie-o-statisticheskom/">
                    статистикалық қасиеттер
                  </a>
                  , әдетте, негізделген шешімдер қабылдаңыз, осылайша менеджмент тиімді жұмыс
                  істейді және күтілетін нәтижелерге әкеледі. Сондықтан, бұл жағдайда статистика -
                  бұл кілт және, мүмкін, жалғыз сенімді құрал.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Ықтималдық және статистикалық шешім қабылдау модельдері
                </li>
                <li>
                  <b>•</b>Статистикалық шешім қабылдау әдістері.
                </li>
                <h3>2-деңгей. </h3>
                <li>• Статистикалық талдау?</li>
                <li>•Статистикалық қасиеттер дегеніміз не?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>Сызықтық регрессия. Кӛпмүшелік регрессия. Тарақты регрессия.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>SAG стохастикалық орташа градиент әдісі.</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 22 && (
            <>
              <h2 className="readRight__title">Лекция 8. Машиналық оқытудың қолдану ауқымы</h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Машиналық оқытудың қолдануы, машиналық
                  оқытудың мақсаты адам қызметінің түрлі салаларында күрделі кәсіби мәселелерді
                  шешудің жартылай немесе толық автоматтандыруы туралы түсінік беру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Машиналық оқытудың қолдану ауқымы.</li>
                <li>2. Бақыланбаған оқыту.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <h3>Машиналық оқытудың қолдану ауқымы</h3>
                <p>
                  Нейрондық желілерді машинаға кӛшіру немесе нейрондық желілер негізінде машина
                  жасау жӛніндегі ой алғаш рет ӛткен ғасырдың 40- жылдарында туындаған. Ол кездері
                  ми туралы таным-білім бүгінгідей кең ауқымда болмаған. Және есептеуіш
                  техникалардың қуаты тӛмен еді. Бүгінде ақпаратты компьютерге енгізу қиын дүние
                  емес. Оны арнайы бағдарлама, кодтар арқылы жасауға болады, Адам миының толықтай
                  бағдарламалық кӛшірмесін жасау әліге дейін мүмкін болмағанымен, нейрондық
                  желілерді белгілі бір мақсатта қолданатын бағдарламалар бар. Оған мысал – BI Group
                  компаниясының офисында орнатылған камералар. Ол камералар ғимаратқа кіретін жерде
                  орнатылған. Олар адамдарға және кӛліктерге арналып жасалған
                </p>
                <p>
                  Егер офис ішіне қандай да бір адам келетін болса, ол адам камераға қарап ӛтуі
                  керек, егер ол адам BI Group компаниясында жұмыс жасайтын болса, онда есік
                  ашылады, егер жұмыс жасамайтын болса, есік сол жердегі қызметкердің рұқсатымен
                  ғана ашылады. Машиналарға арналған жүйеде осылай жұмыс жасайды.
                </p>
                <p>
                  Машиналық оқыту – бұл ғылымдағы үрдіс, ал келешекте компьютерлік оқыту мәселесін
                  шешетін технологиялар. Бірден айтқым келеді, бұл толыққанды оқытуға жол
                  берілмейді, бұл адамның оқытуымен салыстыруға болады. Оқу процесінде қалыптасқан
                  машина білімі адам қабілетіне қарай нақты ақылды шешімдерді жасай алмайды. Осыған
                  қарамастан, машина жасау қажеттілігі күрт ӛсуде. Машиналық оқытудың тек
                  математиктер мен алгоритмдер саласынан кетіп, IT - бизнесмендер әлеміне, содан
                  кейін қарапайым адамдардың әлеміне тереңірек еніп жатыр. Бұл адамға зор пайда
                  әкеледі.
                </p>
                <p>
                  Машиналық оқытудың мақсаты адам қызметінің түрлі салаларында күрделі кәсіби
                  мәселелерді шешудің жартылай немесе толық автоматтандыруы болып табылады.
                  Машиналық оқытудың кең ауқымды қосымшалары бар:
                </p>
                <p>Санат: Биоинформатика қосымшалары;</p>
                <p>Санат: Медициналық қосымшалар;</p>
                <p>Медициналық диагностика;</p>
                <p>Санат: Геология және геофизикадағы қолданбалар;</p>
                <p>Санат: Әлеуметтану қосымшалары;</p>
                <p>Категория: Экономикадағы ӛтініштер;</p>
                <p>Несие ұпайлары;</p>
                <p>Тұтынушыларға күтім кӛрсетуді болжау (болжалды болжау) ;</p>
                <p>Алаяқтықты анықтау;</p>
                <p>Қордың техникалық сараптамасы;</p>
                <p>Нарықтың қадағалауы;</p>
                <p>Санат: Технологиялық қосымшалар;</p>
                <p>Техникалық диагностика;</p>
                <p>Робототехника;</p>
                <p>Компьютер кӛрінісі;</p>
                <p>Сӛйлеуді тану;</p>
                <p>Категория: Office автоматтандыру қосымшалары;</p>
                <p>Мәтінді тану;</p>
                <p>Спамды анықтау;</p>
                <p>Құжаттарды санаттау;</p>
                <p>Қолжазбаны тану;</p>
                <p>
                  Машиналық қосымшаларды қолдану ауқымы үнемі кеңеюде. Кең таралған ақпараттандыру
                  ғылым, ӛндіріс, бизнес, кӛлік, денсаулық сақтау саласындағы кӛптеген деректер
                  жинақталуына әкеледі. Бұл жағдайда уындайтын болжау, басқару және шешім қабылдау
                  проблемалары кӛбінесе прецеденттерден үйренуге азаяды. Бұрын мұндай деректер
                  болмаған кезде, бұл тапсырмалар мүлдем басқа әдістермен шешілмеген немесе мүлде
                  басқа әдістермен шешілген.
                </p>
                <p>
                  (Іс-тәжірибелік тапсырмалардың жалпы тұжырымы. Кӛптеген нысандар (жағдайлар) және
                  кӛптеген мүмкін жауаптар (жауаптар, реакциялар) бар.
                </p>
                <p>
                  Жауаптар мен нысандар арасында қандай да бір корреляция бар, бірақ ол белгісіз.
                  Тек преценденттердің түпкілікті жиынтығы - оқыту нысаны деп аталатын «нысан,
                  жауап» жұптары белгілі. Осы деректер негізінде, кезкелген ықтимал кіріс нысаны
                  үшін жеткілікті нақты жіктеуіш жауапты құруға қабілетті алгоритм салу керек, яғни
                  жабық тәуелділікті қалпына келтіру керек.
                </p>
                <p>
                  Бұл тәуелділік міндетті түрде аналитикалық түрде кӛрсетілмейді және мұнда
                  нейрондық желілер эмпирикалық қалыптасқан шешімнің принципін іске асырады. Мұның
                  маңызды ерекшелігі - дайындалған жүйені жалпылама білдіру қабілеттілігі, яғни
                  қолданыстағы жаттығу жиынынан тыс деректерге барабар жауап беру. Жауаптардың
                  дұрыстығын ӛлшеу үшін бағалаудың сапа функциясы енгізіледі.
                </p>
                <p>
                  Бұл тұжырым функциялардың жуықтауының классикалық мәселелерін қорыту болып
                  табылады. Аппроксимацияның классикалық мәселелерінде объектілер нақты сандар
                  немесе векторлар болып табылады. Нақты қосымшаларда нысандар туралы деректер
                  енгізу толық емес, дәл емес, сандық емес, гетерогенді болуы мүмкін. Бұл
                  мүмкіндіктер машинада оқыту әдістерінің алуан түріне әкеледі.
                </p>
                <p>
                  Терең оқыту (deep learning) – деректерді тереңірек түсінуді үйренетін машиналық
                  оқыту алгоритмдерінің классы.
                </p>
                <p>
                  Болжаудың мәселесі нысандар болашақ үшін болжам жасау қажет болған сәтте
                  аяқталатын уақыттық сериялардың сегменттері болып табылады.
                </p>
                <p>
                  Болжаудың проблемаларын шешу үшін регрессиялық немесе жіктеу әдістерін бейімдеу
                  жиі мүмкін болады, ал екінші жағдайда шешім қабылдау міндеттері туралы кӛп
                  айтылады.
                </p>
                <p>
                  Бақыланбаған оқыту - бұл жағдайда жауаптар орнатылмаған және сіз нысандар
                  арасындағы тәуелділіктерді іздегіңіз келеді. Кластерлеу міндеті - объектілерді
                  буындардың ұқсастығы туралы деректерді пайдаланып кластерлерге топтау. Сапа
                  функционалдығын әртүрлі түрде анықтауға болады, мысалы, орташа қапсырмалардың және
                  іштей қашықтықтардың арақатынасы.
                </p>
                <p>
                  Қауымдастық ережесін табу міндеті (қауымдастықтың ережелерін үйрену). Бастапқы
                  деректер сипаттамалар түрінде берілген. Нысандар сипаттамасында жиі кездесетін
                  белгілердің осындай белгілерін және осындай белгілерді табу қажет.
                </p>
                <p>
                  Сенімділік доменін құру міндеті (кванттық бағалау) – берілген үлгілік фракциясы
                  бар ӛте тегіс шекарасы бар ең аз кӛлемді аймақ. Ӛлшемділікті тӛмендету мақсаты –
                  кейбір конверсиялау функцияларының кӛмегімен, үлгі нысандар туралы маңызды
                  ақпаратты жоғалтпастан бастапқы ерекшеліктерге негізделген жаңа мүмкіндіктердің ең
                  аз санына ӛту. Сызықтық қайта құрулар классында ең танымал мысал негізгі
                  компоненттік әдіс болып табылады.
                </p>
                \
                <p>
                  Жетіспейтін мәндерді толтыру міндеті матрицасында жоғалған мәндерді ауыстыру болып
                  табылады - олардың болжамды мәндері бойынша белгілер.
                </p>
                <p>
                  Жартылай оқыту (жартылай бақыланатын оқыту) мұғаліммен немесе мұғалімсіз оқытудың
                  аралық орнын алады. Әрбір пайдалану жағдайы - «жауап» жұбы, бірақ жауаптар
                  пайдалану жағдайларының бӛліктері ғана белгілі. Қолданбалы міндеттің мысалы
                  олардың кейбіреуі қазірдің ӛзінде кейбір рубрикаларға тағайындалған жағдайда,
                  кӛптеген мәтіндерді автоматты түрде айқындау.
                </p>
                <p>
                  Динамикалық оқыту (онлайн-оқыту) мұғаліммен бірге және мұғалімсіз оқыту сияқты
                  болуы мүмкін. Ерекшелену – жағдайлардың ағынын пайдалану. Әрбір прецедент туралы
                  дереу шешім қабылдау және сол уақытта жаңа преценденттерді ескере отырып,
                  тәуелділікті модельді аяқтау қажет. Міндеттерді болжау кезінде, уақыт факторы
                  маңызды рӛл атқарады. Белсенді оқыту оқушының ӛзін-ӛзі тану мүмкіндігіне ие
                  болуымен сипатталады.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Машиналық оқытудың қолдану ауқымы.
                </li>
                <li>
                  <b>•</b>Бақыланбаған оқыту.
                </li>
                <h3>2-деңгей. </h3>
                <li>• Жартылай оқыту дегеніміз не?</li>
                <li>•Динамикалық оқыту дегеніміз не?</li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li> Вапник-Червоненкис Ӛлшемі. Перцептрон үшін Вапник-Червоненкис ӛлшемі.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>
                  Мультиколлинеарлық және қайта оқыту мәселесі, салмақты азайту (weight decay).
                </li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 23 && (
            <>
              <h2 className="readRight__title">Лекция 9. Data Mining модельдері</h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Data Mining технологиясының мақсаты мен
                  оқытатын қарапайым тәсілдер. Модельдердің түрлерін қарастыру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Data Mining технологиясы.</li>
                <li>2. Модельдердің түрлері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Data Mining технологиясының мақсаты - осындай модельді ақпараттарды табу,
                  қарапайым тәсілмен табылмайтын тәсілдерге қатысты болып табылады. Модельдердің екі
                  түрі бар: болжамдық және сипаттаушы.
                </p>
              </p>
              <p>
                <b>Сипаттаушы модельдер.</b> Болжау модельдері белгілі нәтижелері бар деректертер
                жиынтығының негізінде құрылады. Олар өзге деректертер жиынтығының негізінде
                нәтижелерді болжау үшін қолданылады. Бұл жағдайда, әрине, модельдің максималды
                нақты, статистикалық жағынан мәнді және дәлелді және т.б. болуы талап етіледі.
              </p>
              <p>Осындай модельдерге келесідей жатады:</p>
              <p>
                • Классификация модельдері - ережелер мен ережелер жиынтығын сипаттайды, соларға
                сәйкес қандайда бір жаңа объектіні класстардың біріне жатқызуға болады. Мұндай
                ережелер қазіргі бар объектілер туралы ақпараттарды кластарға бөлу жолымен құрылады;
              </p>
              <p>
                • Реттілік модельдері - үздіксіз сандық параметрлерді болжауға мүмкіндік беретін
                функцияларды сипаттайды. Олар өткен уақыт кезеңінде кейбір параметрлерді өзгерту
                жөніндегі деректер негізінде құрылады.
              </p>
              <p>
                Сипаттаушы (descriptive) модельдер деректер жиынтығында түрлі факторлардың өзара
                әсеріне, тәуелділік мәніне, яғни түрлі жүйелердің эмпириялық модельдерінің
                құрылымына назар аударады. Мұндай модельдердегі басты жол - адамның қабылдауы үшін
                жеңілдік пен аңықтылық. Мүмкін табылған заңдылықтар нақты зерттелетін деректердің
                арнайы белгісі болып және өзге жерде кездеспейтін шығар, бірақ бұл қалайдв падалы
                және сондықтан да мәлім болуы тиіс.
              </p>
              <p>Мұндай модельдердің келесі түрлері бар:</p>
              <p>
                {' '}
                • Регрессионды модельдер - тәуелді және тәуелді емес көрсеткіштер арасындағы және
                адамға түсінікті формаға ауыспалы қызметтік тәуелділіктерді сипаттайды. Мұндай
                модельдер тек үздіксіз сандық параметрлер арасында ғана емес, сондай-ақ санатты
                параметрлер арасындағы қызметтік тәуелділікті сипаттайтындығын ескере кеткен жөн;
              </p>
              <p>
                {' '}
                • Кластер модельдері - топтарды (кластерлерді) сипаттайды, оларға деректері талдауға
                ұшырайтын объектілерді бөлуге болады. Объектілер (бақылаулар, оқиғалар)
                объектілердің мәнің сипаттайтын деректердің (қасиеттердің) негізінде топтастырылады.
                Кластер ішіндегі объектілер бірбіріне «ұқсас» және өзге кластерге кіргендерден
                өзгеше болуы мүмкін. Кластер ішіндегі объектілер неғұрлым бір-біріне «ұқсас» және
                кластерлер арасындағы айырмашылықтар көп болған сайын, кластеризация нақтырақ бола
                түседі;
              </p>
              <p>
                {' '}
                • Ерекшелік модельдер - жазбалардағы ерекше жағдайларды сипаттайды (мысалы жеке
                емделушітерді), олар негізгі көпшілік жазбалардан (науқастардың топтарынан) бірден
                өзгеше болып көрінеді. Ерекшелікті білу екі түрлі болуы мүмкін. Бәлкім, бұл
                жазбаларда оператордың шатасуынан кеткен кездейсоқ қателіктер болуы мүмкін. Сипатты
                жағдай: егер оператор қателесіп ондық нүктені басқа жерге қоя салса, онда мұндай
                қателік дереу құрылу тәртібіне әсер етеді. Мұндайда кездейсоқтықты зерттеуден мүлде
                алып тастау қажет, бұл тарау осындай «шығарындылардың» болуына өте сезімтал – дереу
                оқшау көрінетін нүктелерге, сирек кездесетін, әдеттегіден тыс жағдайларға. Басқа
                жағынан қарайтын болсақ ерекшелігі бар жазбалар зерттеудің қызығушылығын тудыруы
                мүмкін, яғни олар кейбір сирек кездесетін, бірақ тосын сырқаттардың көрсеткіші болуы
                мүмкін. Тіпті бұл жазбалардың теңестірілуі, оларды ары қарай талдау және бөлшектеп
                қарастыру жөнінде айтпағанда, зерттелуші объектілер мен олардың мәнін түсінуде өте
                пайдалы болуы мүмкін;
              </p>
              <p>
                {' '}
                • Қорытынды модельдер - талданушы деректер массивіне шектеуді анықтау. Мысалы,
                миокард инфарктісін бастан кешкен, 30 жастан аспаған емделуші бойынша деректерді
                қарағанда, олардың күніне 5 қораптан аса шылым шегетіндігі немесе салмағының 95
                килограмнан төмен еместігі анықталады. Мұндай шектеулер массив дерегін түсіну үшін
                өте маңызды, бұл талдаулардың негізінде алынған жаңа білім. Осылайша қорытынды
                модельдерді құру барлығы үшін немесе зерттелуші деректерді іріктегендегі барлық
                жазбаларда дұрыс қандайда бір деректерді табуға шоғырланады, бірақ осындай
                форматтағы жазбалардың алуан түрлілігі сирек кездесетің, сол белгіленген жолдарда
                орналастырылуы сирек кездестіріледі. Егер салыстыру үшін барлық емделушілер бойынша
                алатын болсақ, онда көп шылым шегетіндердің немесе өте семіз адамдардың пайызы аса
                көп емес. Жіктелудің анық емес тапсырмасы шешілуде деп айтуға болады, бірақ деректі
                түрде ұсынылған деректері бар бір ғана кластың тапсырмасы тапсырылған;
              </p>
              <p>
                {' '}
                • Ассоциативті модельдер - байланысты оқиғалар арасындағы заңдылықтарды анықтау.
                Мұндай заңдылықтардың мысалы ретінде келесі ереже қызмет етеді, Х оқиғадан Y оқиға
                туындайды. Мұндай ережелер ассоциативті деп аталады.
              </p>
              <p>
                Қарастырылған модельдерді құрау ұшін, Data Mining алгоритмі мен тәсілдері
                қолданылатын болады. Data Mining технологиясы статистика, ақпарат теориясы,
                машиналық оқыту және деректер базасы теориясы сияқты пәндер тоғысуында дамыды және
                дамып келетіндігін ескере отырып, Data Mining әдістерінің және алгоритмдеріні
                көпшілігі түрлі технологиялар мен тұжырымдар негізінде жасалған, заңдылықтарға
                сәйкес деуге болады. Ары қарай Data Mining әдістері тарататын технологияларды
                қарастырайық.
              </p>
              <p>
                <b>Базалы тәсілдер.</b> Базалы Data Mining тәсілдерге ең алдымен алгоримдерді
                жатқызу тура келеді. Барлық зерттелетін объектілерді оңай таңдау, 2n операцияларға
                негізделетін болады, мұндағы N- объектілердің саны.
              </p>
              <p>
                Деректердің көлемінің ұлғаюына қарай есептеулердің көлемі де ұлғаюда, қандайда бір
                тапсырманың көлемі көп болған жағдайда шешімі тәжірибе жүзінде мүмкін еместей
                көрінеді. Мұндай алгоритмдердегі есептеу күрделілігін қысқарту үшін артықшылықты
                қысқартуға әкелетін эвристиканың түрлерін қолданады. Осы алгоритмдерді оңтайландыру
                операциялар санын линиялық түрдегі қызметтің зерттелуші деректерінің санына тәуелді
                етуге әкеледі. Сондай-ақ атрибуттар санының тәуелділігі, әлбетте, экспоненциалды
                болып қалады. Олардың көп естігін ескрегенде (көптеген жағдайларда сирек
                кездесетіндігі) мұндай тәуелділікті құптауға болады.
              </p>
              <p>
                Бұл алгоритмдер деректерінің негізгі қасиеті, оларды түсіну және қолдану
                көзқарасынан алғанда, қарапайымдылығы болып табылады. Кейбір жетіспеушіліктеріне
                орындай алгоритмдер құрудың негізіде формальды теорияның жоқтығын, оларды зерттеу
                мен дамытудағы қиындықтарды жатқызуға болады.
              </p>
              <p>
                Data Mining базалы тәсілдерге статистика теориясындағы бағыттарды да жатқызуға
                болады. Осыған орай, Data Mining статистиканың дамуы болады, мұндай әдістер
                жеткілікті. Олардың негізгі идеясы: корелляционды және регрессионды негіздеме арқылы
                жүргізілетін болады. Басты жетіспеушілігі белгілерді орташаландыру, ол деректердің
                ақпараттылығын жоғалтады Бұл, әрине, алынатын білімді төмендетеді.
              </p>
              <p>
                <b>Нақты емес логика.</b> Деректерді талдауды зерттеудің басты әдісі болып олардың
                қалыпты тілге ауыстырылуы және алынған модельді талдау табылады. Жоқ ақпарат
                жөніндегі бірдеңгейсіздікті келесідей 3 топтар арқылы анықтауға болады:
              </p>
              <p>
                {' '}
                • Анықталмағандық;
                <p>• Толықсыздық (жетімсіздік, адекватсыздық);</p>
                <p>• Нақтылықсыздық.</p>
                <p>
                  Анықсыздық табиғи (оның қайнар көзі сыртқы орта) және лингвистикалық (сөздік
                  қорыту нәтижесінде туындайды және сансыз жағдайлар санын шектеулі сөздермен
                  шектеулі уақытта сипаттау қажеттілігімен шартанады) болады.
                </p>
                <p>Физикалық нақтылықсызыдқтың екі түрі белгілі:</p>
                <p>
                  1. Дәлсіздік (табиғи құралдармен жасалатын, белгілі көлемдегі мәндердің өлшемінің
                  дәлсіздігі);
                </p>
                <p>
                  2. Кездейсоқтық (немесе сыртқы ортада бірнеше мүмкіндіктің болуы, олардың әрқайсы
                  кездейсоқ жағдаймен шынайы болуы мүмкін; мүмкіндіктерді таратудың лайықты
                  заңдылықтарын меңгеруді алғышарттаған).
                </p>
                <p>Лингвистикалық нақтылықсыздықтың екі түрі бар:</p>
                <p>
                  1.Сөздердің мәндерінің анықсыздығы (көп мәнділік, тиянақсыздық, түсініксіздік,
                  дәлсіздік). Ол, бір ғана сөзбен белгіленетін тапсырманың басқару объектілері
                  әртүрлі болған жағдайда туындайды;
                </p>
                <p>
                  2. Сөз орамдары мәнінің бірнеше мәндес болуы (синтаксистік және семантиялық
                  болады).
                </p>
                <p>
                  Табиғи анықсыздықтарды өңдеу үшін мүмкіндік теориясының әдістері мен көптіктің
                  классикалық теориясы тиімді қолданылады. Бірақ жүйелердің дамуымен қатар табиғи
                  тілдің қатынасын және түсінігін өңдеуді талап ететін жасаңды интеллект теориясының
                  әдістерінде тапсырмалардың лингвистикалық анықсыздығын есепке алу мақсатында
                  көптеген қалыпты әдістерді кеңейту қажеттігі туындады.{' '}
                </p>
                <p>
                  Дәл емес көптік теориясының негізін қалаушы болып басқару облысындағы танымал
                  маман Л.Заде болуы кездейсоқтық емес. Өйткені, дәл емес логика туралы бастапқы
                  идеяда шешімдерді қабылдау үрдістері мен басқару жөніндегі ұсыныстар жинақталды.
                  Ал мұндай тапсырмалар барлық технологиялық процесстерде туындайды, осы теорияны
                  дамытудағы қажеттілік және олардың мүмкіндіктері өте кең.
                </p>
                <p>
                  Бұл параметрлерді және ауыспалы сандарды ұлғайтумен, жеке ауыспалы күрделіліктерді
                  жоғарылатумен байланысты. Нәтижесінде тепе-тең модельді кұру мүлде мүмкін емес.
                  Осының орнына Л. Заде линвистиялық модельді ұсынды, онда математикалық өрнектер
                  емес сапасын білдіретін сөздер қолданылады. Сөздік модельдерді қолдану
                  математикалық модельдеуге ұқсас дәлдікті қамтамасыз етпейді, бірақ жақсы сапалы
                  модельді құруға болады. Бұл жағдайда талқыға түсетін сипаттау жүйесі тіліндегі
                  сөздердің нақты еместігі болады.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Data Mining технологиясы.
                </li>
                <li>
                  <b>•</b>Модельдердің түрлері.
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b> Сипаттаушы модельдерге қандай модельдер жатады?
                </li>
                <li>
                  <b>•</b>Классификация модельдері дегеніміз не?
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> Реттілік модельдері
                </li>
                <li>
                  <b>•</b>Регрессионды модельдер
                </li>
                <li>
                  <b>•</b>Кластер модельдері
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li> Логистикалық регрессия. Градиентті түсу.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>
                  Байесов реттелуі. Деректер мен модельдің бірлескен сенімділігінің максималды
                  принципі. Квадраттық (Гаусс) және Лаплас реттегіштері.
                </li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 24 && (
            <>
              <h2 className="readRight__title">Лекция 10. Data Mining модельдерінің түрлері</h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Data Mining модельдерінің түрлеріне
                  жататын нақты емес кӛптік және лингвистикалық ауыспалы түсінігі, нақты емес
                  логиканың ерекшеліктері, Нақты емес срездер және Анық емес кӛптіктерді қарастыру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Data Mining модельдерінің түрлері.</li>
                <li>2. Нақты емес срездер.</li>
                <li>3. Анық емес кӛптіктерді </li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Адамға күрделі объектілерді басқару процессінде тиянақсыз шектегі түсініктер мен
                  қатынастармен операциялау тән. Тиянақсыздықтың кӛзі болып объектілер класының,
                  тиесілік дәрежесінің (кӛлем, толық тиесіліктен толық тиесілікке дейін үздіксіз
                  ӛзгеріп тұратын). Бинарлы сипатты қызметке негізделген қарапайым математикалық
                  кӛптік түсінігі мұндай сипаттама қалыптастыруға мүмкіндік бермейді.
                </p>
                <p>
                  Л. Заденің екі негізгі шығысты нақты емес кӛптік және лингвистикалық ауыспалы
                  түсінігін енгізуі - күрделі жүйелердің сипаттмамасын қалыптастыру мүмкіндігін
                  кеңейтті. Осындай модельдер ленгенетикалық деп аталады.
                </p>
                <p>
                  Нақты емес логиканың негізгі құндылықтарын қарастырып кӛрейік. Егер қысқаша
                  айтатын болсақ, онда нақты емес логика адамның ойлауын жемісті кӛруге мүмкіндік
                  береді. Күнделікті қызметте адам математикалық ӛрнектер негізінде модельді
                  қалыптастыруды қолданбайды, барлық тӛңіректегіні сипаттайтын бір әдбебап
                  заңдылықты іздестірмейді. Ол нақты емес табиғи тілді қолданады. Адам шешім
                  қабылдау процессінде жағдайды жеңіл меңгереді, оларды оқиғаларға бӛледі, әр
                  оқиғаға сәйкесінше, тәжірибесіне, шешімдерді қабылдау ережелеріне қарай күрделі
                  мәселелерді шешеді, кейде сапалық ӛлшемдерге кереғар шешімдерді де қолданады.
                  Осылайша адамның алдында белгілі жағдайдағы объектілер үзіңділерінің қасиеттерің
                  сипаттайтын бірқатар локальді модельдер туындайды. Барлық модельдердің бір
                  ортақтығының болуы және сапалық деңгейде түсіну үшін ӛте қарапайымдылығы аса
                  маңызды болады. Мұндай сӛздік модельдің қаңқасының мысалы ретінде «егер....,
                  онда......» құрылымы болып табылады.
                </p>
                <p>Нақты емес логиканың ерекшеліктерінің негізгі үш ережесі:</p>
                <p>
                  1. Шешімдерді қабылдау ережесі болып «егер...., онда......» түріндегі шартты
                  айтулар орын алғанда және логикалық қорытынды механизмінің кӛмегімен жүзеге
                  асырылғанда табылады;
                </p>
                <p>
                  2. Бір қорытылған анық ереженің орнына анық емес логика кӛптеген жеке ережелерді
                  тірек етеді. Онда ақпаратты кеңістікті таратудағы әр жергілікті облыс үшін, әр
                  реттелуші кӛлем үшін, басқарудың әрбір мақсаты үшін ӛз ережелері тапсырылады. Ол
                  кӛп еңбекті талап ететін процессті мақсаттар орамдарынан және қорытылған мақсатты
                  ӛлшем алудан бас тартуға мүмкіндік береді, ӛз алдына қарама-қайшы мақсаттармен
                  операциялар жасау мүмкіндігін береді;{' '}
                </p>
                <p>
                  3. «Егер...., онда......» түріндегі ереже оператормен диалог тәртібінде
                  тапсырмаларды топтастырып шешуге мүмкіндік береді, ол пайдалану процессінде
                  топтастырушының сапасын жоғарылатуға мүмкіндік тудырады.
                </p>
                <p>
                  Осылайша адам ойлуының және анық емес логикасының жалпы белгілерін байқауға
                  болады, сондықтан анық емес логика негізіндегі басқару әдістерін кӛбінесе
                  эвристикалық деп есептеуге болады. Эвристикалық тәсілдер тапсырмаларды шешуде
                  қатаң математикалық модельдер мен алгоритмдерге негізделмеген, олар «дұрыс мағына»
                  пікіріне негізделген.
                </p>
                <p>
                  Анық емес деректерді ӛңдеудің эвристикалық алгоритмдерінің дамуы деп ӛзің-ӛзі
                  ұйымдастырушы жүйелерді айтуға болады. Қандай жағдай болмасын соңғысының ӛзегі
                  болып анықтық еместікті ӛңдеу болып табылады, ал артынша адам ойлауының қағидалары
                  қолданылады. Бірақ ӛзіңӛзі ұйымдастырушы жүйелер ары қарай кете береді және дами
                  түседі, объектілерге икемделеді, белгілі мәнде, басқару объектісі жӛніндегі
                  ақпарат жұмысы процессінде дербес алып қолданады.
                </p>
                <p>
                  Жалпы жағдайда, келесідей іске асырылу схемасын жасауға болады: анықтау{' '}
                  {'—>болжау —>'} идентификация —* шешім қабылдау {'—>'} басқару.
                </p>
                <p>Бұл мақсаттар бір класқа жатқызылғанын да анықтауға болады.</p>
                <p>
                  <b>Нақты емес срездер.</b> Бір технологияны (деректер қоймасын) ӛзге (анық емес
                  логика) технологиямен байытудың жақсы мысалы нақты емес кескіндерді кӛрсетеді
                  (fuzzy slices). Олармен ӛлшемдер бойынша фильтрлар түсіндіріледі, онда анық емес
                  кӛлемдер кӛрсетіледі, мысалы «барлық жас қарызданушының кірісі аз». Реляциялық
                  деректер базасында бұл рольді анық емес сұраныстар атқарады (fuzzy queries,
                  flexible queries), оларды алғаш рет 80-ші жылдардың Д. Дюбуа және Г. Прада
                  еңбектерінде ұсынған.
                </p>
                <p>
                  Ӛйткені ДҚ ақпараты анық түрде беріледі, фильтрде қолдану үшін анық емес
                  түсініктерді анық емес кӛптіктердің кӛмегімен қалыптастыру қажет, олар тӛменде
                  келтірілген.
                </p>
                <p>
                  <b>Анық емес көптіктер.</b> Анық емес кӛптіктерді математикалық теориясы (fuzzy
                  sets) және анық емес логикасы (fuzzy logic) кӛптіктің классикалық теориясымен және
                  классикалық формалды логикамен қорытылған болып табылады. Бұл түсініктер алғаш рет
                  американдық ғалым Лотфи Задемен (Lotfi Zadeh) 1965 жылы ұсынылған болатын. Жаңа
                  теорияның пайда болуына себепті адам процесстерін, жүйелерін, объектілерін
                  сипаттауға жақын және анық емес талқылаулардың бар болуы тудырды.
                </p>
                <p>
                  Анық емес кӛптіктің сипаттамасы болып тиесілік функциясы кӛрсетіледі (membership
                  function). μ(x) арқылы тиесілік дәрежесің, элементтің x анық емес кӛптікті,
                  қарапайым кӛптік функциясының сипаттамасы түсінігін қорытындылайтын, белгілейік.
                  Сонда анық емес кӛптік С келесі түрдегі реттелген жұптар кӛптігі деп аталады C ={' '}
                  {'{μ(x)/x}'}, сонда μ(x) әр мәндегі [0, 1], x ∈ X аралығында қабылдай алады. μ(x)
                  = 0 мәні тиесіліктің кӛптікке жатпайтындығын білдіреді, 1 толық тиесілікті
                  білдіреді.
                </p>
                <p>
                  Осыны қарапайым мысалда иллюстрациялап кӛрейік. Нақты емес анықтама қалыптастырып
                  кӛрейік «сенімсіз қарыздар». X (талқылау облысы) ретінде кейінгі 6 айда несие
                  бойынша мерзімінен ӛтіп кеткен қарызданған жағдайларының саны кӛрсетіледі. Ол
                  0-ден 6-ға дейін кӛрсетілсің делік. Сарапшы анықтаған анық емес кӛптік келесідей
                  кӛрінуі мүмкін:
                </p>
                <p>{'C = {0/0; 0,4/1; 0,7/2; 0,9/3; 1/4; 1/5; 1/6}.'}</p>
                <p>
                  Сонымен, екі мерзімінен ӛтуіп кетуі бар қарыздар «сенімсіз» кӛптігіне 0,7 тиесілік
                  дәрежесімен жатқызылады. Бір банк үшін мұндай мерзімінен ӛткізу саны мәнсіз
                  болғанмен, ӛзге банктер үшін ол алаңдатарлық белгі болып табылады. Дәл осында
                  сәйкес кӛптік тапсырмасының анық еместігі кӛрінеді.
                </p>
                <p>
                  Ауыспалыларға, деректердің толассыз түріне жататындары, тиесілік функциясын
                  сарашылық формуламен тапсырған және кӛрнекілік ретінде графикамен кӛрсеткен жӛн.
                  Тиесілік функциясын тапсыруға арналған қисық типтік формалардың оншақты түрлері
                  бар. Ең танымал деген кесектіксызықтық түрлерін қарастырайық: үшбұрышты және
                  трапециялы 1.1 суретте
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img32.png" alt="" />
                  <p>1.1 – сурет – Тиесіліктің типтік функциялары</p>
                </p>
                <p>
                  Тиесіліктің үшбұрышты функциясы үштік санмен анықталып (a, b, c) келесі сипататрға
                  ие:
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img33.png" alt="" />
                </p>
                <p>Прапедициалды функцияға тӛрт сан қажет: (a, b, c, d):</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img34.png" alt="" />
                </p>
                <p>
                  Анық емес кӛптіктер үшін, қарапайымдылары сияқты негізгі логикалық операциялар
                  анықталған. Есептесуге ең қажеттілері қилысу, біріктіру және теріске шығару болып
                  табылады.
                </p>
                <li>• Екі тақ санның қиылысуы A ∩ B (анық емес «И»): μ(x) = min(μA(x), μB(x));</li>
                <li>
                  • Екі анық емес кӛптікті біріктіру A ∪ B (анық емес «НЕМЕСЕ»): μ(x) = max(μA(x),
                  μB(x));
                </li>
                <li>
                  • Анық емес кӛптікті теріске шығару ¬А: μ(x) = 1 − μA(x), мұндағы μ(x) —
                  операцияның нәтижесі;
                </li>
                <li>μA(x) — х элементінің А элементіне тиесілігі;</li>
                <li>μB(x) — х элементінің В элементіне тиесілігі.</li>
                <p>
                  Бір объектіге жатқызылатын кӛптіктің жиынтығы лингвистикалық ауыспалылықты
                  құрайды. Мысалы, лингвистикалық ауыспалылық Жас ерекшелігі Жас, Орташа, Егделеген
                  болып қабылдануы мүмкін (оларды базалық терм-кӛптік немесе терм деп атайды).
                  Келесі түрде талқылау облысын тапсырайық X = {'{x | 0 < x < 90}'} (жылдар). Енді
                  әр терм үшін тиесілік функциясын құру қалды (сурет 1.2).
                </p>
                <p>
                  Әрбір функция нақты сандар арқылы анықталатын болады: Жас = {'{0; 0; 12; 40},'}{' '}
                  Орта = {'{20; 30; 50; 70},'} Ауыспалы = {'{50; 60; 90; 90}'}.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img35.png" alt="" />
                  <p>1.2 – сурет – Лингвистикалық ауыспалы «ЖАС»-тың графикалық суреті</p>
                </p>
                <p>
                  <b>Нақты емес срездердің жасалу принципі.</b> Лингвистикалық ауыспалыны әр
                  ӛлшемге, ӛлшем немесе факты атрибутына тапсыруға болады, олардың мәні үздіксіз
                  түрде болады. Олардың параметрлері: атауы, терм-кӛптігі, тиесілік параметрлері
                  деректердің сематикалық сақтау қойма қабытында сақталады (сурет 1.3).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img36.png" alt="" />
                  <p>
                    1.3 – сурет – Анық емес кесінді қолдауымен деректер қоймасың ұйымдастырудың
                    нұсқасы
                  </p>
                </p>
                <p>
                  Анық емес кесінді орындаудың нәтижесі, тапсырылған жағдайды қанағаттандыратың
                  кӛптеген гиперкуб ұяшықтарынан басқа, кесіндіге сәйкес индекс болып табылады CI ∈
                  [0, 1]. Ол куб қиылысында кездесетің қорытынды тиесілік дәрежесің кӛптеген анық
                  емес ӛлшемдер мен деректерге қатысың ұсынады және деректер жинағының әр жазбасында
                  есептелінеді. ДҚ сұраныстарын орындауды жылдамдату үшін сәйкестік CI {'>'} а
                  индексінің жоғарғы шегін тапсырады. Ол келесі деңгейде SQL-сұранысы деңгейінде
                  жазбаларды іріктеуге кӛмектеседі, олар сәйкестік индексінің минималды табалдырығын
                  қанағаттандырмайды (сурет 1.4). Суретте кӛрсетілген, [xf, x2] аралығындағы мәндегі
                  анық емес кӛптік элементтері а – дан тӛмен емес тиесілік дәрежесің қамтамасыз
                  етеді.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img37.png" alt="" />
                  <p>1.4 – сурет – Анық емес кӛптік</p>
                </p>
                <p>
                  Анық емес кесіндіні қалыптастыруды сұлба (сурет 1.5) иллюстрациялайды. 1 қадамда
                  деректер қоймасының семантикалық қабаты қолданылады. 3 қадамында нәтижелеңдіретің
                  SQL-тапсырыс а сәйкестігінің минималды индексін ескере отырып шегіне түседі. 5
                  қадам анық емес логикалық операцияларды қолдануды алғышарттайды.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img38.png" alt="" />
                  <p>1.5 – сурет – Анық емес кесіндіні алудың алгоритмі</p>
                </p>
                <p>
                  Мысалды қарастырайық. Қоймада бос жұмыс орындарын іздеушілер туралы ақпараттар тұр
                  делік және кесінді (анық) ӛлшемдері бойынша сауалнама Коды, Жасы және Жұмыс ӛтілі
                  келесі деректер жиынтығы қамтамасыз етеді кесте 1.1.
                </p>
                <p>
                  Әрине, сауалнама Коды – ол қызметтік жол. Жасты есептеу үшін 1.1 суретте
                  анықталған лингвистикалық ауыспалыны, ал жол үшін Жұмыс ӛтілін – ауыспалы,
                  анықталған 1.5 суретте. Әр тиесілік қызметі сандармен сипатталады: Кішісі ={' '}
                  {'{0; 0; 6}, Жалғасымды = {3; 6; 10; 20}, Үлкен = {15; 25; 40; 40}.'}
                </p>
                <br />
                <p>1.1 – кесте – Ӛлшем бойынша кесінділермен «Жас» және «Жұмыс ӛтілі»</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img39.png" alt="" />
                  <p>1.6 – сурет – «Жұмыс ӛтілі» лингвистикалық ауыспалының графикалық келбеті</p>
                  <p>
                    Нақты емес срез жасайық «Жасы = Жұмыстың орта стажы = Жалғасымды». Мысалы, 4
                    анкета үшін ақпарат аламыз:
                  </p>
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img40.png" alt="" />
                </p>
                <p>
                  Дәл солай әр үміткер үшін тиесілік дәрежесің қорытынды анық емес кӛптікпен
                  есептейік, 0,3ке тең сәйкестіктің минималды индексің тапсырайық және 7 кестеде
                  кӛрсетілген нәтижені аламыз.
                </p>{' '}
                <br />
                <p>1.2 – кесте – Айқын емес кесiктiнің нәтижесі</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img41.png" alt="" />
                </p>
                <p>
                  Деректер қоймасындағы анық емес ізденіс сарашыға максималды пайда келтіреді, егер
                  анық емес түсініктерді операциялай отырып ақпаратты алып қана қоймай, қалайда
                  тапсырыстың релеванттілік дәрежесің кему (ӛсу) бойынша кӛрсететің болсақ. Бұл
                  келесі сұрақтарға жауап беруге кӛмектеседі: біріншіден қандай клиенттерге звондау
                  керектігін, кімге жарнамалық ұсыныс жасау керектігін және т.б.
                </p>
                <p>
                  Генетикалық алгоритмдер (ГА) түрлі типті тапсырмаларды шешуге мүмкіндік беретін
                  оңтайландырудың әржақты әдістерінің санына жатады (коДБинатор¬лық, шектеулер мен
                  шектеулерсіз жалпы тапсырмалар) және күрделілік дәрежесі әртүрлі. Сонымен ГА
                  ландшафтысы тегіс емес үлкен кеңістіктегі бір ӛлшемді, сондай-ақ кӛп ӛлшемді
                  ізденісті сипаттайды.
                </p>
                <p>
                  Соңғы кездері ГА теориясының дамуына және оларды тәжірибелік қолдануға арналған
                  шетел ғалымдарының еңбектері кӛбейіп кетті. Бұл зерттеулердің нәтижелері кӛбінесе
                  ГА ӛзге әдістермен және технологиялармен интеграцияланғанда кең тарайды. ГА
                  интеграциясының және анық емес теория әдістерін, сондай-ақ нейронды есептеулер мен
                  жүйелердің тиімділігін дәлелдейтін еңбектер пайда болды.
                </p>
                <p>
                  Мұндай интеграцияның тиімділігі сәйкес аспаптық құралдарды (ИС) ӛңдеуде
                  тәжірибелік дәлелің тапты. Сонымен, Attar Software фирмасы сараптамалық жүйені
                  жасауға арналған, ӛздерінің ИС жұмысың жетілдіру тапсырмаларын шешуге
                  бағдарланған, ГА-компонентің қосты. California Scientific Software фирмасы
                  нейрондық желілер үшін автоматты генерациясын және нейронды желілерді дұрыстауды
                  қамтамасыз ететін ИСты ГА-компоненттерімен қосты. NIBS Inc. фирмасы ӛзінің құнды
                  қағаздар нарығын болжауға бағытталған нейрондық желілері үшін ИС-ты
                  ГАкомпоненттерімен қосты, қаржылық сарапшылардың пікірінше оларды болжауды
                  нақтылауға кӛмектеседі.
                </p>
                <p>
                  ГА интеграциясының және анық емес логикаға жалпыға танымал кӛзқарастарға
                  қарамастан, бұрынғысынша анық емес ӛнімдік алгоритмін (НПА) қолдану есебінен ГА
                  жұмысы процессінде бейімделу мақсатында елеулі ГА операциондық базис параметрлерін
                  анықтау тапсырмасы кӛкейкесті болып тұр.
                </p>
                <p>
                  Жасаңды интеллект облысында аспапты құралдардың коммерциялық жетістігінің тӛменде
                  тізбектелген себептері ГА-да қолданылатын деректерді талдау жүйесің ӛңдеуге
                  қойылатын жалпы талаптар ретінде қарастырылуы мүмкін:
                </p>
                <p>
                  • АЖ ӛңдеулерінің интегралданғандығы , ӛзге ақпараттық технологиялармен және
                  құралдармен жеңіл интегралдануы;
                </p>
                <p>
                  • АЖ ӛңдеулерінің ашықтығы мен тасымалдағыштығы әртүрлі бағдарлама-аппараттық
                  ортада орындалу және қайта бағдарламалаусыз ӛзге платформаларға тасымалдану
                  мүмкіндігін стандарттарға сәйкес қамтамасыз етеді;
                </p>
                <p>
                  • Дәстүрлі бағдарламалау тілдерің қолдана отырып ИС-қа ауысу интегралдылықты
                  қамтамасыз етуді жеңілдетеді, ЭВМ тез әрекет ету және оперативтік сақтау кӛлемінің
                  қосымшаларына қойылатын талаптарды тӛмендетеді;
                </p>
                <p>
                  • Сәулет "клиент-сервер" ИС әзірлемесі, «клиент-сервер» сәулеттегі таратылған
                  есептеулерді қолдайды, қосымшаларда қолданылатын қондырғылардың құнын тӛмендетеді,
                  қосымшаларды децетралдандырады және олардың ӛнімділігін жоғарылатады.
                </p>
                <p>
                  Нейронды желілердің ГА интеграциясы нейрондар кірісінің салмақтық мағыналарын
                  тиімді іздестіру проблемаларын шешуге мүмкіндік береді, ал ГА және анық емес
                  логика интеграциясы ӛнімдік ережелер жүйесін оңтайландыруға мүмкіндік береді, олар
                  ГА басқару операторларымен қолданылады (екі бағытты интеграция).
                </p>
                <p>
                  Data Mining облысындағы ГА қосымшаларының сұранысқа ие болып жүргендерінің бірі
                  ӛте тиімді модельді іздестіру болып табылады (нақты облыс ерекшелігіне лайықты
                  алгоритмді іздестіру).
                </p>
                <p>
                  Нейронды желілер - адам миына биологиялық жағынан ұқсастыққа негізделген модельдер
                  классы. Бұл әдістерді қолданғанда, алдымен желі сәулетің нақты тандау сұрағы
                  бірінші орында тұрады (әр қайсындағы «қабаттардың» саны және «нерондардың»
                  мӛлшері).
                </p>
                <p>
                  Желінің ӛлшемі мен құрылымы зерттелуші құбылыстың мәніне сәйкес келуі тиіс
                  (мысалы, формалды есептеу күрделілігінің мәнінде). Талдаудың бастапқы кезеңінде
                  құбылыстың табиғаты аса мәлім болмайды, сәулетті тандау оңай жұмыс емес болып
                  табылады және ұзақ уақыт «сынама мен қателер» процессімен жиі байланысты болады
                  (бірақ кейінгі кезде нейронды-желілік бағдарламалар пайда бола бастады, күшті
                  сәулет желісің іздестіру тапсырмасын шешу үшін).
                </p>
                <p>
                  Артынша құрылған желі оқыту процессіне ұшырайды. Бұл кезеңде желі нейрондары кіріс
                  деректерін итеративті ӛңдейді және ӛз салмағын желі жақсы болжауы үшін дұрыстайды
                  (дәстүрлі терминмен айтатын болсақ «қиыстырып келтіруді жүзеге асырады» деп айтар
                  едік). Бар деректерді оқытқаннан кейін желі жұмысқа дайын және оны болжау құруға
                  қолдануға болады.
                </p>
                <p>
                  «Оқытудың» нәтижесінде алынған нейрондық желі деректерде кӛрінетін заңдылықтарды
                  кӛрсетеді. Осындай қолданыста ол кейбір ауыспалылар арасындағы тәуелділік
                  модельдерінің қызметтік эквиваленті болып табылады, олар дәстүрлі модельдеудегі
                  құрылатынға ұқсас. Бірақ, дәстүрлі модельдерге қарағанда, нейронды желілерде бұл
                  тәуелділіктер ашық түрде жазылмайды, статистикадағыдай жазылады (мысалы, «А
                  бақылауға арналған В-мен жағымды коррелдендірілд, олардың С кӛлемі аз, ал D –да
                  кӛп). Кейде нейронды желілер ӛте жоғары сападағы болжауды береді, бірақ олар
                  зерттеуге теориялық емес кӛзқарастың типтік мысалын кӛрсетеді (кейде оны «қара
                  жәшік» деп атайды).
                </p>
                <p>
                  Мұндай тұрғыда тәжірибелік нәтижеге жұмылдырылады, бұл жағдайда құбылыстың
                  негізінде жатқан механизмдердің мәні немесе қандайда бір бар теорияның алынған
                  нәтижелеріне емес болжаудың нақтылығы және олардың қолданбалы құндылықтарына
                  топтастырылады.
                </p>
                <p>
                  Бірақ нейронды желілердің әдістері зерттеулерде қолданылатындығын ескерген жӛн,
                  ӛйткені нейронды желілер елеулі ауыспалы немесе сондай топтарды іздестіру
                  мақсатында деректер алуға кӛмектеседі және алынған нәтижелер кейінгі модельдерді
                  құру жолын жеңілдетеді. Сонымен қатар қазіргі кезде нейрожелілік бағдарламалар
                  бар, күрделі алгоритмдер кӛмегімен маңызды кіріс ауыспалылықтарын табуға болады,
                  ол дегенмен модельді құруға тікелей кӛмектеседі.
                </p>
                <p>
                  Нейронды желілердің артықшылығының бірі, олар тоериялық жағынанқандайда бір
                  толассыз функцияны апроксимирлей алады, сондықтан зерттеушіге алдын-ала модельге
                  қатысты гипотеза қабылдау қажет емес. Бірақ нейронды желілердің мәнді
                  жетіспеушілігі желінің ақырғы шешімі желінің бастапқы қондырғыларына тәуелді, оны
                  тәжірибе жүзінде, әдетте құбылыс теориясын құруда қолданатын дәстүрлі аналитикалық
                  терминдерге интерпретациялау мүмкін емес.
                </p>
                <p>
                  Кейбір авторлар оны масалы паралельдікпен негіздейтін кездер де бар. Мысалға,
                  Haykin 1994 жылы нейтронды жылы анықтады.
                </p>
                <p>
                  алға, Haykin 1994 жылы нейтронды жылы анықтады. Нейронды желі - ол экспериментті
                  білімді сақтаудың табиғи қабілеттілігі бар және оларды қолданыста қолжетімді
                  ететін операцияларды массивті параллельді ететін процессор. Ол екі қатынаста миға
                  ұқсайды:
                </p>
                <p>1. Жүйе үйрену процесі кезінде білімді жинақтайды;</p>
                <p>
                  2. Ақпаратты сақтау үшін нейронаралық қосылыстардың интенсивтілігінің мӛлшері
                  қолданылады, оларды синоптикалық таразы деп атайды.
                </p>
                <p>
                  Бірақ, Риплей айтып отырғандай (1996 ж) бар нейрожүйелі бағдарламалардың кӛбісі
                  бір працессарлы копьютерлерде жұмыс жасайды. Оның ойынша, олардың жұмысын
                  программалы қамтамасыз етуді жасаған кезде жасауға болады.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Data Mining технологиясы.
                </li>
                <li>
                  <b>•</b>Модельдердің түрлері.
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b>Нақты емес срездер дегеніміз не?
                </li>
                <li>
                  <b>•</b>Анық емес кӛптіктер дегеніміз не?
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> Нақты емес срездердің жасалу принципі қандай?
                </li>
                <li>
                  <b>•</b>Жасанды интеллект дегенміз не?
                </li>
                <li>
                  <b>•</b>Машиналық оқытудың класстарын атаңыз?
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>
                  {' '}
                  Шекті шарттар. Парето тиімділігі. Presicion-Recall және ROC қисықтары. AUC.
                </li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>
                  I және II типтегі қателер санының ӛлшемі бойынша шешуші Ереженің шегін орнату.
                  Қате қисығы (ROC curve). ROC қисығын тиімді құру алгоритмі
                </li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 25 && (
            <>
              <h2 className="readRight__title">
                Лекция 11. Білімдерді ұсыну үшін семантикалық желілер.
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Білімдерді ұсыну үшін семантикалық
                  желілер, модельдің тәжірибелік қосымшаларын, әдістері мен міндеттері оқыту.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Білімдерді ұсыну үшін семантикалық желілер.</li>
                <li>2. Модельдің тәжірибелік қосымшалары.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  «Семантикалық (мағыналық) желі» деген ұғым 1968-1969 жылдары Р.Куиллиан (Ross
                  Quillian) жұмыстарында пайда болды. Бұл үшін доғалармен (графтар) қосылған
                  түйіндері бар графикалық сызбалар пайдаланылады. Семантикалық желілер теориясында
                  граф-ағаштар мен қатар, циклдық және толық байланысқан графтар қарастырылады. Одан
                  басқа, мүмкін болатын арақатынастар типтері жеке және ерекше түрде зерттелінеді
                  (дәстүрлі: АКО — a kind of, ISA, has part және кейбір жаңалар).
                </p>
                <p>
                  Алдымен семантикалық желілер табиғи тілдерді талдау үшін және адамның ақыл-есінің
                  психологиялық моделін құру үшін жасалынған болатын. Бұл кезеңде сөйлемде бейнебір
                  «орталық тақырып» бар деп есептелетін, осыны пайдаланып машина сөйлемнің мағынасын
                  (семантикасын) «түсіну» мүмкін (7.1-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img42.png" alt="" />
                  <p>
                    11.1-сурет. «Жазғытұрымғы күні патша нөкерін ертіп, орманға атпен серуендеуге
                    шықты»
                  </p>
                  <p>
                    <i>Семантика</i> – белгілер мен объектілер арасындағы қатынастарды қоятын ғылым,
                    яғни белгілердің мағынасын анықтайтың ғылым. <br />
                    <i>Семантикалық желі </i>– бұл бағытталған граф, оның шыңдары – ұғымдар, ал
                    доғалары – олардың арасындағы қатынастар.
                  </p>
                  <p>
                    Адамның ақыл-есінің құрылысын және логикалық шығарудың ұйымдастыруының теориялық
                    қағидаларын иерархиялық желіге негіздеп, Р.Куиллиан А.Колинзбен (Allan Collins)
                    бірге 1969-1970 жылдары тәжірибелік түрде тексеріп шығарды. Осындай желі үшін
                    мынадай қатынастар сипатты: класс – класс элементі; қасиет – мәні. Егер «кеме»,
                    «мұхит лайнеры» және басқа түйіндерде ішкі құрылысы жоқ деп есептесек, онда
                    11.2-суреттегі желіні иерархиялық емес, қарапайым желі деп атауға болады. Класс
                    элементінің мысалдары 11.2 - 11.4-суреттерде көрсетілген.
                  </p>
                </p>
                (семантикасын) «түсіну» мүмкін (7.1-сурет).
              </p>
              <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                <img src="img/img43.png" alt="" />
                <p>11.2-сурет. «Болып табылады» деген қатынасты пайдаланатын иерархиялық желі</p>
                <p>
                  Мысалы, Р.Симмонс желілерінде қатал иерархия жоқ, өйткені ол басқа есепті шешуге
                  тырысқан: етістіктерді «өрістету/толықтыру» арқылы сөйлемнің мәнін түсіну. Яғни
                  етістіктен өзіндік «қосымша желіні» (берілген етістікті «пайдалану варианттары»
                  бар желі) құрастыру арқылы. Осыған сәйкес түйіндер жіктеуі де табылған: Агент,
                  Реципиент (receive – алу),{' '}
                </p>
                Объект.
                <p>
                  Беру <br />
                  Агент: (Яго, бала, Отелло) <br />
                  Реципиент: (Дездемона, Родриго) <br />
                  Объект: (алма, гүл, орамал) <br />
                </p>
                <p>
                  Семантикалық желідегі түйіндер әдетте, объектілерге, тұжырымдамаларға, оқиғаларға
                  немесе ұғымдарға сай болады. Доғалар, білімдерді ұсыну әдісіне тәуелді әртүрлі
                  әдістер арқылы анықталу мүмкін. Желінің кезкелген фрагменті, мысалы, бір шыңысы,
                  екі шыңысы және оларды қосатын доға, бағыныңқы желі деп аталады (11.3-,
                  11.4-суреттер). Семантикалық желідегі логикалық шығару (шешімді іздестіру) - бұл
                  кейбір шарттарға қанағаттандырылған бағыныңқы желіні табу немесе құрастыру. Осы
                  процесті формалдау үшін семантикалық желілердің типтеуін енгізеді, сосын нақты
                  түрлі желілер үшін (желіге кіретін қатынастырдың математикалық қасиеттерін талдау
                  негізінде) шешу әдістерін әзірлейді.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img44.png" alt="" />
                  <p>
                    11.3-сурет. Күрделі сөйлемді: «Гүлжанға сыйлығын бергенін, Сәкен Әйгерімге
                    айтты» семантикалық желі түрінде көрсету; бағыныңқы желі «Сәкен Гүлжанға сыйлық
                    берді»
                  </p>
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img45.png" alt="" />
                  <p>
                    11.4-сурет. Семантикалық желі «автомобиль» және бағыныңқы желі «мотор
                    доңғалақтарға күш береді»
                  </p>
                </p>{' '}
                <br />
                <p>
                  Шыңдар мен доғаларға қойылатын шектеулерге тәуелді желілердің әртүрлі типтері
                  пайда болады. Егер желі шыңдарының ішкі құрылымы болмаса, онда осындай желілер
                  қарапайым желілер деп аталады. Егер шыңдардың ішкі құрылымы бар болса, онда желі
                  иерархиялық деп аталады. Динамикалық семантикалық желілер (сценарийлер) –
                  оқиғалары бар желілер. Семантикалық желінің қарапайым желінен негізгі айырмашылығы
                  – желіні бағыныңқы желілерге бөлу және шыңдар арасында ғана емес, бағыныңқы
                  желілер арасында да қатынастарды анықтау мүмкіндігі. Желіде болатын әртүрлі
                  бағыныңқы желілер, бағыныңқы желілердің ағашы түрінде реттелу мүмкін, оның шыңдары
                  - бағыныңқы желі, ал доғалары – көріну қатынастары. Бағыныңқы желі ұғымы
                  математикадағы жақшалар ұғымына ұқсас, көріну ұғымы – жақшаның ішінде және
                  сыртында болатын айнымалылар ұғымына ұқсас.
                </p>
                <p>
                  Семантикалық желі көмегімен «Арка» деген техникалық объектіні сипаттайық – бір
                  бірімен жанаспайтың екі тіректерге сүйенетін көпір ағаш (11.5-сурет). Формалды
                  түрде бұл желіні былайша бейнелеуге болады:{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img46.png" alt="" />
                  <p>11.5-сурет. «Арка» ұғымының семантикалық желісі</p>
                </p>{' '}
                <br />
                <p>
                  Сонымен, желінің сипаттамасының өнімдік моделіндегі ағаштың сипаттауынан ешқандай
                  айырмашылығы жоқ. Желі мен ағаштарды бейнелеу үшін бірдей машиналық тілдер
                  пайдаланады. Бірақ, желілерде шығаруы сөзсіз күрделі, себебі көп қатынастар
                  типтері әлі зерттелмеген және формалды алгоритмы олар үшін жоқ.
                </p>
                <p>
                  Желі үстінде логикалық шығаруға жету өте қиын, өйткені заттық саланың кеңістіктері
                  жиі метрлік емес болады, яғни келесі аксиомалардың біреуіне қанағаттандырылмаған:
                </p>
                <p>1. (a, b) = 0 тек a = b болғанда,</p>
                <p>2. (a, b) = p(b, a),</p>
                <p>
                  3. (a, b) {'<'} p(a, c) + (b, c),мұндағы  - өлшем (оңай түсіну үшін, өлшем
                  элементтер арасындағы арақашықтыққа ұқсас деп алуға болады).
                </p>
                <p>
                  Семантикалық желілердің мүмкін болатың өте пайдалы қасиеті - транзитивтілік.
                  Транзитивтілік: әрбір а, b  R үшін{' (мұнда а < b және b < с)'}
                  {'а < с арақатынас әділетті.'} Транзитивтілікті бұзатын мысал: А - В-ның ұлы, С -
                  В-ның ұлы, бірақ С - А-ның ұлы емес.
                </p>
                <p>
                  Мысал. «Куин Мери мұхит лайнеры болып табылады» және «Әрбір мұхит лайнеры кеме
                  болып табылады» деген сөйлемдерді қарастырайық (7.2- сурет). «Болып табылады»
                  доғалар пайдалыналады. Түйіндерді байланыстыратын доғалардың қасиеттерін
                  білгендіктен («болып табылады» қатынас ISA — транзитивті), желіден үшінші мақұлдау
                  шығаруға болады: «Куин Мери кеме болып табылады»,{' '}
                </p>
                <p>
                  «Болып табылады» және басқа («бөлігі бар» сияқты) қатынастар желіде мұралану
                  иерархия қасиетін орнатады. Бұл желідегі төменгі деңгейдің элементтері жоғарғы
                  деңгейдің элементтерінің қасиеттерін мұралану мүмкіндігін көрсетеді. Сондықтан жад
                  үнемделеді, себебі ұқсас түйіндер туралы ақпаратты әрбір түйінде қайталау
                  қажетсіз. Онын орнына ол желінің бір орталық түйінде орналасу мүмкін. Мысалы,
                  кемені ұсынатын семантикалық желі үшін, оның мынадай қозғалтқыш қондырғысы,
                  корпусы, бу қазандары орны сияқты бөліктері иерархияның төменгі деңгейінде
                  қайталанбай, бір рет қана кеме деңгейінде қосылған. Бұл, жүздеген кемемен және
                  олардың бөліктерімен жұмыс істегенде, жадтың орасан зор көлемін үнемдейді. Сосын,
                  желінің доғаларымен белгіленген қатынастар мағынасы туралы білімдерді пайдаланып,
                  желі бойынша іздестіруді жүзеге асыруға болады. Мысалы, «Куин Мериде бу қазандары
                  орны бар» деректі орнату үшін.{' '}
                </p>
                <p>
                  Семантикалық желілердің бірнеше топтамасын енгізуге болады. Мысалы, қатынас
                  типтерінің саны бойынша:
                </p>
                <li>
                  <b>•</b> біртекті (бір ғана қатынас типі бар);
                </li>
                <li>•біртекті емес (әртүрлі қатынас типтері бар). Қатынас типтері бойынша:</li>
                <li>•бинарлы (қатынастар екі объекті байланыстырады);</li>
                <li>
                  •n-арлы (екі ұғымдардан артық байланыстыратын арнайы қатынастар, мысалы
                  «үшбұрыш»).
                  <p>Семантикалық желілерде ең жиі келесі қатынастар пайдалынады:</p>
                </li>
                <li>
                  •«бөлік - бүтін» типті байланыстар («класс – бағыныңқы класс», «элемент – көптік»
                  және т.с.с.);
                </li>
                <li>
                  •функционалды байланыстар (әдетте «жасайды», «ықпал етеді»,... етістіктермен
                  анықталатын);
                </li>
                <li>•сандық (артық, кем, тең,...);</li>
                <li>•кеңістік (алыс, жақын, артында, астында, үстінде,...);</li>
                <li>•уақытша (бұрын, кейін, барысында,...);</li>
                <li>•атрибутивті байланыстар (қасиеті бар, мәні бар,...);</li>
                <li>•логикалық байланыстар (және, немесе, жоқ) және басқалар.</li>
                <p>
                  Семантикалық желілер пәндік сала туралы білімді ұсынудың ең сәтті әдісі болып
                  табылады. Күрделі грамматикалық сөйлемдерді ұсыну үшін табиғи тіл бойынша ғылыми
                  жұмыстарда пайдалынады.
                </p>
                <p>Модельдің тәжірибелік қосымшаларын қарастырайық:</p>
                <p>
                  1. Патрик Уинстон (Patrick Winston) кейбір объектінің «концепін» автоматты жасау
                  үшін программа жасады (11.6-сурет). Ол «концепт» идеясың арка сияқты физикалық
                  құрылымды бейнелеу мысалында көрсетті (11.5-сурет). «Концепт» шынында «фрейм»
                  ұғымына (М. Мински енгізген) өте жақын, бірақ ахуалдың өзгеру динамикасы
                  (хабарлама мен алмасу) еске алынбайды.{' '}
                </p>
                <p>
                  2. Джейм Карбонел (Jaime Carbonell) Оңтүстік Американың географиясың зерттеуге
                  арналған SCHOLAR оқыту-сараптамалық жүйесін жасады. Осындай жүйелерден кейін
                  қазіргі географиялық ақпаратты жүйелер шықты.{' '}
                </p>
                <p>
                  3. Хайдерн PLNLP (Programming Language for Natural Language Processing) жасады –
                  табиғи тілді өндеу үшін бағдарламау тілі (екі сөйлемнің ұқсастығын талдау есебі,
                  11.3-сурет; дербес жағдай – бір сөйлем басқа сөйлемнің бөлігі болып табылады).
                  PLNLP келесі ережелер бойынша жұмыс істейді:
                </p>
                <li>
                  декодтау ережелер көмегімен сызықты тіл тізбегінің синтаксистік талдауы
                  жүргізіледі және желі салынады;
                </li>
                <li>
                  кодтау ережелер көмегімен желі сканерленеді, тіл тізбегі немесе өзгертілген басқа
                  желі тудырады.
                </li>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img47.png" alt="" />
                  <p>11.6-сурет. Үш күйі бар екі өлшемді концепт (мүмкін болатын вариант)</p>
                </p>{' '}
                <br />
                <p>4. Арнайы NET желілі тіл жасалынды.</p>
                <p>
                  5. Білімдерді ұсыну тілі ретінде семантикалық желілерді пайдалынатын кең белгілі
                  сараптамалық жүйелер жасалынды - PROSPECTOR, CASNET, TORUS.
                </p>
                <p>
                  Модельдің негізгі кемшілігі – шығаруды іздестіру күрделілігі; семантикалық желі
                  үстінде жақсы математикалық модельдер тек бірнеше қатынастар типтері үшін
                  құрастырылған.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Білімдерді ұсыну үшін семантикалық желілер.
                </li>
                <li>
                  <b>•</b>Модельдің тәжірибелік қосымшалары.
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b>Модельдің тәжірибелік қосымшаларын атаңыз?
                </li>
                <li>
                  <b>•</b>PROSPECTOR, CASNET, TORUS.
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> SCHOLAR оқыту-сараптамалық жүйесі қандай жүйе?
                </li>
                <li>
                  <b>•</b>Хайдерн PLNLP жүйесі туралы не білесіз?
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>Регрессияның ансамбльдік әдістері. RANSAC. Theil-Sen. Huber.</li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>AUC максимизациясының градиент әдісі.</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 26 && (
            <>
              <h2 className="readRight__title">
                Лекция 12. Критериалды әдістер. Шешімді қабылдаудың кейбір әдістемелері. Шешім
                көпкритериалды қабылдауының оқу мысалы.
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Критериалды әдістер. Шешімді қабылдаудың
                  кейбір әдістемелері. Шешім кӛп критериалды қабылдауының әдістері мен міндеттері
                  оқыту.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Критериалды әдістер. </li>
                <li>2. Шешімді қабылдаудың кейбір әдістемелері. </li>
                <li>3. Шешім кӛпкритериалды қабылдауының оқу мысалы.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Білімдерді ұсыну негізгі модельдер, бағалы есептер тізімі және оларды шешу әдістер
                  ӛткен ғасырдың 80 жылдары ұйымдастырылды.{' '}
                </p>
                <p>
                  90 жылдардың басында жасанды интеллектің есептері мен әдістерінің философиялық
                  түсінуі біраз ӛзгерді, бұл бірден жаңа модельдердің пайда болуына әкелді:
                  іздестіруді сипаттау критериалды тілі, нейрон желі, ықтималдық модельдер. Бірақ,
                  айта кетейік, кейбір мамандар оларды толық модель деп санамайды, себебі бұл
                  модельдер ӛзінің қорытындысын негіздей алмайды. Мұнда логикалық пен ӛнімдік
                  модельде болатын және білімдерді ұсыну, жаңа модельде болмайтын бектрекинг
                  механизмы еске алынады. Сараптамалық жүйеде ӛзінің қорытындысын түсіндіретін
                  бағыныңқы жүйесі болу қажет. Сондай-ақ, критериалды тілдің пайда болуына кем
                  дегенде, жүздеген жыл бар, сондықтан оларды жаңа деп айту дұрыс емес.
                </p>
                <p>
                  Сонымен, «білімдерді ұсыну үшін модельге» жаңа кӛзқарас – бұл «жақсы шешімдерді»
                  тудыруға мүмкіндік беретін кейбір модель. Және ол адамның ойлау әдісін бе, не
                  ӛзінің қорытындыларын түсіндіре ме, аса маңызды емес.
                </p>
              </p>
            </>
          )}
          {add === 27 && (
            <>
              <h2 className="readRight__title">Критериалды әдістер</h2>
              <p>
                <p>
                  Тәжірибеде интеллектуалды, айқын емес модельдердің қолдануы баламаны бағалау және
                  ең жақсысын таңдау үшін қажет. Олардың қолдану қажеттілігі баламаның кӛп санына,
                  еске алатын параметрлеріне себепті; мысалы, «қолайлы, әдеттегі және ең нашар».
                </p>
                <p>
                  Тәжірибеде интеллектуалды, айқын емес модельдердің қолдануы баламаны бағалау және
                  ең жақсысын таңдау үшін қажет. Олардың қолдану қажеттілігі баламаның кӛп санына,
                  еске алатын параметрлеріне себепті; мысалы, «қолайлы, әдеттегі және ең нашар».
                </p>
                <p>
                  Мысалы, банк қызметкері тұрақсыз жағдайдағы кәсіпорынды несиелеу туралы шешім
                  қабылдайды. Егер несие берілмесе және кәсіпорын ӛз күшімен қиыншылықтан шықса,
                  онда банк пайда алалмайды. Егер де кәсіпорын ойсырап қалса, банк шығындарға
                  ұшырайды. Егер несие үлкен кепілге берілсе, кәсіпорын алудан бас тартады. Сонымен
                  қызметкердің интуициясы және бухгалтерлік құжаттары шешімді қабылдауға жеткілікті
                  ме?
                </p>
                <p>
                  Сол сияқты есептерді сипаттау және шешу үшін арнайы модель жасалынған – таңдауды
                  бейнелеу тілдері. Таңдау есептер әр алуанды және оларды шешу әдістері де әртүрлі.
                  Алдымен барлық таңдау есептер үшін жалпы ұғымдарды енгізейік.
                </p>
              </p>
            </>
          )}
          {add === 28 && (
            <>
              <h2 className="readRight__title">Таңдау есебі</h2>
              <p>
                <p>
                  ЖИ қолданылатың әдістердің ең ескісі критериалды баға беру, дәрежелеу және кейінгі
                  таңдау әдісі.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  Ең қарапайым қойылуда бұл әдіс екі баламаны (бинарлы қатынас) салыстыруға ұсынады.
                  Мысалы, 3 {'<'} 5, 6  {'{3,5,6}'} және т.б. осындай қатынастар Аристотельге дейін
                  белігілі болатын. Біздің жағдайымызда салыстыру бір параметр (критерий) бойынша
                  жүргізіледі. Келесі мысалда одан күрделі жағдайды кӛрсетейік.
                </p>
                <p>
                  Берілген: балама А(3,3) = А(a1,a2) және балама В(5,5) = В(b1,b2). Оларды
                  байланыстыратын R қатынасты анықтаңыз, яғни A R В.
                </p>
                <p>
                  Егер дәстүрлі кӛзқарасты ұстасақ, онда В {'>'} A ӛйткені b1 {'>'} a1 және b2 {'>'}
                  a2. Бірақ, мұндай шешім даусыз емес, себебі а1, a2, b1, b2 деген не және{' '}
                  {'{а1, b1}'} мен {'{a2, b2}'} кӛптіктерде қатал ретті қатынастарды {'(«<», «>») '}{' '}
                  қоюға балама айқын емес. А мен В баламалар мәні «Омаров» және «Оспанов» сәйкес
                  болсын. {'{а1, b1}'} және {'{a2, b2}'} параметрлер – 1 және 2 семестрдегі
                  қанағаттанарлықсыз бағалар саны. Осылардың қайсысы үздік студент? Әрине, А = В —
                  онда екеуі де нашар оқиды. Егер де параметрдің мағынасын «күрделі сызбадағы
                  қателіктер саны» деп санасақ, онда анық А {'>'} В (А В-дан жақсы). Кӛрініп
                  тұрғандай, шешім кӛзқарасқа («ӛлшеудің нолі») және R қатынастың түріне тәуелді.{' '}
                </p>
                <p>
                  Күрделі жағдай – екіден артық баламаны салыстыру (екі екіден), немесе екіден артық
                  аргументтерді байланыстыратын қатынасты анықтау. Бұл жағдайда R қатынасы тернарды
                  болу мүмкін (мысалы, R – үшбұрыш а, b, с қабырғаларды байланыстырады) немесе
                  n-арлы (отбасы). n саны шекті, есептеулі немесе континуалды болу мүмкін. Мысалы,
                  Сізге «демалыс үшін турбаза таңдауыңыз» керек, мұндағы критерийлер «комфорт
                  деңгейі» және «баға». Егер Сіз таңдау үшін Алатау базалар анықтамалығын
                  пайдалансаңыз, балама кӛптігі шектеулі болады. Егер де «жабайы туризмды»
                  ұнатсаңыз, ал «база» ретінде «кемпинг үшін орындарды» қарастырсаңыз – онда
                  континуалды (яғни [0..1] кесіндіге сәйкес сандар кӛптігі) болады. Шынында, екі
                  түрлі кемпинг арасында ғажап орын әрқашан табуға болады. Және де әрбір кемпингты
                  тым бағалаудың қажеті жоқ, Сізге кездескен қандай болса да, ертең одан күштісі
                  кездесу мүмкін. Кездейсоқ таңдау (кездейсоқ шаманың кейбір үлестіру заңы) –
                  баламалар континуалды кӛптігі үшін әбден есті шешім.{' '}
                </p>
                <p>
                  Сонымен, критериалды таңдау есебі сипатталады: кӛп ӛлшемді параметрлер
                  кеңістігінің бар болуымен; осы кеңістікте («идеал нүктелер» немесе нүктене беру
                  мүмкін болмаса «дәмелену деңгейлер») қажетті салаларды бейнелеуі мен; таңдалған
                  баламаның қажетті салаға жақындығын анықтайтын ӛлшеммен (таңдау критерийі);
                  шекаралық мәндер жиынтығымен (яғни баламалар шынында да әртүрлі не кӛрсете алатын
                  шекті айырмашылықтар); және де күйлер кеңістігінде ең пайдалы қозғалыс бағытты
                  анықтау үшін қолданылатын математикалық әдістермен (8.1-, 8.2-, 8.3-суреттер).
                </p>
                <p>
                  Жоғарыда келтіргенді басқа сӛзбен айтқанда: n тәуелсіз айнымалылардан кейбір
                  функция f(x1, x2,..., хn) бар. 8.1-кестеде келтірілген шектеулердің біреуі
                  болғанда max {'{f(х1, x2,…, хn)}'} табу керек. Немесе min, егер «қашықтау ӛлшемі»
                  берілсе.
                </p>
                <p>Мұнда барлық индекстер бүтін сандар 1, 2, 3 ...</p>
                <p>
                  Осыны кейбір дербес геометриялық мысалдармен екі параметрлер x1 және x2 кӛптігінде
                  де кӛрнекті кӛрсетуге болады (8.1-, 8.2-, 8.3- суреттер).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img48.png" alt="" />
                  <p>12.1-сурет. Үздіксіз сызықты шектуелер кӛптігіндегі сызықтық критерий</p>
                </p>{' '}
                <br />
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img49.png" alt="" />
                  <p>
                    12.2-сурет. Сызықты емес шектелген баламалардың дӛңес емес үздіксіз кӛптігіндегі
                    сызықтық критерий
                  </p>
                </p>{' '}
                <br />
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img50.png" alt="" />
                  <p>12.3-сурет. Дискретті баламалар кӛптігіндегі сызықтық критерий</p>
                </p>{' '}
                <br />
                <p style={{ textAlign: 'end' }}>12.1-кесте </p>
                <p>Критериалды есептердегі шектеулер түрлері</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img51.png" alt="" />
                </p>{' '}
                <br />
                <p>
                  Шешімді критериалды қабылдау есептер сызықтық немесе сызықтық емес математикалық
                  бағдарламауға жататыны аңық кӛрініп тұр. Қай есеп болмасын дербес жағдайы, мысалы,
                  бүтін санды бағдарламау есебі болып шығу мүмкін. Онда ең жақсы баламаны табу
                  керек, оның х1 және x2 бағалары бүтін сандар.
                </p>
                <p>
                  Жалпы жағдайда критериалды таңдау (шешім қабылдау) әдісі келесі қадамдардан
                  тұрады:
                </p>
                <p>
                  1. Ӛте жалпы, концептуалды есепті қою: «Не істеу керек?» немесе «Аяғында не керек
                  және қазір не бар?». Яғни шешім қабылдаудың мақсатын (мақсаттарын) анықтау.
                </p>
                <p>
                  2. Баламаларды генерациялау. Бұл кезеңде сараптамалық деп аталатың әдістер
                  қолданылады: «ми шабуыл», «синектика», «ӛнертабыс матрицалары» және т.б.
                </p>
                <p>3. Мақсатқа жету дәрежесін бағалайтын критерийлерді таңдау.</p>
                <p>3.1. Кӛзқарасты таңдау: «идеалға ұмтылу» немесе «шығындарды минимизациялау».</p>
                <p>3.2. Әрбір критерий үшін бағалау функцияның түрін таңдау.</p>
                <p>
                  3.3. Әрбір критерий үшін «шекаралық мәндерді» анықтау («жақсы – жаман» шкаласы).
                </p>
                <p>4. Таңдалған критерийлер бойынша баламаларды бағалау.</p>
                <p>4.1. Әрбір баламаның параметрлер мәндерін анықтау.</p>
                <p>4.2. Алдыңғы тарихты есепке алу (кӛп реттік таңдау үшін).</p>
                <p>4.3. Критерий мәнін есептеу.</p>
                <p>
                  5. Мақсатқа (мақсаттарға) жету дәрежесін бағалаудан алынған баламаны дәрежелеу.
                </p>
                <p>6. Ең нашар баламаларды лақтырып тастау. </p>
                <p>
                  7. Басым болмайтын кӛптіктен (мысалы, кездейсоқ түрімен) бір баламаны таңдау немес
                  1-ші пунктке қайту.{' '}
                </p>
                <p>
                  Тағы да бір маңызды мәселе барлық қарастырылған функциялардың дӛңестік
                  (батыңқылық) сипаттамасы және мүмкін мәндер кӛптігінің тұйықтығы. Бұл анықтамалар
                  фнукционалды талдауда беріледі.
                </p>
                <p>
                  Критериалды есепті шешудің қадамдарына қайтып келейік. 1 қадам бірінші бӛлімдерде
                  толық бейнеленген. Екінші пункт ұлан-байтақ, оның қарауы ЖИ курсына кірмейді.
                  Критерийлер таңдауды (3 қадам) ӛнер деп айтуға болады. Барлық критериалды
                  әдістерді (шешімді қабылдау) «идеал нүкте» және «ымыралы бағдарламау» әдістерге
                  бӛлуге болады. Бірінші жағдайда барлық баламалар ӛзінің белгілерінің кӛп ӛлшемді
                  кеңістікте қарастырылады, сонымен бірге «идеал нүкте» бар болады (8.4-сурет).
                  Әрбір баламаның бағалауы идеал нүктеге дейін аралығы деп алынады (ыңғай үшін идеал
                  нүктені координат басына қояды). Кімде бұл аралық минималды, сол жеңеді. Кейде,
                  керісінше, «жақындық ӛлшемін» емес «қашықтау ӛлшемін» қарастырады. Бұл жағдайда,
                  мысалы, «абсолютты қажет емес нүктені» жасауға және оған дейін (әрбір баламадан)
                  аралықты анықтауға болады. Әрине, ең жақсы балама «жаман» нүктеден ең алыста
                  болады. «Жақсы - жаман», «күшті - әлсіз» және т.с.с. ұғымдарды енгізуге мүмкін
                  беретін кӛп ӛлшемді кеңістіктерді «семантикалық метрикасы бар кеңістіктер» немесе
                  «семантикалық кеңістіктер» деп атайды. Кейде «Осгуд кеңістігі» деп аталады,
                  ӛйткені алғаш рет осындай кеңістіктер Чарльз Осгуд пен Суси жазған «Мәндерді
                  ӛлшеу» кітабында қарастырылған болатын (1947 ж., АҚШ). Кітапта түсіну және
                  бейнелеу үшін ағылшын тіліндегі құрылыстар мен психологиялық құрылымдар
                  қарастырылған. Сондықтан лингвисттер де, психологтар да және ЖИ мамандары оны
                  «біздің кітабіміз» деп есептейді. Ч.Осгуд бұқаралық процестерді зерттеген. Мысалы,
                  кейбір студенттер тобында математикадан бақылау жұмысының нәтижесі бойынша Осгуд
                  кеңістігін құруға болады.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img52.png" alt="" />
                  <p>12.4-сурет. Идеал нүкте және нақты балама (Майраның кӛзқарасы)</p>
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img53.png" alt="" />
                  <p>12.5-сурет. Басым болатын және салыстырмасыз баламалар</p> <br />
                  <p>
                    Сӛйтіп, шешім қабылдайтын кейбір кеңістікті құру (8.5-сурет) мынаны ойлайды:
                    мақсаттарды (қажетті күйді, идеал нүктені), кеңістік қасиеттерінің ӛзгеру
                    бағыттары және де ӛлшем түрі мен шекаралық мәндерін анықтау. Шетелдік ұғымдарда
                    мақсатқа сәйкес ұғым «goal», ал қасиеттерінің ӛзгеру бағытына — ұғым
                    «objectives», бірақ олар синоним емес.
                  </p>
                </p>
                <br />
                <p>
                  Қарапайым жағдайда ӛлшем ретінде жай айырма (айырмалар қосындысы) пайдалану
                  мүмкін. Мысалы, «Серік идеал ӛлшемге (180-170) + (ӛте әдемі — сүйкімді) сәйкес
                  емес». Осыдан кӛрініп тұр - қарапайым ӛлшемді енгізу түрлі ӛлшеуіш шкаланың бар
                  болу проблемасына әкеледі. Шкалалар мүмкін типтер саны математикалық ӛлшеу
                  теориясында жақсы зерттелген. Геометриялық кӛзқарастан Евклид ӛлшемін (аралық)
                  қарастыру керек  = {'{(х - х1) 2 + (у - y1) 2 + (z - z1) 2 + (f - f1)2 }'}
                  1/2. Мысал әдейі 4-ӛлшемді кеңістік үшін берілген, яғни дәреже кӛрсеткіші 2 немесе
                  3-ӛлшемді кеңістіктерде де ӛзгермейтінің кӛрсету үшін. Егер екінші дәрежелердің
                  орнына біз р дәрежесін пайдалансақ, онда р  0 болғанда классикалық баллдық бағаны
                  аламыз, мұнда нақты күйдің идеал күйден әрбір ауытқуы 1 деп есептеледі; р  
                  болғанда, керісінше, кіші ауытқулар (1-ден кем) тегістеледі, ал едәуір ауытқулар
                  ӛседі. Нақты есеп үшін дәрежені дұрыс таңдаудан, біз «шешімді жақсы таратып
                  әкететін» ӛлшемді аламыз, яғни басым болатын баламалар (3 балама) кӛптігін және
                  басым болмайтын (бірбіріне салыстырмалы) баламалар (1 және 2) кӛптігін жасақтауға
                  мүмкіндік береді. Ӛлшем дұрыс таңдалмаса 4 баламасы бар проблеманы аламыз, ол 3
                  ден жаманырақ, бірақ қаншаға? 4 баламаны қабылдау үшін осы ауытқу жеткілікті ме?{' '}
                </p>
                <p>
                  Ӛйткенмен қандай да ӛлшем болғанда 1-мен 2-нің арасында таңдау керек болады. Бірақ
                  қалай? Геометриялық бұл осьті бұру және ось үстіне нүктелерді проекциялау әдіс
                  арқылы мүмкін. Айқын кӛрініп тұр 1 балама 2 ден жақсырақ және де анағұрлым
                  (абсцисса осіне проекцияны қараңыз). Математикалық жағынан бұру операциясы кейбір
                  коэффициентке (параметр салмағы) кӛбейтуге эквивалентты. Осындай ӛлшемдер ӛлшенген
                  деп аталады:  = {'{w1(x - х1) р + w2(y - y1)р + w3(z - z1) p + w4(f - f1) p }'}
                  1/p, әрине ∑wi=1. Салмақтар жиынтығын әлі «сарапшының артық кӛру құрылымы» деп
                  атайды, ал ӛлшемнің нақты түрін – түйіншек (свертка). Қатал түрде дәл осы
                  формуланы:  ={' '}
                  {'{w1(x - х1) р /a1 + w2(y - y1) р /a2 + w3(z - z1) p /a3 + w4(f - f1) p /a4}'}
                  1/p деп жазу керек. Мұнда аn коэффициенттер шкаланы нормалдау үшін қызмет етеді.
                  Бірақ, бұл формула да әмбебап емес, ӛйткені кейбір шкалалар үшін «бірыңғай»
                  масштабтан басқа «есеп басын жылжыту» қажет болады.
                </p>
                <p>
                  Егер шешімнің кӛп ретті қабылдауы кездессе одан да күрделі жағдай болады. Уақытты
                  еске алып бір параметр бойынша медициналық диагнозды қою есептің мысалын
                  қарастырайық (8.6-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img54.png" alt="" />
                  <p>
                    12.6-сурет. Тыныс жолдары мен ӛкпе қабындының үздіксіз температуралық қисықтары
                  </p>
                </p>
                <p>
                  Ӛкпенiң талаурауы (тым тонудан және әлсіреуден басталды деп ойлайық) жалпы
                  жағдайда температураның күрт кӛтерілумен және кӛңіл күйі нашарлаумен сипатталады.
                  Егер еш нәрсе істемесек, бір аптаның ішінде температура кӛтеріледі және кӛңіл күйі
                  нашарлайды, сосын дағдарыс басталады, яғни температура күрт кӛтеріледі және сонан
                  соң тӛмендейді. Антибиотиктер болмағанда ауру адам дағдарыстан аман-есен шығып
                  жазылады, әйтпесе, ӛліп қалады. Ӛкпе қабынғанда температуралық қисық ӛзгеше жүреді
                  – пациенттің күйі тұрақты, температура кӛтерілмеген немесе тіпті тӛмендеген.
                  Диагнозды екінші күні қою керек. Әрине, бірінші күнді еске алмай мұны істеуге
                  болмайды. Егер бірінші күні аурудың температурасы аса қатты кӛтерілмесе, онда
                  тыныс жолдары, әйтпесе – ӛкпе қабынғаны. Бірақ, ақырғы шешімге екі нүкте
                  жеткілікті ме? Ал нешеу жеткілікті? Егер нүктелер «дәл модельді қисыққа жатпаса»
                  не істеу керек? Берілген мысалда тек бір параметр ғана еске алынады, ал нақты
                  диагностика үшін ең азы 7-8 параметр қажетті.
                </p>
                <p>
                  Қойылған сұрақтарға бірмәнді жауаптарды табу оңай емес. Кездесетін әдістер
                  негізінде шешімді бір рет қабылдауға тиіседі. Қазіргі заманда медициналық
                  диагностика есептері критериалды әдістер кӛмегімен сирек қарастырылады. Жиі нейрон
                  желілерді пайдаланады, себебі олар анағұрлым тиімділеу (мысалы, салмақтарды
                  есептеу үшін). Бірақ, жоғарыда айтылған проблемалар нейрон желісіне де қатысты.
                  Мысалы, біз салмақтарды есептеп, пациент пен модельдік қисықтар арасындаға 14 күн
                  аралығында ӛлшенген айырманы анықтадық. Баламаның ешбіреуі басым болатындай шықпау
                  мүмкін, ӛйткені аурудың бастауы бір модельге ұқсайды, ал аяқтауы басқа модельге
                  ұқсас болады. Онда салмақтарды әрбір күн үшін енгізіп, графиктерді «сатыларға»
                  (бастауы, барысы, жазылуы) бӛлеміз. Нәтижесінде түсініксіз құру логикасы бар тым
                  үлкен суперкритерий алыну мүмкін.
                </p>
                <p>
                  Тәжірибеден шығады тиімді диагностика жасау үшін 7-8 маңызды параметр жеткілікті.
                  Егер параметрлер санын кӛбейтсек, диагностиканың дәлдігі аса ӛзгермейді.
                  Сондықтан, тек маңызды параметрлерді таңдау қажет. Сонымен, критериалды есеп – бұл
                  салмақтарды негізді таңдау есебі, мұнда маңызды параметрлер «үлкен» салмақты
                  алады.
                </p>
                <p>
                  Критериалды әдістердің даму салдарының бірі «бӛлетін кеңістік / гипержазықтық /
                  функция» деген ұғым. Бӛлетін гипержазықтық (шешуші ереже) – бұл кейбір
                  геометриялық интерпретациясы. Яғни осы функция зерттелетін нүкте A(a1, a2, a3,…,
                  an) кейбір салаға жатама жатпай ма деген сұраққа бірмәнді жауап бере алады
                  (8.3-сурет). Осы функцияның түрі бӛлінетін салалардың конфигурациясына және ӛзара
                  орналасуына қатты тәуелді. Егер салалар арасында кейбір түзуді жүргізе алсақ және
                  барлық нүктелер оның екі жағында қалатындай болса, онда «сызықтық бӛліну» туралы
                  айтады. Алғашқы перцептрондар (нейрон желінің болашақ үлгісі) осы принципке
                  негізделген болатын.
                </p>
                <p>
                  Егер салалардың біреуі дӛңес, ал екіншісі басыңқы болса, онда есеп күрделі болып
                  шығады (8.5-сурет). Одан әрі күрделіледі, егер салалар қиылысатын болса, мысалы
                  екі бұлт. Бір бұлт – орманның ӛртенуі, екіншісі - ӛзең бетінен булану. Арасындағы
                  шекарасын табу керек. Әрине, осындай есепті бір ғана бӛлетін түзу кӛмегімен шешу
                  мүмкін емес. Ол үшін кейбір қисық қажетті, не жанамалар негізінде оның кесектік
                  аппроксимациясы қажетті. Берілген жағдайда бӛлетін функцияның түрі екінші, үшінші
                  (4- дейін) ретті сызықтық емес функция болып шығады. Осындай гипержазықтық
                  негізінде айырып тану туралы негізгі математикалық теоремалар нейрон желілер
                  теориясында М. Мински және С. Пейрепт дәлелдеген.{' '}
                </p>
                <p>
                  Енді, қарастырылған сұрақтарға жататын, бір қатар маңызды кезендерді қайталайық,
                  келтірлген жолға сүйеніп келесіні еске алайық:
                </p>
                <p>- баламалар кӛптігі шектеулі, есептеулі және континуалды болу керек;</p>
                <p>
                  - баламаны бағалау бірден бірнеше критерий (әрбіреуі кӛп ӛлшемді бола алады,
                  мысалы, активті және реактивті бӛліктен тұратың толық электр кедергісі, ӛлшеммен
                  және түсімен сипатталатын медициналық симптом «бӛртпе» және т.б.) бойынша жүзеге
                  асырылу мүмкін. Критерийлерде сандық және сапалық сипаты бар және олар түрлі типті
                  шкалада ӛлшенеді;
                </p>
                <p>
                  - таңдау тәртібі бір реттік немесе қайталанатын (мысалы, тәжірибе арқылы үйретуді
                  жүргізу, яғни салмақтарды қайта есептеу) болу мүмкін;
                </p>
                <p>
                  - таңдаудың салдары алдын ала белгілі болу мүмкін (айқындылық жағдайдағы таңдау)
                  немесе ықтималдық сипатты болу мүмкін (тәуекел кезіндегі таңдау) немесе бір мәнді
                  емес шығысы болу мүмкін (белгісіздік жағдайдағы таңдау).
                </p>
                <p>
                  Атап айтылған варианттардың әртүрлі тіркестері әртүрлі математикалық таңдау
                  есептерге әкеледі. Осындай сұрақтарға арналған математиканың арнайы бӛлімдері бар,
                  мысалы «ойын теориясы», «операцияларды зерттеу», және т.б.
                </p>
              </p>
            </>
          )}
          {add === 29 && (
            <>
              <h2 className="readRight__title">Өлшеуіш шкалалар</h2>
              <p>
                <p>
                  Баламаларды салыстыру объектің сипаттамаларын ӛлшеу негізінде ӛтіп жатады. Ӛлшеу –
                  бұл алгоритмдық операция, ол объектінің, процестің, құбылыстың берілген байқалған
                  күйіне сәйкес: сан, нӛмір немесе символ сияқты белгі қояды.
                </p>
                <p>
                  Ӛлшеу кезінде ең маңызды мәселе ӛлшеуіш шкаланың типі. Ӛлшеу теориясында 6 негізгі
                  шкалалар типін ажыратады (қуаттың ӛсу ретімен): номиналды, реттік, интервалды,
                  циклдық, қатынастар, абсолютты.
                </p>
                <p>
                  Номиналды шкала (атаулар шкаласы, таптасу шкаласы) – бұл кезкелген екі күйі туралы
                  тек айырып тануға болама не болмай ма деген объектілерді қарастыруға мүмкіндік
                  береді. Және түрлі күйлерге сәйкес түрлі белгілер қояды, ал айырып алмайтын
                  күйлерге – бірдей белгілер қоятын ӛлшеу алгоритмдер.
                </p>
                <p>1. Не A = B, не A  B.</p>
                <p>2. Егер A = B, онда B = A.</p>
                <p>3. Егер A = B және B = C, онда A = C.</p>
                <p>
                  Мұнда = символы эквиваленттік қатынасты белгілейді; егер де А мен В – сандар
                  болса, онда бұл теңдеу белгісі.
                </p>
                <p>
                  Кластарды белгілеу үшін шкалада сӛздер, символдар, цифрлер, олардың түрлі
                  комбинациялар (мысалы, түстер шкаласы – қызыл, қызғылт сары, сары және т.б.)
                  пайдаланылады; олардың еру реті маңызды емес (8.7- сурет). Егер біз түске толқын
                  ұзындығын салғастырсақ, онда бұл номиналды шкала болмайды. Онан әрі
                  «квантификатор» ұғымды пайдаланамыз.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img55.png" alt="" />
                  <p>12.7-сурет. Эквивалентты номиналды шкалалар</p>
                </p>
                <p>
                  Номиналды шкаладағы белгілермен, олар сандық болса да, арифметикалық
                  операцияларды, тек қана олардың сәйкес келуін тексеру операцияларды жүргізуге
                  болмайды. Сәйкес келуін тексеру операциялардың нәтижесімен бірге одан күрделі
                  ӛзгертулерді орындауға болады: сәйкес келудің санын санау, салыстырмалы
                  жиіліктерді есептеу және салыстыру, статистикалық процедураларды орындау және т.б.
                </p>
                <p>
                  Мысал. Кейбір эксперименттің басында біз сынаушыларды нӛмерлейміз. Аяғында алынған
                  нәтиже бойынша сынаушыларды реттейміз. Жалпы жағдайда, басындағы нӛмер мен және
                  соңындағы рангпен ешқандай ӛзара байланыс болмайды.
                </p>
                <p>
                  Ал үй ішіндегі пәтер нӛмерлерінің шкаласы кейбір заңдылықтарды анықтауға мүмкіндік
                  береді. Мысалы, 80 нӛмерді 40 нӛмерге бӛлу мағынасыз, бірақ, 80-нен 40-ты алсақ
                  біз пәтерлердің ӛзара орналасу туралы қорытынды істей аламыз. Сондықтан, осындай
                  шкаланы номиналдыға да реттікке де жатқызуға болады.{' '}
                </p>
                <p>
                  Номиналдық шкаланы күшейтсек, біз реттік шкаланы (ординалды, рангтік) аламыз, ол
                  белгілі бір түрмен кластарды салыстыруға, квантификаторлардың ілесу ретін
                  кӛрсетуге мүмкіндік береді. Берілген жағдайда квантификатор — бұл шкаладағы бӛлік.
                </p>
                <p>
                  Шкаладағы квантификаторлар сәйкес келуіне байланысты күшті (қарапайым) ретті,
                  әлсіз ретті және жарым-жарты ретті шкалаларды ажыратады. Номиналды шкаланың
                  аксималарына қосымша келесі аксиомалар орындалу қажет:
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img75.png" alt="" />
                  <p>12.7-сурет. Эквивалентты номиналды шкалалар</p>
                </p>
                <p>
                  Жарым-жарты ретті шкалалар социологиялық зерттеулерде жиі пайда болады. Мысалы,
                  сатып алушы сұранысты зерттегенде, екі әр текті тауарлардың қайсысы ӛзіне
                  ұнайтынын субъект айталмайды.
                </p>
                <p>
                  Реттін қатынасы салыстыратын кластар арасындағы қашықтық туралы ештеме айталмайды
                  (12.5-сурет қараңыз). Реттік экспериментал деректерді цифрлермен кӛрсетілсе де,
                  сан ретінде қарастыруға болмайды, олармен амалдар жүргізілмейді. Мысалы, орта
                  мәнің есептеуге, мәнді мәнге немесе коэффициентке бӛлуге жарамайды.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img56.png" alt="" />
                  <p>12.8-сурет. Қайрат баланың ұнату реттік шкаласы</p>
                </p>
                <p>
                  Эксперимент арқылы анықталған: Қайрат тирге бару үшін, алдымен, балмұздақтан,
                  сосын қампиттен де бас тартады. Бірақ, тир үшін ол екі қорап кампиттен немесе тӛрт
                  балмұздақтан бас тартатынын анық айталмаймыз.
                </p>
                <p>
                  Барлық психологиялық шкалалар реттік болады. Егер кейбір психологиялық тестін
                  нәтижелері екі субъект үшін а1 мен a2 тең болса, онда бірінші субъект екіншіге
                  қарағанда, кейбір қызметке «азды-кӛпті қабілетті» немесе «қабілеттері бірдей» деп
                  айтуға болады. Бірақ, бірінші субъект екіншіден «а1/a2 есе қабілетті» деп айтуға
                  болмайды. Керісінше, егер бір атлет 100 кг штангыны кӛтерсе, ал екіншісі – 200 кг
                  кӛтерсе, онда «екінші атлет біріншіден, 2 есе күшті» деп айту әділ, бірақ мұнда
                  шкала типі басқа.{' '}
                </p>
                <p>
                  «Сандармен жұмыс істеу» үшін ұмтылыс шкаланың интервалды (бұл шкалада екі түрлі
                  квантификатор арасындағы қашықтық белгілі) типіне дейін күшеюіне келтіреді.
                  Қашықтықты шкаланың ұзындығы бойынша бірдей ӛлшем бірлікте кӛрсетеді. Интервал
                  ұзындығы шкаладағы орналасу орнына тәуелді емес. Арифметикалық операциялар
                  квантификатор мәнімен емес, интервалдар ұзындықтарымен ғана ӛткізіледі, себебі
                  осындай шкалада «0» жалғыз емес.{' '}
                </p>
                <p>
                  Мысал. Суды 9° -тан 18 °С-ға дейін қыздырды. Судың температурасы екі есе ӛсті деп
                  айтуға болама? Фаренгейт шкаласы бойынша дәл осындай ӛлшеулер мұндай нәтиже береді
                  37° - 42 °F. (Фаренгейт пен Цельсий шкалалар арасындағы байланыс мына формуламен
                  беріледі F= 5/9 °C + 32).
                </p>
                <p>
                  Кейбір шамаларда, ӛзінің физикалық табиғаты бойынша, абсолют нӛлі болмайды немесе
                  есептеу басын қоюға еркіндік береді. Сондықтан олар интервалды шкалада ӛлшенеді:
                  температура, уақыт, жер биіктігі. Статистикада орталық моменттерде (соның ішінде
                  дисперсия) объективті физикалық мағынасы бар, ал бастапқы моменттер (соның ішінде
                  орта мәні) есептеу басымен қатар салыстырмалы болады.
                </p>
                <p>
                  Аурудың күй-жағдайын бақылайтын интеллектуалды бағдарламаның кодындағы кәдімгі
                  қателік мысалын келтірейік. Дене температурасының «елеулі ӛзгеруіне» бағдарлама
                  әсер тигізу керек. Норма 36,6 °С болғанда 40 °С ахуал пайда болды. Бағдарлама
                  салыстырмалы ауытқуды есептеді: (1 - 36,6/40) = 1 - 0,915 = 0,085; ауытқу «айқын
                  кішкене» болғандықтан, ешқандай іс-әрекет орындалмады.
                </p>
                <p>Дұрыс есептеулер мынадай болар еді:</p>
                <p>1 - |40 - 36,6|/|36,6 - 43| = 1 - 0,45 = 0,55.</p>
                Мұндағы 43° С — тірі адам денесінің шекті температурасы.
                <p>
                  Қатынастар шкаласындағы квантификатор мәндерімен «сандар секілді» арифметикалық
                  амалдар жүргізуге болады. Және де аддитивность аксиомаға қанағаттандырылу
                  (қосымша) керек:{' '}
                </p>
                <p>
                  егер A = P {'және B > 0, онда A + B > P'}; A + B = B + A; егер A = P және B = Q,
                  онда A + B = P + Q; (A + B) + C = A + (B + C).
                </p>
                <p>Қатынастар шкаласына сәйкес болатын шамалар: ұзындық, салмақ, ақша.</p>
                <p>
                  Кейбір ӛлшеуіш аспаптарда шкала тұйықталған (айырмалық, циклдық, кезеңдік шкала).
                  Бұл жағдайда кейбір кезеңі у = х + nb, n = 0, 1, 2,... бар интервалды шкала туралы
                  әнгіме.
                </p>
                <p>
                  Ақырғы және ең «күшті» шкала абсолютті. Оның абсолютті нӛлі және абсолютті бірлігі
                  бар. Ол жалғыз және бірегей. Абсолют шкаланың басқалар мен салыстырғанда, маңызды
                  ерекшелігі – оның бірлігінің дерексіздігі (ӛлшемсіздігі) және абсолюттігі.
                  Айтылған ерекшелігі абсолют шкаланың кӛрсеткіштеріне, басқа шкалаларға қарағанда,
                  түрлі операцияларды жүргізуге және осы кӛрсеткіштерді логарифм аргументі мен
                  дәреже кӛрсеткіші ретінде қолдануға мүмкіндік береді. Осындай қажеттілік, мысалы,
                  психологиялық эксперименттерді ӛңдеу кезінде жиі кездеседі. Зерттелетін шамалар
                  арасындағы ӛзара байланысты анықтау үшін қарапайым корреляция қолданылады. Осындай
                  есеп тек нормалды заң бойынша үлестірілген бастапқы деректерге ғана рұқсат. Нақты
                  жағдайда (мысалы, log-нормалды үлестіру) деректер логарифмды пайдаланады, себебі
                  олар нормалды түрде сӛзсіз үлестіріледі. Мынадай шкала сандық ось болып табылады.{' '}
                </p>
                <p>
                  12.2-кестеде қарастырылған шкалалар туралы негізгі мәліметтер жиналған. Шкала
                  неғурлым күшті болса, зерттелетін объект, құбылыс, процесс туралы ӛлшеу арқылы
                  соғұрлым кӛп мәліметтер алуға болады. Кейде бастапқы байқауларды әлсіз шкалада
                  жасайды, сосын қандай да болса жорамал енгізіп, одан күшті шкалаға ауысады. Ӛңдеу
                  негізінде алынған зерттеу нәтижелері тағы ӛзгертіледі, енді шкаланың үшінші типі
                  үшін, әдетте олардың кӛрнекілігін қамтамасыз ету. Мысалы, 7-8 параметр бойынша
                  шешімді қабылдау нәтижесінде үшӛлшемді бейнені салады.{' '}
                </p>
                <p>Ӛлшеуіш шкалалар типі</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img57.png" alt="" style={{ width: '800px' }} />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img58.png" alt="" style={{ width: '800px' }} />
                </p>
                <p>
                  Шкалалар типі туралы бір күлкілі мысал келтірейік. Майра мен Бота Қайраттың тұған
                  күніне жиналып жатыр. Қандай сыйлық ұсынамыз?
                </p>
                <p>
                  1. Варианттар генерацияланады: 1 – фотоаппарат, 2- коньяк, 3 – сервиз, 4 –
                  CD-дискілер жиынтығы. Ұсыну барысында баламалар бағаланбайды және сыналмайды,
                  әйтпесе, «біз ештеңені ойлап таппаймыз». Баламалар жинағы номиналды шкаланы
                  құрайды, оның үстіндегі ұнатулар белгісіз (8.9-сурет). Майра мен Бота сарапшыларды
                  (Қайратты жақсы білетін) сұрастырады. Жоғары айтылғаннан Қайрат нені ең жақсы
                  кӛреді? Номиналды шкалада жиіліктерді ӛлшейді. 1 мен 2 баламаға екі адам дауыс
                  берді, үшінші баламаға – тӛрт адам және соңғысына – алтау.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img59.png" alt="" />
                  <p>12.9-сурет. Номиналды шкаладағы қарапайым жиілік талдау</p>
                </p>
                <p>
                  2. Майра мен Бота Қайраттың ұнатуларының реттік шкаласын салады (12.10-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img60.png" alt="" />
                  <p>12.10-сурет. Әлсіз ретті шкаласы</p>
                </p>
                <p>
                  3. Майра мен Бота шығындар туралы ойлайды – олар варианттарды кейбір валютада
                  бағалайды. Фотоаппарат жақсы коньяктан арзан, сондықтан реттік шкала «күшті» болып
                  түседі, ал ақша белгілерін енгізгеннен кейін оның типі салыстырмалыққа ӛзгереді
                  (8.11-сурет).{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img60.png" alt="" />
                  <p>12.11-сурет. Қатынастар шкаласы</p>
                </p>
                <p>
                  4. Енді қыздарда екі шкала бар, біреуі Қайраттың ұнатуларын сипаттайды, екіншісі -
                  Майра мен Ботаның ұнатулары (8.12-сурет). Қайраттың кӛзқарасынан варианттар
                  бағалауы кейбір абстракты бірлікпен кӛрсетіледі (шкала «0-ге келтірілген» -
                  бағалардан 2 алынған). Қатал айтқанда, «0, 2 және 4» квантификаторларға сан
                  мағынасын қосып жазуға болмайды, бірақ біз мысалды оңайлату үшін осындай жорамал
                  істейміз. Ол үшін интервалды шкаланы салыстырмалыққа келтіреміз.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img60.png" alt="" />
                  <p>12.12-сурет. Шкаланы «0»-ге келтіру</p>
                </p>
                <p>
                  5. Қайраттың кӛзқарасынан дискілер жиынтығы сервиздан 2 есе артық кӛрінеді. Майра
                  мен Бота сервиз CD жиынтығынан 3 есе артық кӛрінеді деп ойлайды. Әрине,
                  фотоаппарат 5 есе артық кӛрінеді, бірақ ол Қайратқа ұнамауы мүмкін (8.13-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img60.png" alt="" />
                  <p>12.13-сурет. Қайраттың және қыздардың ұнатуларын салғастыру</p>
                </p>
                <p>Сонымен, қыздар 50$ баламаға келеді, ал Қайраттың бағасы – 2.</p>
              </p>
            </>
          )}
          {add === 30 && (
            <>
              <h2 className="readRight__title">Шешімді қабылдаудың кейбір әдістемелері</h2>
              <p>
                <p>
                  Ең бірінші айту керек, таңдау бір критериймен (немесе бірге оралған кӛптік
                  критерийлермен), не критерий жинағымен (бірге келтірмейтін) ескертіледі. Таңдау
                  нәтижесі «жақсырақ», «берілген деңгейге сәйкес», «кейбір берілген деңгейден кем
                  емес» болуы мүмкін. Таңдау нәтижесі айқын анықталған немесе айқын емес болуы
                  мүмкін. Егер кейбір қӛзқарастан «анық жақсы» баламаны белгілеп алсақ, онда оны
                  басым болатын деп атайды. Қалған варианттарды «анық нашар баламалар» деп атайды.
                  Ал егер бірнеше варианттар арасында не жақсысын, не нашарын кӛрсете алмасақ
                  (мысалы, q(X1) = (3,5), q(X2) = (2,6) – екі критерий бойынша екі баламаның
                  бағалары), салыстырылмайтын (басым болмайтын) баламалар кӛптігі туралы немесе
                  Парето кӛптігі туралы айтады.
                </p>

                <p>
                  Критериалды таңдауды жүзеге асырудың қалыптасқан әдістемелері «техника» немесе
                  «бағдарламау әдістері» деп аталады. Мысалы, мақсатты бағдарламау және келісімді
                  бағдарламау туралы айтады.
                </p>
                <p>
                  Критериалды әдістер кӛмегімен қабылданатың шешімдер тиімділігі заттық салаға
                  тәуелді. Мысалы, экология-экономикалық есептер, объектілерді реттеу есептер және
                  басқалар.
                </p>
                <p>
                  Басты критерий әдісті карап шығайық. Егер баламалар (олардың арасынан ең жақсысын
                  таңдау керек) бір немесе бірнеше (олардың арасында «ең маңыздысы» біреу бар)
                  критериймен бағаланса, онда «ең жақсырақ» принципі бойынша таңдауды жүзеге асыру
                  қажет: x arg[max q(x)], x X.
                </p>
                <p>
                  Мұнда Х – қарастырылатың баламалар кӛптігі, q(x) – критерий мәні. Егер де
                  критерийлер арасында ең маңызды біреу (немесе бірге оралатың топ) бар болса, онда
                  басты критерийдің максимизациясы туралы айтады, қосымша критерийлер ол берген
                  деңгейлерде қалады (шартты максимизация):
                </p>
                <p>. xòè³ì  q0 x qi x  Ci i  p x  X</p>
                <p>
                  Жол беру әдісінде (шартты максимизацияның ӛзге түрі) біз кейбір үлкен емес шаманы
                  анықтаймыз, оған басты критерийдің орнына жол береміз. Осындай жол беру арқылы
                  екінші дәрежелі критерийлер маңызы бойынша реттелу мүмкін.
                </p>
                <p>
                  Берілген қасиеті бар баламаларды іздеу түрлі баламаны таңдау үшін қолданылады,
                  олардың дербес критерийлері мәні берілген диапазонда жатады. Дербес жағдайда бос
                  баламаны алу мүмкін.
                </p>
                <p>
                  Шартты максимизация немесе берілген қасиеті бар баламаларды іздеу кезінде
                  «дәмелену деңгейлер» туралы жиі айтады. Бұл деңгейлер, критерий мәнінің ӛзгеру
                  диапазондары бізге оқиғалардың: «ең нашар», «ең жақсы», «ымыралы» және т.с.с. даму
                  варианттарын тапсырады. Әрине, егер түрлі критерийлердің дәмелену деңгейлері
                  қиылысатын болса, онда біз идеал нүктені аламыз. Геометриялық жағынан дәмелену
                  деңгейлері картадағы тең деңгейлі сызықтарына ӛте ұқсайды.
                </p>
                <p>
                  Тӛменде кейбір ең жиі қолданылатын әдістердің жалпы сызбасы келтірілген
                  (12.14-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img64.png" alt="" />
                  <p>12.14-сурет. Кейбір ең маңызды критериалды әдістер</p>
                </p>
              </p>
            </>
          )}
          {add === 31 && (
            <>
              <h2 className="readRight__title">Шешім көпкритериалды қабылдауының оқу мысалы</h2>
              <p>
                <p>
                  Критериалды әдістер кӛмегімен медициналық диагнозды қою мысалды қарастырайық.
                  Барлық деректер нақты аурулардан алынған.
                </p>

                <p>
                  Пациент артынан байқаулар мәліметтері бар болсын (8.3-кесте), ол сары аурумен
                  аурады деп болажйық (не ауырмайды). Кестенің бағандарында зертханалық зерттеулер
                  нәтижелері жазылған, мысалы, кан мен зәр талдауы және т.с.с. Бірінші ұяшық –
                  ауруды байқау күннің нӛмірі. Атаулардың ашуы берілмейді, себебі ЖИ жағынан есепті
                  қоюға ол ешнәрсе қоспайды (және де білімдер бойынша инженер медицинаны білмейді).
                  Тек ӛлшеуіш шкаланың типі қызықты. Қабылдайтын мәндеріне сәйкес, типті ӛзіміз
                  анықтаумыз керек.
                </p>

                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Диагностика үшін бастапқы деректер</p>
                  <img src="img/img65.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Сау адамдарды байқаудан сол параметр бойынша 12.4-кесте алынған.</p>
                  <img src="img/img66.png" alt="" />
                </p>
                <p>Сары аурудың ӛзге түрімен ауратын пациенттерді байқау келесі нәтижелер берді.</p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Паренхиматозды сару ауру</p>
                  <img src="img/img67.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Механикалық сару ауру</p>
                  <img src="img/img68.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Гемолитикалық сару ауру</p>
                  <img src="img/img69.png" alt="" />
                </p>
                <p>
                  Медициналық әдебиеттерді оқып білу және сарапшылармен ақылдасу келтірілген
                  параметрлер үшін «маңызды ауытқуларды» анықтауға мүмкіндік берді.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Гемолитикалық сару ауру</p>
                  <img src="img/img70.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Денсаулық</p>
                  <img src="img/img71.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Механикалық сару ауру</p>
                  <img src="img/img72.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <p>Паренхиматозды сару ауру</p>
                  <img src="img/img73.png" alt="" />
                </p>
                <p>
                  Қашықтау ӛлшем (ауру моделден нақты баламадан) ретінде мына функцияны таңдаймыз
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img74.png" alt="" />
                </p>
                <p>мұндағы i = 1,..., 10 – параметр нӛмірі; wi - i–индексы бар параметр салмағы.</p>
                <p>
                  «Бӛліну функцияның» нақты түрі шешімнің дұрыстығына қатты әсер етеді. Әрбір есепке
                  ол жеке іріктеп алынады және күрделі, кӛлемді түрде болады. D функция әрқашан
                  бірнеше түрлі әдіс арқылы анықталады:
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img75.png" alt="" />
                </p>
                <p>
                  Салмақтарды таңдау да маңызды сұрақ. Берілген есепте салмақтар тең деп алынған, ол
                  тәжірибеде сирек кездеседі. Егер есепті қайталайтын болсақ, онда «0-ге бӛлу»
                  немесе «белгісіз шамаға бӛлу» деген оқиғалар кездесу мүмкін. Осындай проблеманы
                  шешу - білімдер бойынша инженердің жұмысы. Мысалы, «0» орнына кейбір кіші мән
                  қойылады (берілген мысалда 0,1). Екінші оқиға («белгісіз шамаға бӛлу») нашарлау.
                  Егер осы «белгісіз шаманы» анықтай алмасақ, оны кейбір айнымалымен ауыстырады. D
                  функцияның мәні «сан/белгісіз» түрде алынады. Осындай бағалар бойынша да шешім
                  қабылдауға болады.
                </p>
                <p>Берілген мысалда пациент шынында да механикалық сары аурумен ауырады. </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Білімдерді ұсыну үшін семантикалық желілер.
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b>Критериалды әдістер;
                </li>
                <li>
                  <b>•</b>Таңдау есебі;
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> Ӛлшеуіш шкалалар;
                </li>
                <li>
                  <b>•</b>Шешімді қабылдаудың кейбір әдістемелері;
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>
                  Гипотезалар мен дихотомия. Ӛсу функциясы. Сыну нүктесі. Полиномияның дәлелі сыну
                  нүктесінің қатысуымен ӛсу функциялары.
                </li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>Қолдау векторларының әдісі</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 32 && (
            <>
              <h2 className="readRight__title">Лекция 13. Ықтималдық әдістер. Нейрон желілері</h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық әдістер. Нейрон желілері,
                  Ықтималдық әдістер жайлы түсінік қалыптастыру. Нейрон желілеріне талдау жасау.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық әдістер. </li>
                <li>2. Нейрон желілері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Баламалардың жақындау ӛлшемі ретінде кең ыңғай кластар ықтималдық бағаларды
                  пайдаланады. Қазіргі уақытта әр шешімдердің дұрыстығын, ықтимал шығысын бағалауға
                  мүмкіндік беретін әдістер тәуекел теориясында зерттелінеді. Теорияның сипаты
                  қолданбалы, сондықтан әнгіме заттық саладағы тәуекел туралы жүргізіледі.
                  Математикалық жағынан бұл кәдімгі ықтимал теориясы. Тәуекел теориясының мағынасы
                  математикалық емес, нақты заттық салада ӛлшеудің ерекшелігіне және деректерді
                  ықтималдық ӛңдеуіне байланысты алгоритмдық процедуралар.
                </p>
                <p>
                  Жоғарыда келтірілген медициналық диагнозы бойынша ықтимал теориясының әдістер
                  қолдануының қарапайым мысалын қарастырайық. «Маңызды ереже» ретінде Байес
                  формуласын алайық: <br />
                  P(A/B) = [P(A)P(B/A)] / [(P(A)P(B/A))].
                </p>
                <p>
                  Шартты ықтималдық формуласы егер «В» оқиғасы пайда болса, «А» оқиғаның
                  ықтималдығын есептей алады, яғни тәжірибе алдында (априорды) бар болған Р(А) мен
                  Р(В/А) ықтималдықтар негізінде алынған P(A/B). Формула бӛліміндегі қосындылау
                  толық оқиғалар тобында барлық жорамал бойынша жүргізіледі.
                </p>
                <p>
                  1-мысал. Температура кӛтерілуі байқалғанда, пациент ангинамен ауыратын
                  ықтималдығын есептеу керек. Егер пациент ангинамен ауырмаса, онда ол «ангина емес»
                  пен ауырады, мысалы сау.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img76.png" alt="" />
                </p>
                Априорды ықтималдықтар Р(Ангина) және Р(Температура/Ангина) осы жер үшін медициналық
                статистиканы талдаудан алыну мүмкін. Егер, емхананың жазулары бойынша, 10000
                аурулардан 7000-ы ангинамен ауырып шықса, онда априорды ықтималдық Р(Ангина)  0,7.
                Және медициналық әдебиеттен табуға болады Р(Температура/Ангина)  0,8.
                <p>
                  Р(Ангина емес)  0,3. Біраз Р(Температура/Ангина емес)-ны табуға қиындау болады,
                  қала берсе оны сараптама жасау арқылы бағалаймыз. Осы жолмен бӛлім үшін де
                  бағаларды аламыз.{' '}
                </p>
                <p>
                  2-мысал. «В» оқиға - бұл бір оқиға емес, бір уақытта болатын толық оқиғалар тобы.
                  Яғни «температура», «тері түсінің ӛзгеруі», «бүйір аурады» деген симптомдар бар
                  болғанда, пациент паренхиматозды сары аурумен ауыратының ықтималдығы қандай (ол не
                  үш сары аурулардың біреуімен ауырады, не сау)? Оңайлатып айтсақ, синдром
                  ықтималдығы жеке симптом ықтималдықтар кӛбейтіндісіне тең.{' '}
                </p>
                <p>
                  Сонымен, критериалды мысалдағы деректер үшін аламыз: <br />
                  Р(А1) = Р(А2) = Р(А3) = Р(А4),
                </p>
                яғни аурулардың бәрін тең ықтималды деп жорамалдаймыз (Аi – аурулар аты:
                паренхиматозды, механикалық және гемолитикалық сары аурулар, денсаулық).
                <p>
                  P(B1, B2,…, B10/A1) = P(B1/A1) P(B2/A1)… P(B10/A1), сірә, бұл «тым азайтылған»
                  баға.
                </p>
                <p>
                  P(B1/A1), P(B2/A1),… ықтималдықтар - бұл B1, B2 және т.б. симптом үшін «осы
                  аурудың қалыпты» мәнінен ауытқып кету ықтималдығын түсіндіреді. Мысалы,
                  денсаулыққа қалыпты 36,6° С мәнінен «температура» параметрдің ауытқуы 42 °С дейін,
                  береді Р(42 °С/сау)  0, ал ауытқу Р(35,5 °С/сау)  0,8 (сау болғаны ықтимал). 0,8
                  деген баға осы аймақ үшін медициналық статистиканың талдауынан алыну мүмкін.
                  Мысалы, симптом мәндері кейбір орта мәні айнала нормалды түрде үлестірілген деп
                  жорамалдауға болады (8.15-сурет).{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img77.png" alt="" />
                  <li>13.1-сурет. Бастапқы мәндер нормалды үлестірілу мүмкін</li>
                </p>
                <p>
                  Қарастырылған симптомдар үшін (3000 астам салынған үлестірулерге негізделіп)
                  табылған бағалар 1 – механикалық сары ауру, 2 – паренхиматозды, 3 – гемолитикалық,
                  4 –сау) және 13.1-кестеге түсірілген.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <li>Байес формуласына қойылатын мәндер</li>
                  <img src="img/img78.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img79.png" alt="" />
                </p>
                <p>
                  P(A1) = (0,250,27710-6 )/(0,250,27710-6 + 0,250,39510-6 + 0,250,010-6 +
                  0,250,0017510-6 )  0,41
                </p>
                <p>P(A2)  0,58 P(A3)  0,0 P(A4)  0,002</p>
              </p>
            </>
          )}
          {add === 33 && (
            <>
              <h2 className="readRight__title">Нейрон желілері</h2>
              <p>
                <p>
                  Бүгін ең белсенді түрде дамитын ЖИ бағыттарының бірі нейрон желілері – оны
                  критериалдық, ықтималдық және логикалық әдістердің дүбара моделі деп айтуға
                  болады. Нейрон желісін ӛнімдер ережелері негізінде де жасалуы мүмкін. Бірақ,
                  ӛнімдік жүйесі жеткілікті үлкен желіні жасай алмайды. Нейрон желісі бұл белгілі
                  жағдайда «егер/онда» ережелердің «сандық жазбасы». 80 жылдары әзірленген VI буын
                  ЭЕМ-ді жапондар «нейрокомпьютер» немесе «транспьютер» деп атады, жай айтқанда –
                  параллель ЭЕМ.
                </p>

                <p>
                  Теорияның дамуы У. Макклох (W. McCulloch) және У. Питтс (W. Pitts) жұмыстарынан
                  басталды, олар бас мидың іс-әрекетін қарастырған (1943 ж.). 1957 жылы психолог
                  Фрэнк Розенблатт (Корнелл, АҚШ) «перцептрон» деп аталатын электрмеханикалық
                  құрылғыны ойлап тапты. Ол ұлу кӛзін және оның ми мен ӛзара әрекеттесуін
                  модельдеді. Модель әліппе әріптерін айырып таныйтын, бірақ жазу түріне әсерленгіш
                  болатын. Перцептрон үшін А, А және А әріптер – үш әртүрлі белгілер.
                </p>
                <p>
                  1969 жылы классикалық жұмыс «Перцептрондар» шықты, онда М.Мински мен С.Пейперт
                  (M.I.T.) перцептрон кӛмегімен шамалы айырып тану туралы бір қатар теоремаларды
                  дәлелдеді. Сосын қазіргі нейрожелілер теориясының дамуы басталды, ал классикалық
                  перцептрондар қолданудан шықты. Перцептронның бір тарихи мысалын кӛрсетейік.
                </p>
                <p>
                  Перцептрон мысалы. «әріп А» және «А әріп емес» бейнелерді айырып таныйтын
                  перцептронды жасайық (13.2-сурет). Бірінші қадамда wij салмақтарды 1-ге тең деп,
                  xij элементер мәндерінің кӛптігін екі элементтен [0,1] тұрады деп алайық. Формула
                  ретінде тандаймыз: F(X, W) = ∑xijwij , шекті мәні 10. Перцептрон түрі мынадай
                  ∑xijwij  10. ∑xijwij  16 болғаны анық. Үлгі кӛмегімен үйретейік (13.2-суретте
                  қараңыз). Аламыз w11 = 0, w12 = 1, w13 = 1, w14 = 0, w21 = 1 және т.б.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img80.png" alt="" />
                  <li>13.2-сурет. «А» әріптің растрлы ұсынуы</li>
                </p>
                <p>
                  Енді айырып тану тәртібіне ӛтейік және мысалы, «R» әріпті кӛрсетіп кӛрейік. Оның
                  бейнесінде де нүкте (1,1) қара (яғни 1 сияқты кодталады). Теңсіздік ∑xijwij  10
                  орындалатындықтан, «R» әріпі «А» сияқты айырып танылды! Егер қатаң теңдік қоятын
                  болсақ, онда «А», немесе «А» немесе «а» және т.б. айырып тануын жүзеге асыра
                  алмаймыз. Перцептронды «А»-ны айырып тануға үйрету үшін, сірә w12 салмақтарды
                  қайта есептеп, шектік мәнін азайту қажет болар. М. Мински мен С. Пейперттың
                  классикалық кітабы дәл осы сұрақтарға арналған.{' '}
                </p>
                <p>Мысалға қатысты келесі жолдар істеу керек.</p>
                <p>
                  1. «А» әріпті бірмәнді идентификациялау үшін қажетті минимал нүктелер санын
                  анықтау. Ол үшін қандай әліппемен (символдар жиынтығы) жұмыс істеуді анықтау керек
                  болады (8.17-сурет).{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img81.png" alt="" />
                  <li>13.3-сурет. Әріп әртүрлі жазылу мүмкін</li>
                </p>
                <p>
                  2. Тек айырып тану символға сәйкес ерекшеліктерді анықтау. Мысалы, «А» әріптің
                  міндетті ерекшелігі тұйықталған жоғарғы бӛлігінің бар болуы. Ал «негізіндегі
                  бұралаңның» бар болуы қажет емес.{' '}
                </p>
                <p>
                  3. 2 пункттің әрбір бекітуіне n-орынды f(xsp, xgh, xnm,…) түрі бар предикатты
                  салыстырып, алғашқы екі пунктті логикалық бейнелеу. Предикат мәні 1 (ақиқат), егер
                  ізделіп отырған элемент табылса және керісінше 0. Мұндағы индекстер – түрлі бүтін
                  сандар, сонымен бірге бірінші индекс – тор ені, екінші – биіктігі. Солай «А»
                  әріпті айырып тану үшін бізге бір орынды, екі орынды және үш орынды предикаттар
                  керек болады (8.18-сурет).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img82.png" alt="" />
                  <li>13.4-сурет. Екі үш орынды, бір екі орынды және бір орынды предикаттар</li>
                </p>
                <p>
                  4. Перцептронның ӛзін бейнелеу, ол енді ұзынырақ және түсініксіз түрде болады:{' '}
                  <br /> f(xi)wi + f(xj , xk)ws + f(xj , xk, xl)wh  Q.
                </p>
                <p>
                  Мұнда индексы бар w әріптермен предикат салмағы белгіленген, ал қосындының ішінде
                  бір орынды, екі орынды және үш орынды предикаттар тұр. Шекті мәні Q сәйкестіктің
                  минимал қажетті санын тапсырады. Мысалы, бірінші ретті предикаттар саны
                  (8.16-суретті қараңыз) 10-нан кем болмау керек, екінші – 6-дан, үшінші – 4-тен кем
                  емес. Барлығы Q, ең жақсы жағдайда, 20 болу мүмкін. Басқа предикаттарды бейнелеп
                  шығарсақ, басқа Q алар едік. Перцептрон таза түрде кӛбінесе оқу есептер үшін
                  пайдаланылады
                </p>
                <p>
                  Медицинада нейрон (8.19-сурет) деп бас ми қабығының талшығы аталады. Арнайы
                  байланыс арқылы келіп түсетін электр сигнал әсерінен қоздырылып, нейрон ӛзіндік
                  сигналын генерациялайды және айналадағыларға береді және т.б. Бір уақыттан кейін
                  тежелу процесі басталады – жуықта қоздырылған нейрондардың электр белсенділігі
                  басылады, ал «демалған» нейрондар қайтадан қоздырылады.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img83.png" alt="" />
                  <li>13.5-сурет. Сызықты емес ӛзгертуші</li>
                </p>
                <p>
                  Нейрон желісін алдымен жуық математикалық теңдеулер жүйесі ретінде қарастыру
                  керек. Желі кӛмегімен нақты есепті шешу кезінде не жаңа желіні жобалау кезінде,
                  алынған жүйенің математикалық негіздеуі туралы ойлау керек.{' '}
                </p>
                <p>
                  Математикалық кӛзқарастан нейрон – бұл сызықты емес ӛзгертуші, кіреберісіне кейбір
                  мән (қоздырушы сигнал) берілген, ал шығысынан кірген мен күрделі немесе ықтималды
                  түрде байланысқан басқа мән (қоздыру шамасы) алынған: <br />
                  Y(X, W) = w0 + f(wi xi), i = 1, 2,…, n; <br /> мұндағы xi – ақпараттық кіру
                  мәндері; wi – салмақтар, сонымен бірге w0 – ығысу.
                </p>
                <p>
                  Бұл сызбаны былай істейді. Қосындығышта нейрон алған қоздыру есептеледі (w0 +
                  ∑f(wi xi)). Осы шаманың негізінде ӛзгерту функциясы нейронның ӛз қоздыруын
                  есептейді - Y. Ӛзгерту функцияның нақты түрі шешілетін есептің ӛзгешелігін еске
                  алып, таңдап алынады. Егер Y тек 0 немесе 1 мәнін алатын функцияны қабылдасақ,
                  онда, әрине, ӛнімдер ережелерін аламыз.{' '}
                </p>
                <p>
                  Ӛзгерту функцияның пайдалы түрлері аса кӛп емес. Нейрон кӛптігін (миллиондаған
                  болу мүмкін, ал ӛнімдер ережелерінде мыңдаған ғана болады) желіге біріктірген
                  кезде «қабаттарды» ажыратады (8.20-сурет), олардың арасындағы байланыс бір бағытты
                  немесе «кері таратуы» бар болу мүмкін. Ӛнімдік модельдегі ережелерді іріктеп алуды
                  басқару кезінде «дайын ӛнімдер» қатарымен ұқсастық айқын.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img84.png" alt="" />
                  <li>13.6-сурет. Кӛпқабатты нейрон желісі</li>
                </p>
                <p>
                  Желіні үйрету дегеніміз бұл wi салмақтарды есептеудің итеративті процесі берілген
                  дәлдігімен желі үстінде шығу мәндерін алуға мүмкіндік береді. Осындай салмақтарды
                  есептеу үшін, кіру мен оларға сәйкес шығу мәндерінің сынақ жиынтықтары болу қажет.
                  Осындай жиынтықтар басқа модельдерде де пайдаланылады және үйрететін іріктеу деп
                  аталады. Желіні үйрететін іріктеу үстінде алдын ала оқытуды керек қылмайтын оқыту
                  алгоритмдар бар, олар нақты есепті шешу процесінде тура үйренеді. Осындайға,
                  мысалы, ӛзін-ӛзі ұйымдасқан Кохонен желісі (картасы) жатады.{' '}
                </p>
                <p>
                  Салмақтар мәндерінің ӛзгеруі кейбір берліген қадам арқылы, не кездейсоқ шаманың
                  кейбір үлестіру заңы бойынша ӛту мүмкін. Шешімді критериалды қабылдау кезіндегі
                  жол беру әдісімен ұқсастығы айқын кӛрініп тұр. Ӛзгеру салмақтар кеңістігінде
                  градиент бағыты бойынша ӛтіп жатады. Осы кезде екі оқиға болу мүмкін, бірнеше есеп
                  қадамдарынан кейін желі тұрақты күйге (wi салмақтар қадам бойынша енді ӛзгермейді)
                  келеді, не «циклдан» шықпай қалады.
                </p>
                <p>
                  Тәжірибелік қолдану бір қабатты желілерде де бар, мысалы, толық байланысты Хопфилд
                  желісі, онда барлық нейрондар бір бірімен байланысқан.
                </p>
                <p>
                  Теорияда кері таратуы (қабаттар арасындағы сигналды) бар нейрон желісі қалаған
                  функцияны қандай да дәлдікпен аппроксимациялауға мүмкіндік береді. Егер тәуелсіз X
                  кірулердің саны бірнеше мыңнан аспайтын болса, тәжірибеде бұл мүмкін.
                </p>
                <p>
                  Егер шығу мәндерінің векторы кіру вектордың сығылған немесе бұрмаланған бейнесі
                  болып алынса, онда автоассоциативті нейрон желі туралы, кері жағдайда –
                  гетероассоциативты туралы айтады.{' '}
                </p>
                <p>
                  ЖИ саласында нейроинформатика бойынша зерттеулер бүгін ең озық деп саналады.
                  Нейрон желілері тәжірибелік тұрғыда экономикалық, әскери, ӛндірістік жүйелерде кең
                  қолданылады. Аппаратық жағынан нейрон желілері арнайы микросызба түрінде жүзеге
                  асырылады. Мысалы, осындай микросызбалар әуе қарсылы қорғаныс жүйелерде
                  пайдалынады, олар қашықтығы 300 км астам «радар экранындағы белгісіз объекті»
                  танып айыру есепті шешеді. Бірақ, нейрон желілерінің мүмкіндіктері математикалық
                  дәлелденбеген. Осы себептен, мысалы әскери қызметшілері, осындай кӛздеу жүйеге
                  толық сене алмайды.
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Ықтималдық әдістер;
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b>Нейрон желілері;
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> Нейроинформатика бойынша зерттеулер;
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>
                  Шешім ағаштары. Ақпараттық ұтыс, Джини критерийі. Ағаштарды жүйелеу. <br />
                  Абайсыз шешуші ағаштар.
                </li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>Оңтайлы бӛлу гиперпланты. Сыныптар арасындағы алшақтық ұғымы (маргин).</li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 34 && (
            <>
              <h2 className="readRight__title">
                Лекция 14. Сараптамалық жүйелермен жұмыс істеу технологиясы. Сараптамалық жүйелердің
                құрылымы және жіктеуі.
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Сараптамалық жүйелер және олардың
                  құрылымы және жіктеуі жайлы мәлімет беру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Сараптамалық жүйелермен жұмыс істеу технологиясы.</li>
                <li>2. Сараптамалық жүйелердің құрылымы және жіктеуі.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
                <p>
                  Жасанды интеллект әдістерінің кең тәжірибелік мәлімі «Сараптамалық жүйе» деп
                  аталатын ерекше бағдарлама жасауымен ӛмірге келді.{' '}
                </p>
                <p>
                  Осындай бағдарламалар ӛткен ғасырдың 60 жылдары бірінші пайда болып, белгілі бір
                  заттық саласы үшін жасанды «ақыл-ойды» жасауға арналған болатын. Мысалы, MYCIN
                  бағдарламасы гематология саласында «дәрігер» ретінде ойланған, CASNET – кӛз
                  аурулар саласында; ELIZA бағдарламасы «психолог» рӛлін атқаруға арналған болатын
                  және т.б.{' '}
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img85.png" alt="" />
                  <li>
                    14.1-сурет. Сараптамалық жүйенің пайдалануымен әрекеттесу технологиялары және
                    дәстүрлі сызба
                  </li>
                </p>
                <p>
                  60-70 жылдары сараптамалық жүйелердің кӛбі ең жақсы сарапшылардың (кейбір заттық
                  салада) тәжірибесін жинауға мүмкіндік беретін бағдарламалық механизмі болып
                  ойланатын. Сол кезеңдегі жасақталған деректер қорылары бұл рӛльді атқаруға
                  келмеген, ӛйткені олардың іздестіру тілі аса икемді емес; одан басқа ДҚ арналған
                  іздестіру тілінің рекурсивтігі (яғни ӛзін ӛзі шақыру мүмкіндігі) болмаған.{' '}
                </p>
                <p>
                  Сараптамалық жүйенің қазіргі түсінуі – бұл тар мамандандырылған бағдарламалық
                  кешен. Ол не ӛте тез стандартты шешімдерді (кӛбінесе, техникалық объектілерді
                  басқару үшін) қабылдауға, не пайдаланушымен сұхбат негізінде, кейбір шешімнің
                  таңдауына кӛмектесуге мүмкіндік береді (пайдаланушы ұсынатың варианттарға баға
                  беру жолымен және ӛзінің шешу варианттарын ұсынуы мен оларды түзету (14.1-сурет)).
                </p>
              </p>
            </>
          )}
          {add === 35 && (
            <>
              <h2 className="readRight__title">Сараптамалық жүйелермен жұмыс істеу технологиясы</h2>
              <p>
                <p>
                  Сараптамалық жүйенің кӛмегімен қолданбалы есептің шешуі бұл әрқашан мақсатқа
                  бейімділік итеративті процесс (14.1-сурет), себебі оның белгілі бір кӛзқарасына
                  сәйкес ең жақсы шешімді табу мақсаты бар.
                </p>

                <p>
                  Егер сараптамалық жүйені қолданбай (басқа бағдарламалық құралдар арқылы) шешімді
                  табатын болсақ, онда бұл бір реттік есеп болып табылады.
                </p>
                <p>
                  Сараптамалық жүйемен «сараптамалық емес» жүйелерінің арасындағы негізгі
                  айырмашылығы – біріншісі әрбір итерациясында заттық салада жаңа алгоритм
                  пайдаланады, бұл алдағы қадамның алгоритмның параметрлерімен ғана емес,
                  құрылымымен де ерекшеленеді. Яғни қойылған мақсатқа жету кезінде мақсат және оның
                  параметрлері де ӛзгеру мүмкін. 14.1-суретте сараптамалық жүйесі және оларсыз жұмыс
                  кезеңдерінің салыстырмалы сызбалары кӛрсетілген.
                </p>
              </p>
            </>
          )}

          {add === 36 && (
            <>
              <h2 className="readRight__title">Сараптамалық жүйелердің құрылымы</h2>
              <p>
                <p>
                  14.2-суретте абстракты сараптамалық жүйенің жалпы құрылымы берілген. Нақты
                  сараптамалық жүйелер осындай құрылымға кӛбінесе, толық сай бола алмайды, себебі
                  нақты сараптамалық жүйеде, әрбір заттық саласы үшін сипатты, қосымша блоктар ӛте
                  кӛп болады. Сонда да жұмыстың жалпы технологиясы және СЖ негізгі құрылым
                  элементтерінің міндеті түсінікті болу мүмкін.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img86.png" alt="" />
                  <li>14.2-сурет. Абстракты сараптамалық жүйенің жалпы құрылымы</li>
                </p>
                <p>
                  Сараптамалық жүйенің басқа бағдарламалардан басты құрылымдық айырмашылығы – бұл
                  білімдер қорының бар болуы және оқып үйрену мен ӛзін үйрету қабілетінде. Оның
                  нақты түрі таңдалған ұсыну моделіне қатты тәуелді, бірақ жалпы түрде оған әрқашан
                  фактілі және алгоритмды бӛліктер кіреді.
                </p>
                <p>
                  Енді ӛнімдер ережелері жүйесі үшін біз фактілер және ережелер (логикалық, кӛбінесе
                  дедуктивты қорытынды) туралы айтып отырамыз.
                </p>
                <p>Мысал. Айтып салу: крокодил (табандары, тістері, құйрығы, түсі).</p>
                <p>
                  Ереже. крокодил (X, Y, Z, U), егер X = «қысқа», Y = «үлкен», Z = «ұзын», U =
                  «жасыл».
                </p>
                <p>
                  Білімдерді ұсынудың фреймды моделіне негізделген, жасанды интелект жүйесі үшін
                  фактілер мен әдістер (қосылған процедуралар) туралы әнгіме жүргізіледі.
                </p>
                <p>Мысал. Фрейм «экрандағы сызық»:</p>
                <p>- басының координатасы 100, 100;</p>
                <p>- аяғының координатасы 200, 200;</p>
                <p>- кӛрші сызықтың координатасы белгісіз.</p>
                <p>Әдістер:</p>
                <p>- орта арқылы саздылы айналу;</p>
                <p>- жоқ болу;</p>
                <p>- кӛріну.</p>
                <p>
                  Бұл жағдайда сұрақ шығу мүмкін: «Экранда салынған сызықтың қандай интеллектуалдығы
                  бар?». Жауабы мұндай: жасанды интеллектте фреймдер кӛбінесе, кейбір процесті
                  немесе құбылысты модельдеу құралы ретінде пайдалынады, сондықтан экрандағы сызық
                  тірі организмның және т.б. моделі болуы мүмкін. Айналу кезінде ол басқа
                  сызықтармен соғысады, нәтижесінде, мысалы «кӛрші сызықтың координатасы» алаңы
                  толтырылады және т.с.с. (жүйе үйренеді).
                </p>
                <p>
                  Желілік моделі үшін жалпы жағдайда білімдер қоры: жүйенің күйін (мысалы, желі
                  түйінділеріндегі кейбір параметрдің мәнің), таңдалған белсенді бағыныңқы желіні
                  және шығару ережелерді ұстайды (оларға кіреді желі ішіндегі қатынастар
                  сипаттамасы).
                </p>
                <p>
                  <i>Шығару машинасы</i> – БҚ алгоримдық бӛлігін ӛзектіктіру ретіне және әдісіне
                  жауапты бағдарлама. Әртүрлі білімдерді ұсыну моделі үшін ол, әрине әртүрлі.
                </p>
                <p>
                  Логикалық моделі үшін оның түрі қарапайым тізбекті автомат болып табылады. Бұл
                  модельде әрбір уақыт сайын барлық логикалық теңдеулердің іріктеуі толық
                  ӛткізіледі.{' '}
                </p>
                <p>
                  Ӛнімдер жүйесі (логикалық шығару машина) үшін оның жағдайға тәуелді, детерминдық
                  немесе ықтималдық бағаға негізделген артық кӛру жүйесі бар. Бұл модельде кезекті
                  ӛзектіктіретін ереженің таңдауы бір мәнді болмайды.{' '}
                </p>
                <p>
                  Фреймды моделі үшін шығару машинасы екі бӛліктен тұрады. Жалпы бӛлігі фреймдер
                  жүйесінде ӛтетін оқиғалар барлық фреймдерге бір уақытта немесе тізбекті түрде
                  белгілі болсын дегеніне жауапты. Екінші бӛлігі – бұл фреймдер ӛзінің оқиғаларын
                  ӛңдеуші. Олар болған оқиға туралы алынған хабарға қандай әдістің қосу қажетін
                  шешеді.
                </p>
                <p>
                  <i>Түсініктеме бағыныңқы жүйесі</i> – бұл сараптамалық жүйенің маңызды
                  элементтерінің біреуі, ол оның тәжірибелік пайдалану тиімділігін анықтайды.
                  Түсініктеме бағыныңқы жүйесін жүзеге асыруда есептегіш қолдайтын процедураларды
                  пайдаландықтан (бірақ, басқа ретте), шығару машина есептегіштен және түсіндіру
                  бағыныңқы жүйесінен тұрады деп санауға болады. Машина не адам алған шешім ӛзі
                  емес, ал шешімнің жолы – процесі жиі бағалы болады. Түсініктеме бағыныңқы жүйесі –
                  бұл «Неге осылай?» немесе «Неге осылай, неге былай?» сұраққа жауап алатын
                  бағдарламалық механизм.{' '}
                </p>
                <p>
                  Мұндай қабілет (түсініктеме бағыныңқы жүйесінің бар болуы) интеллектуалды
                  жүйелердің барлығында бола алмайды. Бұл бағдарламау күрделігіне және білімдерді
                  ұсыну моделінің кемшіліктеріне байланысты. Түсініктеме бағыныңқы жүйесі тек
                  ӛнімдер ережелеріне және семантикалық желіге негізделген жүйелерде болады.{' '}
                </p>
                <p>
                  Мысал. Интеллектуалды жүйеге қойылған пайдаланушының (интерфейс арқылы шығару
                  машинаға) сұранысы: «Ертеңге доллар курсы қандай болады?».
                </p>
                <p>Жүйе диалогы.</p>
                <li>1. Саяси тұрақтылығы қандай? Оператордың жауабы: «Жоғары». </li>
                <li>2. Экономикалық болжам қандай? Оператордың жауабы: «Қолайлы».</li>
                <li>3. Биржада белсенділік қандай? Оператордың жауабы: «Тӛмен».</li>
                <p>Жүйенің жауабы: «Болжалды курс 145,7 тнг.»</p>
                <p>Жүйе түсініктемесі. </p>
                <p>
                  1 ереже: Саяси тұрақтылығы жоғары және болжам қолайлы болғандықтан, 1 параметр =
                  тұрақтылық.
                </p>
                <p>
                  2 ереже: 1 параметр тұрақты және биржадағы белсенділік тӛмен болғандықтан, 2
                  параметр = ӛсуі тӛмен.
                </p>
                <p>
                  3 ереже: 2 параметр = ӛсуі тӛмен болғандықтан, курс = бүгінгі курс + кішкене
                  кездейсоқ ауытқуы.
                </p>
                <p>
                  Білімдер қорының интеллектуалды редакторы – бұл білімдер қорынындағы фактілер мен
                  ережелерді қосу, жою және ӛзгертуге мүмкіндік беретін бағдарлама. «Интеллектуалды»
                  дегеніміз, білімдер қорының тұтастығын, дұрыстығын және қайшылықсыздығын
                  қамтамасыз ететін қабілет.{' '}
                </p>
                <p>
                  Жеке алынған білімдер элементінің мағынасы жоқ, сондықтан білімдер қорына қандайда
                  операцияны (жазыларды қосу, жою, ӛзгерту) жасау үшін бүкіл білімдер қорының
                  тұтастығын, дұрыстығын және қайшылықсыздығын берілген тереңдікке тексеру қажет.{' '}
                </p>
                <p>
                  Мұны мысал арқылы түсіндірейік. Телефон анықтамалық деген кесте бар болсын.
                  Бастапқы кілт «Тегі, аты + телефон» (14.1-кесте).
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img87.png" alt="" />
                </p>
                <p>
                  Енді жаңа жазуды енгізейік «Аманов С. / 31-05-86 / Абай к., 45-60». Егер енгізуде
                  қателік (мысалы, телефон 31-05-85) шықса ДҚБЖ (СУБД) қабыл алынбайды – себебі
                  бастапқы кілт бұзылған. Ал егер он әртүрлі тектерді терген кезде қателісіп отырсақ
                  (мысалы, бәрін бір телефонға жазайық «31-05-85»), онда ешқандай хабар алмаймыз,
                  бір пәтерде 11 адам тұрмайды ғой! Білімдер қорына жаңа мәлімет қосқанда,
                  «қосылған» деп аталатың процедура белсенділі болу керек, ол жүйедегі бар болған
                  ақпаратпен салыстырып, енгізілген ақпараттың дұрыстығын тексереді.{' '}
                </p>
                <p>
                  «Берілген тереңдік» дегенді толығырақ қарастырайық. Себебі, ӛзінің табиғаты
                  бойынша білімдердің рекурсивтігі («ішке салуы») бар болады. Білімдер қорында
                  болғанда, білім элементтері таң ғаларлық және адамға түсініксіз мағыналық
                  тізбектер жасайды. Қандайда қосылған жаңа элемент олардың арасында «кӛпір» сияқты
                  бола алады, сол себептен одан үлкен жаңа тізбектердің пайда болуына әкеледі.
                  Осындай тізбектін шетінде заттық сала туралы кейбір жаңа қорытынды болады. Бұл
                  жаңа қорытынды бұрынғы қорытындымен қайшы болып шығу мүмкін. Осындай қайшылықтар
                  интеллектуалды жүйенің негізгі жұмыс тәртібі, себебі олардың пайда болуы фактілер
                  мен ережелерді тексеруге және дәлдеуге мәжбүр етеді. Және де жүйеге енгізген жаңа
                  білімнің (кӛпірдің) дұрыстығын және дәлдігін бағалауға келтіреді.{' '}
                </p>
                <p>
                  Мысал 1. Жүйеде жазулар бар болсын: <br />
                  «Қайрат Майраның әкесі»; <br />
                  «Майра Болаттың шешесі».
                </p>
                <p>
                  Сіз «Болат Тӛкеннің немересі» жазуды енгізуге тырысасыз. Жүйе 2 тереңдікте
                  қайшылықты табады, ӛйткені бар болған мәлімет бойынша «Болат Қайраттың немересі»!
                  Жүйе дәлдеуді қажет етеді: «бұл сол Болат па». Егер олар әртүрлі болса, онда жүйе
                  білімдер қорын ӛзгертеді: <br />
                  «Қайрат Майраның әкесі»; <br />
                  «Майра Болат Амановтың шешесі»; <br />
                  «Болат Қасенов Тӛкеннің немересі».
                </p>
                <p>
                  Немесе қателікті түзетеді: <br />
                  «Қайрат Майраның әкесі»; <br />
                  «Майра Болаттың шешесі»; <br />
                  «Болат Қайраттың немересі»
                </p>
                <p>2-мысал. Сызбада кӛрсетілген (9.3-сурет) техникалық объект бар.</p>
                <p>
                  Қатты бітеуде гайкасы бар штанга орнатылған. Сіз «Апаттан кейін «А» бетінде
                  цилиндрлық пішіні бар бірнеше фрагменттер табылған, мүмкін – үзілген гайкалар»
                  деген жазуды енгізуге тырысасыз.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img88.png" alt="" />
                  <li>14.3-сурет. Сараптамалық жүйеде бейнеленген объект сызбасы</li>
                </p>
                <p>
                  Жүйеде сызба шамамен былайша сипатталған: <br />
                  қосылған (қатты бітеу №1, штанга №1); <br />
                  қосылған (штанга №1, гайка №1); <br />
                  кішкентай (гайка №1); <br />
                  алты бұрышты (гайка №1); <br />
                  цилиндрлық (штанга №1); <br />
                  ұзын (штанга №1); <br />
                  іші қуыс (штанга №1); <br />
                  қасында (штанга №1, «А»).
                </p>{' '}
                <br />
                <p>Жаңа жазу қайшылықты шақырады. </p>
                <li>1. «Бір қираған гайканың ұсақ фрагменттері аса кӛп болмау керек». Дұрыс па?</li>
                <li>2. Әйтпесе «фрагменттер қираған штанганікі».</li>
                <li>3. Әйтпесе «фрагменттер сырттан түскен».</li>
                <p>
                  Қорытындылары сӛзсіз шығады деп ойлап қалуға болады, бірақ олай емес. Мысалы,
                  автомобиль туралы әнгіме болсын. Майын ауыстырған кезде бӛлшектердің қандай
                  фрагменттері табылғаның айталасыз ба?{' '}
                </p>
                <p>Қаралған мысалдарда қатынастардың транзитивті қасиеті бар болды. </p>
                <p>
                  <i>Пайдаланушының интеллектуалды интерфейсы </i>– бұл оптималды түрде мақсатқа
                  жету үшін пайдаланушымен сұхбатты ұйымдастыруға жауап беретін бағдарлама.{' '}
                </p>
                <p>
                  Сұхбат барысында жүйе пайдаланушыға сараптамалық жүйемен кеңесудің мақсатын
                  дәлдеуге немесе ӛзгертуге кӛмектеседі, сондықтан ол интерфейс «интеллектуалды» деп
                  аталады. Осындай қажеттілік болу керек, ӛйткені сараптамалық жүйе кӛмегімен
                  модельденетін қазіргі объектілер, процестер, құбылыстар ӛте үлкен және күрделі
                  болғандықтан, пайдаланушы олардың аттарын (атауларын) да параметрлерін де есте
                  сақтай алмайды, сондықтан сұранысты сауатты қою және жауапты алу мүмкін емес.
                </p>
              </p>
            </>
          )}
          {add === 37 && (
            <>
              <h2 className="readRight__title">Сараптамалық жүйелердің жіктеуі</h2>
              <p>
                <p>
                  Сараптамалық жүйелерді әртүрлі негізі бойынша топтастыруға болады: пайдалынатын
                  білімдер ұсыну моделінің типы бойынша, қолдану саласы, міндеті, тиімділік
                  кӛрсеткіштері бойынша және басқа (9.2- кесте, 9.4-сурет).
                </p>
                <p>
                  Ӛзінің қорытындыларын дәйекті дәлдеуге мүмкіндік беретін модель тереңдік деп
                  аталады. Тереңдік білімдерге: абстракциялар, бейнелер, аналогиялар жатады. Оларда
                  заттық сала құрылымының ұғынуы, жеке ұғымдардың міндеті мен ӛзара байланысы,
                  белгілі заңдар және теориялық негіздер ұсынылады.
                </p>
                <p>
                  Шалағай (сыртқы) білімдер кӛбінесе, зерттеу объектінің сыртқы шығуына жатады. Олар
                  кейбір (кӛбінесе, ӛте ықтималды) жорамалдарды жасауға мүмкіндік береді. Шалағай
                  білімдерге негізделген қорытындылар, тереңдік білімдер кӛмегімен алынған
                  қорытындылар сияқты, берікті және бағалы болу мүмкін, бірақ олар дәйекті емес.
                  Шалағай білімдер, әдетте, заттық салалар ұғымдарының арасындағы эмпириялық
                  ассоцияларға және себепті салдар қатынастарға тиеді. Кӛп жағдайда жасанды
                  интеллектің моделі шалағай болып туады, сосын ӛзінің «пайдалығын» дәлелдегеннен
                  кейін математикалық негіздемесін, интерпретация әдісін және модель жұмысының
                  нәтижелер түсіндірмесін алады.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img89.png" alt="" />
                  <li>14.4-сурет. Сараптамалық жүйенің жіктеу варианттары</li>
                </p>
                <p>
                  Мысал. Телефонды пайдаланған кезде біз шалағай білімдерге негізделеміз, яғни
                  трубканы алып нӛмірді теріп керекті абонетпен қосылуға болады. Сол кезде телефон
                  иесіне телефонды байланыс құрылымы және телефон аппараттың сызбасы туралы терең
                  білімдердің қажеті жоқ.{' '}
                </p>
                <h3>Білімдер ұсыну моделінің типы бойынша СЖ жіктеуі</h3>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img90.png" alt="" />
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img91.png" alt="" />
                </p>
                <p>
                  Сараптамалық жүйелердің кӛбінде, қазір шалағай білімдер пайдалынады. Тереңдік
                  ұсыныстардың енгізуі үлкен қуатты БҚ жасауға мүмкіндік береді, ӛйткені тереңдік
                  білімдер қатты шалағай білімдерге қарағанда икемділеу және адаптивті келеді.
                  Классикалық мысал – медицина, мұнда тәжірибелі дәрігерлердің тереңдік білімдері
                  бір аурудың әртүрлі емдеу әдістерің тудыруға мүмкіндік ашады (аурудың жағдайына,
                  оның жасына, дәрінің бар болуына және т.б. байланысты). Ал жас немесе тәжірибесі
                  тӛмен дәрігер шалағай моделі бойынша жұмыс істейді: «Егер жӛтел – онда жӛтелден
                  таблетка ішу керек, егер ангина – онда эритромицин ішу керек» және т.с.с.
                </p>
                <p>
                  Тереңдік білімдер заттық саланың бастапқы ұғымдарын кейбір абстракты құрылымға
                  жинақтау арқылы пайда болады.{' '}
                </p>
                <p>
                  Білімдердің «қаттылығы» және «жұмсақтығы» берілген бастапқы жағдайларда бірмәнді,
                  айқын ұсыныстарды алу мүмкіндікті немесе кӛптік, бұлдыр шешімдер мен ұсыныстарды
                  алуды кӛрсетеді. Осы жіктеуге сәйкес заттық саланың ӛзін де қатты мен жұмсаққа
                  жатқызуға болады. СЖ дамуының қазіргі тенденциясы - қатты шалағай модельдерден
                  жұмсақ тереңдік модельдерге ауысу.
                </p>
              </p>
            </>
          )}
          {add === 38 && (
            <>
              <h2 className="readRight__title">Шешілетін міндеті бойынша жіктеу</h2>
              <p>
                <p>
                  Интерпретациялау және кӛзбен шолу сараптамалық жүйелер кӛбінесе, экономикалық
                  жүйелерде қолданылады. Себебі, кәсіпорынды басқару барысында пайдалынатын
                  есептеуіш коэффициенттерді талдау да, есте сақтауға да ӛте қиын. Ал коэффициенттер
                  мәндерінің талдауы аса күрделі емес, ӛйткені кейбір коэффициенті мәні берілген
                  шектен аспау керек және олар бір-бірімен ӛзара байланысты болады.
                </p>
                <p>
                  Осындай жағдайда мәліметтерді кӛрнекті түрде ұсыну ӛте маңызды, яғни кӛзбен шолу.
                  Ең қарапайым вариант – диаграммалар (діңгекті, дӛңгелекті, нүктелі және т.б.)
                  жасау.
                </p>
                <p>
                  Бірақ, егер коэффициенттер белгілі тәуелділікте болса, одан күрделіден кӛзбен
                  шолуды пайдалану қажет (9.5-сурет). Егер 9.5-сурет үш баған цифрлерден тұрса, онда
                  шешімді тез қабылдауға қиын болар еді.
                </p>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img92.png" alt="" />
                  <li>14.5-сурет. Бірнеше шектеулерге қанағаттанған шешімді таңдау</li>
                </p>
                <p>
                  Кӛзбен шолу әрқашан бола бермейді. Ең қарапайым вариант – кеңістіктің ӛлшемдігі
                  үштен артық болса. Мысалы, цифрлердің тӛрт бағаны болсын, бірақ егер бағандардың
                  арасында ӛзара тәуелділері болса, онда бұл тӛрт ӛлшемді кеңістік емес. Тәжірибеде
                  бастапқы мәліметтердің кӛбі «тәуелсіз мәнді» болмайды.
                </p>
                <p>
                  Бұл жағдайда цифрлер бағандарды толық түсініктемемен ауыстыру қажет, мысалы,
                  мәтіндік түрде. Түсініктемелер қысқа болу керек және олардың ішінде себеп пен
                  салдар, байланыстар, мүмкін шешімдер туралы қорытындылыр болу қажет.
                  Интерпретациялау есептерді шешу үшін математикалық және статистикалық мәліметтерді
                  талдау теориясы бар.
                </p>
                <p>
                  Ең бірінші жасалынған сараптамалық жүйелер - диагностика жасайтың жүйелер.
                  Мониторинг жүргізетін СЖ бірге, олар техникалық объектілердің үздіксіз
                  диагностикасын жасау үшін арналған, мысалы, ракеталарды іске қосуда және ұшу
                  барысында. Жалпы айтқанда, осындай СЖ объекті кейбір класқа келтіру және
                  ақаулықтың орын мен түрін табуды орындайды. Ақаулық – бұл нормадан ауытқу.
                  Сондықтан осындай баян ету техникалық жүйедегі жабдықтың ақаулығын, тірі
                  организмның ауруын және әртүрлі табиғи аномалияларды бірыңғай теориялық
                  кӛзқараспен қарауға мүмкіндік береді.{' '}
                </p>
                <p>
                  Мониторинг жүргізетін СЖ ерекшелігі - жүздеген не мыңдаған датчиктерден үздіксіз
                  түсіп тұратын кӛп параметрлерді еске алуда. Осындай жағдайда уақыттың нақты
                  масштабында кӛбінесе, жұмыс істеу керек, сонда дабыл сигналын дәл кезінде беруге
                  болады.{' '}
                </p>
                <p>
                  Жоспарлау және жобалау СЖ кӛзбен шолу және интерпретация жүйелермен кӛп ортағы
                  бар. Мысалы, жаңа автокӛліктің электржабдықтарының сызбасын талдап, осындай жүйе
                  сымдардың мехникалық бұзылу орындарын кӛрсете алады. Осы есепті шешу үшін арнайы
                  «когнитивті» графика, варианттарды таңдау әдістері және ерекше әдістемелер
                  пайдаланылады, оған тәжірибелі инженерлер жүйені үйретеді. Қазіргі СЖ мұны
                  сценарийлер моделі кӛмегімен орындайды. Егер жоба экономика саласында жүзеге
                  асырылса, онда сызбалар орнына біз бизнесжоспарды қолдаймыз.{' '}
                </p>
                <p>
                  Болжам жасайтың СЖ берілген жағдайдан ықтимал салдарды шығарады. Болжамдайтың
                  жүйеде әдетте, параметрлік динамикалық модель пайдалынады, онда параметрлердің
                  мәндері берілген жағдайға «сыналастырылады».{' '}
                </p>
                <p>
                  Оқыту СЖ қандай да пәнді оқып үйрену кезінде ЭЕМ кӛмегімен қателіктерді анықтайды
                  және дұрыс шешімдерді кӛрсетеді. Олар оқушы туралы білімдерді жинайды (сипатты
                  қателерін, нашар мағлұматын) және оларды жоятын сәйкес құраларды табады.{' '}
                </p>
                <p>
                  Жалпы жағдайда білімдерге негізделген жүйелерді екі топқа: талдау есептерді
                  шешетін және синтез есептерді шешетін жүйелерге бӛлуге болады. Олардың арасындағы
                  негізгі айырмашылығы мынадай - талдау есептерде шешімдердің кӛптігін атап ӛтіп,
                  жүйеге қосуға болады, ал синтез есептерде шешімдердің кӛптігі потенциалды және
                  компонент немесе проблема шешімдерінен құрылады. Талдау есептеріне: мәліметтерді
                  интерпретациялау, диагностика; синтез есептері: жобалау, жоспарлау жатады.
                </p>
                <p>
                  Құрастырылған есептер: оқыту, мониторинг, болжам жасау. Автономды СЖ
                  пайдаланушымен кеңес беру тәртібінде тек «сарапшылық» есептер үшін жұмыс істейді,
                  оларды шешу үшін мәліметтерді ӛндеу дәстүрлі әдістерді (есептеу, модельдеу және
                  т.б.) қолдамауға болады.{' '}
                </p>
                <p>
                  Гибридты СЖ бұл бағдарламалық кешен, олар стандартты қолданбалы бағдарламалардың
                  пакеттерін (мысалы, математикалық статистика, сызықты бағдарламалау немесе
                  мәліметтер қорын басқару жүйелер) құрастырады. Бірақ, осындай жүйелерді жасау ӛте
                  күрделі.
                </p>
                <p>
                  Сараптамалық жүйелердің жасауының қазіргі күйі мұндай: диагностика есептері,
                  интерпретация, жобалау —{'>'} мониторинг, оқыту; статикалық —{'>'} динамикалық;{' '}
                  <br />
                  автономды —{'>'} гибридты. <br />
                </p>
                <p>
                  Статикалық СЖ, есепті шешу кезінде білімдер қоры және мәліметтер ӛзгермейтің,
                  заттық салада жасалынады. Олар тұрақты болады. Мысалы, автокӛліктің ақаулықтарың
                  диагностикалау.{' '}
                </p>
                <p>
                  Квазидинамикалық СЖ, кейбір қойылған уақыт барысында ӛзгеретін жағдайды
                  интерпретациялайды (түсіндіреді). Мысалы, микробиологиялық СЖ. Зертханалық
                  ӛлшемдер технологиялық процесс барысында 4-5 сағатта бір рет алынады және алынған
                  кӛрсеткіштердің динамикасы талданады.{' '}
                </p>
                <p>
                  Динамикалық СЖ, есепті шешу кезінде ӛзгеретін мәліметтермен, кейде нақты уақыт
                  тәртібінде жұмыс істейді. Мысалы, икемді ӛндірістік жүйелер, аурухана палатасында
                  мониторинг және тағы басқалар.
                </p>
                <p>Кейбір жақсы танымал СЖ 9.3-кестеде кӛрсетілген. </p>
                <h3>Кейбір жақсы танымал интеллектуалды жүйелер</h3>
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img93.png" alt="" />
                </p>
                <p>
                  {' '}
                  <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                    <img src="img/img94.png" alt="" />
                  </p>
                </p>
                <h3>5. Деңгейлік тапсырмалар:</h3>
                <h3>1-деңгей.</h3>
                <li>
                  <b>•</b>Сараптамалық жүйе анықтамасы;
                </li>
                <h3>2-деңгей. </h3>
                <li>
                  <b>•</b>Сараптамалық жүйелермен жұмыс істеу технологиясы;
                </li>
                <h3>3-деңгей. </h3>
                <li>
                  <b>•</b> Сараптамалық жүйелердің құрылымы;
                </li>
                <li>
                  <b>•</b> Сараптамалық жүйелердің жіктеуі;
                </li>
                <h3>6. БОӨЖ тапсырмалары:</h3>
                <li>
                  Байес классификаторы. Белгілердің таралуын бағалау түрлері (Gaussian, Bernoulli,
                  Multinomial). Em алгоритмі.
                </li>
                <h3>7. БӨЖ тапсырмалары:</h3>
                <li>
                  Сызықтық бӛліну және сызықтық бӛлінудің болмауы жағдайлары. Реттелетін эмпирикалық
                  тәуекелді азайтумен байланыс. Сызықтық жоғалту функциясы.
                </li>
                <h3>8. Пайдаланылған әдебиеттер:</h3>
                <li>
                  1. Ғ. Айғараева, Қ. Асанова, М. Нысанов. Сандық қондырғылар және микропроцессорлық
                  жүйелер. Оқулық. 2010
                </li>
                <li>2. Д. С. Козен. Есептеу теориясы. Сандық. Оқулық Алматы. 2013. </li>
                <li>
                  3. Асамбаев А.Ж. Жасанды интеллект негіздері.- Алматы: ЖШС РПБК "Дәуір",
                  2011-135б. Оқу құралы.
                </li>
                <li>
                  4. Рассел С., Норвиг П. Жасанды интеллект: Жаңашыл әдіс -Алматы, 2014.. Оқу
                  құралы.
                </li>
                <li>5. К. Пол. Цифровое искусство. Учебник. Москва , 2017, 220</li>
                <li>
                  6. Андреас Мюллер, Сара Гвидо. Введение в машинное обучение с помощью Python.
                  –Москва. 2016.
                </li>
                <li>
                  7. В.Н.Негода. Машинно-ориентированное программирование. Учебное пособие Ульяновск
                  2015.{' '}
                </li>
              </p>
            </>
          )}
          {add === 36 && (
            <>
              <h2 className="readRight__title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері. Статистикалық
                шешім қабылдау әдістері тәуекелге ұшырайды
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық және статистикалық шешім
                  қабылдау модельдері туралы түсінік беру. Статистикалық шешім қабылдау әдістеріне
                  мысалдар келтіру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
              </p>
            </>
          )}
          {add === 36 && (
            <>
              <h2 className="readRight__title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері. Статистикалық
                шешім қабылдау әдістері тәуекелге ұшырайды
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық және статистикалық шешім
                  қабылдау модельдері туралы түсінік беру. Статистикалық шешім қабылдау әдістеріне
                  мысалдар келтіру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
              </p>
            </>
          )}
          {add === 36 && (
            <>
              <h2 className="readRight__title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері. Статистикалық
                шешім қабылдау әдістері тәуекелге ұшырайды
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық және статистикалық шешім
                  қабылдау модельдері туралы түсінік беру. Статистикалық шешім қабылдау әдістеріне
                  мысалдар келтіру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
              </p>
            </>
          )}
          {add === 36 && (
            <>
              <h2 className="readRight__title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері. Статистикалық
                шешім қабылдау әдістері тәуекелге ұшырайды
              </h2>
              <p>
                <p>
                  <b>1. Лекция мақсаты мен міндеттері:</b> Ықтималдық және статистикалық шешім
                  қабылдау модельдері туралы түсінік беру. Статистикалық шешім қабылдау әдістеріне
                  мысалдар келтіру.
                </p>
                <h3>2. Лекция мазмұны:</h3>
                <li>1. Ықтималдық және статистикалық шешім қабылдау модельдері.</li>
                <li>2. Статистикалық шешім қабылдау әдістері.</li>
                <p>
                  <b>3. Оқытудың техникалық құралдары:</b> Zoom онлайн оқыту платформасы
                </p>
                <p>
                  <b>4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: </b>баяндау, сұрақ –
                  жауап, түсіндіру, кіріспе лекция
                </p>
              </p>
            </>
          )}
        </div>
      </div>
    </div>
  );
}

export default Read;
