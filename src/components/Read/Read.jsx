import React from 'react';

import './read.scss';
function Read() {
  const [show, setShow] = React.useState(false);
  const [show1, setShow1] = React.useState(false);
  const [show2, setShow2] = React.useState(false);
  const [show3, setShow3] = React.useState(false);
  const [show4, setShow4] = React.useState(false);
  const [show5, setShow5] = React.useState(false);
  const [show6, setShow6] = React.useState(false);
  const [show7, setShow7] = React.useState(false);
  const [show8, setShow8] = React.useState(false);
  const [show9, setShow9] = React.useState(false);
  const [show10, setShow10] = React.useState(false);
  const [show11, setShow11] = React.useState(false);
  const [add, setAdd] = React.useState(1);

  const onShow = () => {
    setShow(!show);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow1 = () => {
    setShow(false);
    setShow1(!show1);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow2 = () => {
    setShow(false);
    setShow1(false);
    setShow2(!show2);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow3 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(!show3);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow4 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(!show4);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow5 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(!show5);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow6 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(!show6);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow7 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(!show7);
    setShow8(false);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow8 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(!show8);
    setShow9(false);
    setShow10(false);
    setShow11(false);
  };
  const onShow9 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(!show9);
    setShow10(false);
    setShow11(false);
  };
  const onShow10 = () => {
    setShow(false);
    setShow1(false);
    setShow2(false);
    setShow3(false);
    setShow4(false);
    setShow5(false);
    setShow6(false);
    setShow7(false);
    setShow8(false);
    setShow9(false);
    setShow10(!show10);
    setShow11(false);
  };
  return (
    <div className="container">
      <div className="read">
        <div className="readLeft">
          <h2 className="read__title">Мазмұны</h2>
          <ul className="read__menu">
            <li onClick={() => onShow()} className="read__item">
              <h3 className="read__menu-title">Лекция 1. Машиналық оқытудың негіздері.</h3>
              {show && (
                <ul>
                  <li onClick={() => setAdd(1)}>Машиналық оқыту дегеніміз не?</li>
                  <li onClick={() => setAdd(2)}>Жұмыс істеу принципі</li>
                  <li onClick={() => setAdd(3)}>Машиналық оқытудың класстары</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow1()}>
              <h3 className="read__menu-title">Лекция 2. Машиналық оқытудың логикалық моделі</h3>
              {show1 && (
                <ul>
                  <li onClick={() => setAdd(4)}>Машиналық оқытудың логикалық моделі</li>
                  <li onClick={() => setAdd(5)}>Деректер (Data)</li>
                  <li onClick={() => setAdd(6)}>Алгоритм (Algorithm)</li>
                  <li onClick={() => setAdd(7)}>Машиналық оқытудың негізгі түрлері</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow2()}>
              <h3 className="read__menu-title">
                Лекция 3. Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
              </h3>
              {show2 && (
                <ul>
                  <li onClick={() => setAdd(8)}>
                    Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
                  </li>
                  <li onClick={() => setAdd(9)}>Нейрондық желілер және терең оқыту</li>
                  <li onClick={() => setAdd(10)}>Бақыланатын және бақыланбайтын оқыту</li>
                  <li onClick={() => setAdd(11)}>Жіктеу және регрессия</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow3()}>
              <h3 className="read__menu-title">
                Лекция 4. Расс-Лассо регрессиясы: олардың дұрыс қолдануы
              </h3>
              {show3 && (
                <ul>
                  <li onClick={() => setAdd(12)}>
                    Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керек?
                  </li>
                  <li onClick={() => setAdd(13)}>
                    Бақыланатын машиналық оқыту: Регрессия Vs классификациясы
                  </li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow4()}>
              <h3 className="read__menu-title">
                Лекция 5. Машиналық оқытудың логикалық моделі. Ранжирлеу шежіресі
              </h3>
              {show4 && (
                <ul>
                  <li onClick={() => setAdd(14)}>
                    Машинаны оқыту негіздері: сызықтық регрессия және логикалық регрессия
                  </li>
                  <li onClick={() => setAdd(15)}>Регрессия: сызықтық және логистикалық</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow5()}>
              <h3 className="read__menu-title">Лекция 6. Machine Learning VS Адамды оқыту</h3>
              {show5 && (
                <ul>
                  <li onClick={() => setAdd(16)}>Machine Learning VS Адамды оқыту</li>
                  <li onClick={() => setAdd(17)}>Адамның білімін түсінуден бастайық.</li>
                  <li onClick={() => setAdd(18)}>
                    Осындай нәрсені үйренгенде біздің нейрондық желілеріміз қандай болады?
                  </li>
                  <li onClick={() => setAdd(19)}>Біздің миымыз бір нәрсені қалай біледі?</li>
                  <li onClick={() => setAdd(20)}>Машиналар қалай үйренеді?</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow6}>
              <h3 className="read__menu-title">
                Лекция 7. Ықтималдық және статистикалық шешім қабылдау модельдері.
              </h3>
              {show6 && (
                <ul>
                  <li onClick={() => setAdd(21)}>
                    Статистикалық шешім қабылдау әдістері тәуекелге ұшырайды
                  </li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => setAdd(22)}>
              <h3 className="read__menu-title">Лекция 8. Машиналық оқытудың қолдану ауқымы</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(23)}>
              <h3 className="read__menu-title">Лекция 9. Data Mining модельдері</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(24)}>
              <h3 className="read__menu-title">Лекция 10. Data Mining модельдерінің түрлері</h3>
            </li>
            <li className="read__item" onClick={() => setAdd(25)}>
              <h3 className="read__menu-title">
                Лекция 11. Білімдерді ұсыну үшін семантикалық желілер.
              </h3>
            </li>
            <li className="read__item" onClick={() => onShow7()}>
              <h3 className="read__menu-title">
                Лекция 12. Критериалды әдістер. Шешімді қабылдаудың кейбір әдістемелері.
              </h3>
              {show7 && (
                <ul>
                  <li onClick={() => setAdd(26)}>Шешім көпкритериалды қабылдауының оқу мысалы.</li>
                  <li onClick={() => setAdd(26)}>Критериалды әдістер</li>
                  <li onClick={() => setAdd(27)}>Таңдау есебі</li>
                  <li onClick={() => setAdd(28)}>Өлшеуіш шкалалар</li>
                  <li onClick={() => setAdd(29)}>Шешімді қабылдаудың кейбір әдістемелері</li>
                  <li onClick={() => setAdd(30)}>Шешім көпкритериалды қабылдауының оқу мысалы</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow8()}>
              <h3 className="read__menu-title">Лекция 13. Ықтималдық әдістер. Нейрон желілері</h3>
              {show8 && (
                <ul>
                  <li onClick={() => setAdd(31)}>Нейрон желілері</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow9()}>
              <h3 className="read__menu-title">
                Лекция 14. Сараптамалық жүйелермен жұмыс істеу технологиясы.
              </h3>
              {show9 && (
                <ul>
                  <li onClick={() => setAdd(32)}>Сараптамалық жүйелердің құрылымы және жіктеуі.</li>
                  <li onClick={() => setAdd(33)}>
                    Сараптамалық жүйелермен жұмыс істеу технологиясы
                  </li>
                  <li onClick={() => setAdd(34)}>Сараптамалық жүйелердің құрылымы</li>
                  <li onClick={() => setAdd(35)}>Сараптамалық жүйелердің жіктеуі</li>
                  <li onClick={() => setAdd(36)}>Шешілетін міндеті бойынша жіктеу</li>
                </ul>
              )}
            </li>
            <li className="read__item" onClick={() => onShow10()}>
              <h3 className="read__menu-title">
                Лекция 15. Сараптамалық жүйелерді жасау технологиясы.
              </h3>
              {show10 && (
                <ul>
                  <li onClick={() => setAdd(37)}>Құрастырудың негізгі кезеңдері.</li>
                  <li onClick={() => setAdd(38)}>Кейбір тәжірибелік ұсыныстар</li>
                </ul>
              )}
            </li>
          </ul>
        </div>
        <div className="readRight">
          {add === 1 && (
            <>
              <h2 className="readRight__title">Лекция 1. Машиналық оқытудың негіздері</h2>
              <p className="readRight__descr">
                Лекция 1. Машиналық оқытудың негіздері. 1. Лекция мақсаты мен міндеттері: Машиналық
                оқытудың негіздері, машинаны оқытудың негізгі принциптері, әдістері мен міндеттері
                оқыту, логикалық машиналық оқыту модельдері; метрикалық моделі машина оқыту және
                машиналық оқытудың ықтималды модельдері. 2. Лекция мазмұны: 1. Машиналық оқытудың
                жұмыс істеу принциптері. 2. Машиналық оқытудың класстары. 3. Оқытудың техникалық
                құралдары: Zoom онлайн оқыту платформасы 4. Лекция оқудың тәртібі, оқыту әдістері
                мен түрлері: баяндау, сұрақ – жауап, түсіндіру, кіріспе лекция Машиналық оқыту
                дегеніміз не? Машиналық оқыту (Engl. Machine learning, ML) - бұл жасанды интеллект
                әдістерінің классы. Оның сипаттамасы мәселені тікелей шешу емес, көптеген ұқсас
                мәселелерге шешім қолдану процесінде жаттығу болып табылады. Мұндай әдістерді құру
                үшін математикалық статистика, сандық әдістер, оңтайландыру әдістері, ықтималдық
                теориясы, графтар теориясы, сандық түрде мәліметтермен жұмыс істеудің әртүрлі
                әдістері қолданылады. Машиналық оқыту күнделікті біздің өмірімізде көптеген
                қолданыстарға ие болуда. Оның қолданылуының кеңдігіне байланысты IT технологияда
                маңызды орын алады. Қазіргі кезде машиналық оқыту әдістеріне негізделген кейбір
                қосымшалар жақсы жұмыс істейді. Жасанды Интеллект туралы мақаланы мына жерден оқи
                аласыз: Жасанды Интеллект қалай пайда болды? Машиналық оқыту жасанды интеллекттің
                бір саласы болып саналады. Оның негізгі идеясы компьютер алдын-ала жазылған
                алгоритмді қолданумен ғана шектеліп қоймай, мәселені өздігімен шешуді үйрену. Кез
                келген жұмыс машиналық оқыту технологиясын шартты түрде қол жетімділікке байланысты
                үш деңгейдің біреуіне тағайындалуы мүмкін. Бірінші деңгей - бұл Google немесе IBM
                деңгейіндегі әртүрлі технологиялық алыптар үшін қол жетімді болған кезде. Екінші
                деңгей - белгілі бір білімі бар студент оны қолдана алатын кезде. Үшінші деңгей -
                бұл тіпті ата-әжелер оны басқара алатын кез. Қазір машиналық оқыту екінші және
                үшінші деңгейлердің түйіскен жерінде, осы технологияның көмегімен әлемнің өзгеру
                қарқыны күн сайын артып келеді.
              </p>
            </>
          )}
          {add === 2 && (
            <>
              <h2 className="readRight__title">Жұмыс істеу принципі</h2>
              <p>
                Машиналық оқыту тапсырмаларының көпшілігін “бақыланатын оқытуға” (supervised
                learning) және “бақыланбайтын оқытуға” (unsupervised learning) бөлуге болады.
                «Бақыланатын» түсінігінде адамның мәліметтерді өңдеуге араласуы деп түсініледі. Адам
                машиналық оқытуға араласқан кезде бізде белгілі бір болжамалы ақпараттар бар. Ал
                адамсыз оқу кезінде бізде тек анықталатын мәліметтер болады. 1. Бақыланатын оқыту.
                Мысалы, бізде Алматы қаласындағы 10 000 пәтерлер туралы мәліметтер бар. Сондай-ақ,
                әр пәтердің ауданы, бөлмелер саны, орналасқан қабаты, автотұрақтың болуы, метро
                станциясына дейінгі қашықтық және басқалары белгілі. Сонымен қатар, әр пәтердің құны
                белгілі. Біздің міндетіміз - осы белгілер негізінде пәтердің құнын болжай алатын
                модель құру. Бұл бақыланатын оқытудың классикалық мысалы. Мұндай тапсырма
                регрессиялық есеп деп аталады. Басқа мысалдар: әр түрлі медициналық көрсеткіштерге
                негізделген ақпараттар бойынша науқаста қатерлі ісіктің бар-жоғын болжау. Немесе
                электрондық поштаның мәтініне сүйене отырып, бұл спамның ықтималдығын болжау және
                т.б.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img1.png" alt="" />
                  http://www.machinelearning.ru/
                </p>
                2. Бақыланбайтын оқыту. Бұл оқыту өте қызықты болып келеді. Себебі біз нақты дұрыс
                жауабын білмейміз. Мысалы, бізге белгілі бір адамдардың бойы мен салмағы туралы
                деректер берілсін. Деректерді 3 санатқа (немесе топ) топтастыру керек. Сонымен қатар
                адамдардың әр санаты үшін қолайлы өлшемдегі көйлек жасау керек. Бұл тапсырма
                класстерлік тапсырмасы деп аталады.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img2.png" alt="" />
                  https://www.intuit.ru/
                </p>
              </p>
            </>
          )}
          {add === 3 && (
            <>
              <h2 className="readRight__title">Машиналық оқытудың класстары</h2>
              <p>
                Регрессиялық мәселелер. Әр түрлі белгілерге сүйене отырып, материалдық реакцияны
                болжау. Басқаша айтқанда, жауап 1, 5, 23.575 немесе кез-келген нақты сан болуы
                мүмкін. Жіктеу мәселесі. Әр түрлі белгілер негізінде категориялық жауапты болжау.
                Мысалдар: мәтінді қолжазбамен тану, фотосуреттегі адамның немесе мысықтың бар-жоғын
                анықтау. Класстерлік мәселелер: мәліметтерді ұқсас категорияларға бөлу. Мысалдар:
                ұялы байланыс операторы клиенттерінің төлем қабілеттілігі бойынша бөлу, ғарыш
                объектілерінің ұқсас заттарға бөлу және т.б. (галактикалар, планеталар, жұлдыздар
                және басқалар). Өлшемді азайту мәселесі: біздің мәліметтерімізді N белгілерімен
                емес, кішірек санмен сипаттауға үйрену (әдетте кейінгі визуализация үшін 2-3). Мысал
                ретінде, визуализация қажеттілігінен басқа, деректерді сығуды келтіруге болады.
                Аномалияларды анықтауға байланысты мәселелер: белгілер негізінде аномалияларды
                «аномалиялардан» айыра білуді үйрену. Бұл міндеттің жіктеу мәселесінен еш
                айырмашылығы жоқ сияқты. Бірақ аномалияны анықтаудың ерекшелігі - бізде модельді
                үйрету үшін аномалиялардың мысалдары өте аз немесе мүлдем жоқ. Сондықтан біз
                классификация мәселесін шеше алмаймыз. 5. Деңгейлік тапсырмалар: 1-деңгей. 
                “Машиналық оқыту” терминіне анықтама беріңіз.  Жасанды интеллект түсінігіне
                анықтама беріңіз. 2-деңгей.  Машиналық оқытудың жұмыс істеу принциптері қандай? 
                Машиналық оқытудың класстары қанша? 3-деңгей.  Машиналық оқыту дегеніміз не? 
                Жасанды интеллект дегенміз не?  Машиналық оқытудың класстарын атаңыз?
              </p>
            </>
          )}
          {add === 4 && (
            <>
              <h2 className="readRight__title">Машиналық оқытудың логикалық моделі</h2>
              <p>
                Машиналық оқыту (Machine learning, ML) – жасанды интеллект саласындағы әдістер
                жиынтығы, ӛз тәжірибесінен үйренетін машинаны жасау үшін қолданылатын алгоритмдер
                жиынтығы. Оқыту ретінде машина үлкен кӛлемді деректерді ӛңдейді және олардан
                заңдылықтарды табады. Data science және Machine learning ұғымдарын шатастырмаңыз.
                Бұл құралдар кӛптеген жолдармен қиылысады, бірақ олар әр түрлі және әрқайсысы ӛз
                міндеттерімен. Сондай-ақ, осы мақалада біз машиналық оқытуды, жасанды интеллект пен
                нейрондық желілерді бір үйіндіге қалай араластырмауға болатындығын бір рет
                түсінеміз. Artificial (жасанды интеллект, АИ) – адамның ақыл-ойына ұқсас
                бағдарламалар жасауға кӛмектесетін әртүрлі технологиялық және ғылыми шешімдер мен
                әдістер. Жасанды интеллект кӛптеген құралдарды қамтиды, Data, Science Machine
                деректер туралы ғылым Машиналық оқыту.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img3.png" alt="" />
                </p>{' '}
                Data science-деректерді талдау және олардан құнды ақпарат, білім алу әдістері туралы
                ғылым. Ол машиналық оқыту және ойлау туралы ғылым (Cognitive Science) сияқты
                салалармен, сондай-ақ үлкен деректермен (Big Data) жұмыс істеуге арналған
                технологиялармен қиылысады. Data science жұмысының нәтижесі-талданған деректер және
                деректерді одан әрі ӛңдеу, сұрыптау, іріктеу, іздеу үшін дұрыс тәсілді табу. Мысалы,
                кәсіпорынның қаржылық шығындары мен контрагенттердің деректері туралы келісілмеген
                мәліметтер бар. Бұл деректер аралық банктік деректер немесе операциялардың күні мен
                уақыты арқылы ғана ӛзара байланысты. Терең машиналық талдау нәтижесінде аралық
                деректер арқылы қай контрагенттің ең қымбат екенін анықтауға болады. Машиналық оқыту
                немесе Machine learning – AI бӛлімдерінің бірі, Алгоритмдер компьютерге қатаң
                белгіленген ережелерді сақтамай мәліметтер негізінде қорытынды жасауға мүмкіндік
                береді. Яғни, машина күрделі және кӛп параметрлік есептерде үлгіні таба алады (оны
                адам миы шеше алмайды), осылайша нақты жауаптарды таба алады. Нәтижесінде - дұрыс
                болжау.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img4.png" alt="" />
                </p>{' '}
                Жасанды нейрондардың кӛмегімен нейрондық желі белгілі бір мәселені шешетін адам
                миының (нейрондардың) жұмысын модельдейді, алдыңғы тәжірибені ескере отырып ӛзін-ӛзі
                үйретеді. Әр жолы ол аз қателіктер жібереді. Нейрондық желілер-бұл жеке құрал емес,
                машиналық оқытудың бір түрі.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img5.png" alt="" />
                </p>{' '}
                Машиналық оқытудың мақсаты және оны қолдану аясы Машиналық оқытудың мақсаты әртүрлі
                күрделі аналитикалық мәселелерді шешуді ішінара немесе тіпті толық автоматтандыру
                болып табылады. Сондықтан, ең алдымен, Машиналық оқыту бизнес иелері, Маркетологтар
                мен қызметкерлер ӛз жұмысында дұрыс шешім қабылдауы үшін кіріспе мәліметтер
                негізінде ең дәл болжам жасауға арналған. Оқыту нәтижесінде машина нәтижені болжай
                алады, оны есте сақтайды, қажет болған жағдайда оны ойнатады, бірнеше нұсқаның ең
                жақсысын таңдай алады. Қазіргі уақытта Машиналық оқыту банктерден, мейрамханалардан,
                жанармай құю бекеттерінен бастап ӛндірістегі роботтарға дейін кӛптеген қосымшаларды
                қамтиды. Күн сайын дерлік пайда болатын жаңа міндеттер машиналық оқытудың жаңа
                бағыттарының пайда болуына әкеледі. Сапалы Машиналық оқыту үшін не қажет Машиналық
                оқыту үш китке негізделген:{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img6.png" alt="" />
                </p>{' '}
                А) деректер - біз әдетте клиенттен сұрайтын негізгі ақпарат. Бұған жүйені оқыту
                қажет кез-келген мәліметтер жиынтығы кіреді; Б) белгілері – жұмыстың бұл бӛлігі
                клиентпен тығыз ынтымақтастықта жүзеге асырылады. Біз бизнестің негізгі
                қажеттіліктерін анықтаймыз және оқыту нәтижесінде жүйенің қандай сипаттамалары мен
                қасиеттерін бақылау керектігін бірлесіп шешеміз; В) алгоритм-қойылған
                бизнес-міндеттерді шешу үшін әдісті таңдау. Бұл міндетті біз клиенттің қатысуынсыз,
                қызметкерлеріміздің күшімен шешеміз.
              </p>
            </>
          )}
          {add === 5 && (
            <>
              <h2 className="readRight__title"> Деректер (Data)</h2>
              <p>
                Жүйеге неғұрлым кӛп деректерді жүктейтін болсақ, ол соғұрлым жақсы және дәл жұмыс
                істейді. Ӛздері деректер тікелей тәуелді міндеттері алдымызда машинамен. Мысалы,
                поштаны маңызды хаттардан спамды сүзуге үйрету үшін мысалдар қажет. Олардың үлгісі
                неғұрлым кӛп болса, соғұрлым жақсы. Осылайша, жүйе спамның белгілері ретінде белгілі
                бір сӛздерді – "сатып алу", "қосымша табыс", "үйде ақша табу", "ақша", "несие",
                "әлеуетті арттыру" – қабылдауды және осындай хаттарды жеке қалтаға жіберуді
                үйренеді. Басқа тапсырмалар үшін бастапқы деректер басқаша болады. Сатып алушыға оны
                қызықтыруы мүмкін тауарларға кеңес беру үшін сізге сатып алу тарихы қажет. Нарықтағы
                бағаның ӛзгеруін болжау үшін баға тарихы қажет. Жұмыстың ең қиын және сонымен бірге
                кӛлемді бӛлігі-осы мәліметтерді жинау. Деректерді жинаудың екі әдісі бар: қолмен
                және автоматты түрде. Қол әдісі әлдеқайда баяу,бірақ дәл. Автоматты әлдеқайда
                жылдам, бірақ сонымен бірге кӛп қателіктер жібереді. Деректердің жақсы үлгісі
                қымбатқа түседі, ӛйткені ол сіз болжаудың дәлдігіне жауап береді. Деректерді жинауды
                адамның ойлауымен шектемеу ӛте маңызды, бірақ шашыраңқы ақпаратты барынша қамтамасыз
                ету ӛте маңызды, ӛйткені машина адам байқамайтын жерде пайда мен ӛзара байланысты
                кӛре алады. Белгілері (қасиеттері, ӛлшемдері, ерекшеліктері, ерекшеліктері,
                features). Мысалы, автомобиль жағдайында белгілер жүгіріс, цилиндрлер саны, мүмкін
                болатын ең жоғары жылдамдық болады. Сатып алушы жағдайында: Жасы, жынысы, білімі,
                табыс деңгейі және т.б. Жануарлар жағдайында: тұқымы, бойы, құйрықтың ұшынан мұрынға
                дейінгі ұзындығы, түсі. Қасиеттердің дұрыстығы сіз алған нәтижеге тікелей әсер
                ететіндіктен, оларды таңдау кӛбінесе Машиналық оқыту процесіне қарағанда кӛп уақытты
                алады. Мұнда бастысы-машиналық қабылдауды бұрмаламау үшін жеке пікірге негізделген
                сипаттамалар жиынтығын шектемеу. Онымен бірге соңғы нәтиже. Белгілері бойынша
                құрастырылған датасет мысалы:
                https://github.com/php-ai/php-ml/blob/master/data/wine.csv Бұл деректер Италияның
                бір аймағында ӛсірілген, бірақ үш түрлі сорттан алынған шараптарды химиялық талдау
                нәтижелері болып табылады. Талдау шараптың үш түрінің әрқайсысында кездесетін 13
                компонентті анықтады. Шараптың компоненттеріне сүйене отырып, оның класын анықтауға
                болады.
              </p>
            </>
          )}
          {add === 6 && (
            <>
              <h2 className="readRight__title">Алгоритм (Algorithm)</h2>
              <p>
                Белгілі бір мәселені шешу үшін жүйелі операциялар жүйесі. Басқаша айтқанда-шешім
                әдісі. Әрбір нақты тапсырма үшін жеке талғампаз алгоритмді таңдауға болады. Бастапқы
                деректерді ӛңдеу нәтижесінің жылдамдығы мен дәлдігі таңдалған әдіске тікелей
                байланысты. Тіпті тамаша жазылған Алгоритмдер де қойылған бизнес-міндеттерді шешуге
                кӛмектеспейтін жағдайлар да болады. Мысалы, егер сіз сайттағы кросс-сатылымдардың
                санын кӛбейтуді қаласаңыз және бұл үшін сізге ӛнімді ұсыну алгоритмін жақсарту қажет
                екеніне сенімді болсаңыз. Бірақ сіздің клиенттеріңіз іздеуден тікелей сілтемелер
                арқылы келетінін және сайтта кӛрсетілген басқа ӛнімдерді сатып алу бойынша
                кеңестерді елемейтінін білмейсіз. Сондықтан, жұмысқа кіріспес бұрын, біз клиенттің
                проблемасының нақты себебін анықтаймыз. Егер ол техникалық болса, оны шешуге қуана
                кӛмектеседі.
              </p>
            </>
          )}
          {add === 7 && (
            <>
              <h2 className="readRight__title">Машиналық оқытудың негізгі түрлері</h2>
              <p>
                Бұл мақалада біз машиналық оқытудың негізгі түрлерін қысқаша қарастырамыз, болашақта
                олардың әрқайсысына жеке егжей-тегжейлі материал арнаймыз.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img7.png" alt="" />
                </p>
                Мұғалімнің болу белгісі бойынша оқыту мұғаліммен (Supervised Learning), мұғалімсіз
                (Unsupervised Learning) және арматурамен (Reinforcement Learning) оқуға бӛлінеді. -
                Мұғаліммен бірге оқыту машинаны заттарды немесе сигналдарды тануға үйрету қажет
                болған кезде қолданылады. Мұғаліммен бірге оқытудың жалпы қағидасы - "міне, есік,
                бұл да есік, және бұл да есік". - Мұғалімсіз оқыту "бұл нәрсе басқалармен
                бірдей"принципін қолданады. Алгоритмдер ұқсастықтарды зерттейді және айырмашылықты
                анықтап, аномалияны анықтай алады, Ерекше немесе ұқсас емес нәрсені таниды. -
                Арматуралық оқыту машинаның алдында тұрған жерде қолданылады-ісәрекеттің кӛптеген
                нұсқалары бар сыртқы ортада тапсырмаларды дұрыс орындау. Мысалы, компьютерлік
                ойындарда, сауда операцияларында, ұшқышсыз техникаға арналған. Қолданылатын
                алгоритмдердің түріне сәйкес екі түрді бӛлуге болады: А) классикалық оқыту-негізінен
                50 жылдан астам уақыт бұрын статистикалық бюролар үшін әзірленген белгілі және жақсы
                зерттелген оқыту алгоритмдері. Ең алдымен деректермен жұмыс істеу міндеттеріне
                сәйкес келеді: жіктеу, кластерлеу, регрессия және т.б. болжау, клиенттерді
                сегменттеу және т. б. үшін қолданылады. Б) нейрондық желілер және терең оқыту –
                машиналық оқытудың ең заманауи тәсілі. Нейрондық желілер суреттер мен бейнелерді
                тану немесе құру, күрделі басқару немесе шешім қабылдау алгоритмдері, машиналық
                аударма және ұқсас күрделі тапсырмалар қажет болған жерде қолданылады. Бірнеше
                тәсілдерді біріктіруге болады, содан кейін сіз модельдер ансамбльдерін аласыз.
                Машиналық оқытудың басты пайдасы Шебер тәсілмен машиналық оқытудың әртүрлі түрлерін
                біріктіре отырып, күнделікті бизнес-процестердің кӛпшілігін автоматтандыруға қол
                жеткізуге болады. Басқаша айтқанда, Машиналық оқыту арқылы дайындалған алгоритмдер
                мен роботтар күнделікті жұмысты орындай алады. Барлық шығармашылық бӛлігі адамдар
                үшін қалады: стратегияларды құру, келіссӛздер жүргізу, келісімшарттар жасау және
                т.б. Бұл маңызды фактор, ӛйткені машина ӛзіне берілген шеңберден шыға алмайды, ал
                адам миы ойланбастан ойлана алады. Машиналардың сипаттамаларын сапалы талдау сізге
                клиенттерді тарту үшін кӛп күш жұмсау керектігін айтады, ал адамдардың міндеті – бұл
                күшжігердің стратегиясын ойластыру. Сіздің бизнес міндеттеріңізді шешу үшін
                машиналық оқыту мен жасанды интеллектті қалай жақсы пайдалану керектігін білгіңіз
                келе ме? Бізге хабарласыңыз, Сіздің бизнесіңізге ең қолайлы нұсқаны айтыңыз. 5.
                Деңгейлік тапсырмалар: 1-деңгей.  Жасанды интеллект дегеніміз не?  Data science
                дегеніміз не? 2-деңгей.  Нейронды желі дегеніміз не?  Нейронды желінің қызметі
                қандай? 3-деңгей.  Машиналық оқыту мақсаты мен қолдану саласы қандай?  Машиналық
                оқытудың үш құрамдас бӛліктері?  Машиналық оқытуда берілгендермен қалай жұмыс
                жасайды? 6. БОӨЖ тапсырмалары: РВМ тиісті векторларының әдісі 7. БӨЖ тапсырмалары:
                Ықтималдылықтың максималды әдісімен байланыс.
              </p>
            </>
          )}
          {add === 8 && (
            <>
              <h2 className="readRight__title">
                Лекция 3. Машиналық оқыту, жасанды интеллект және нейрондық желілердің айырмашылығы.
              </h2>
              <p>
                1. Лекция мақсаты мен міндеттері: Машиналық оқыту, жасанды интеллект және нейрондық
                желілердің айырмашылықтарын анықтау. 2. Лекция мазмұны: 1. Машиналық оқыту, жасанды
                интеллект. 2. Нейрондық желілер. 3. Оқытудың техникалық құралдары: Zoom онлайн оқыту
                платформасы 4. Лекция оқудың тәртібі, оқыту әдістері мен түрлері: баяндау, сұрақ –
                жауап, түсіндіру, кіріспе лекция Машинамен оқыту бір нәрсені өте қарапайым деңгейде
                жасайды. Ол белгілі немесе белгісіз мәліметтермен қоректенеді және берілген
                тапсырманың оңтайлы нәтижелерін табады. Инженер тапсырманы және пайдаланылатын
                деректер көзін көрсетуі керек. Мысалы, суреттердегі мәтінді сәйкестендіру үшін OCR
                (суреттерді оптикалық тану) кескіндер жиынтығын немесе оларды табуға болатын орынмен
                қамтамасыз етілуі керек, тұтынушы профилі клиенттің деректерін талап етеді, ал
                жолдағы сәйкестендіретін жолдар суреттің суретін талап етеді. Бұл модельдерді
                құрастырып, үйреткеннен кейін, екіншісінің тапсырмасын орындауға тырысу мүмкін емес.
                Бұл жерде машиналық оқыту мен шынайы жасанды интеллект ерекшеленеді.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img8.png" alt="" />
                </p>{' '}
                Машинамен жұмыс жасанды интеллектке балама ретінде жиі айтылады. Алайда, AI мен
                машиналық оқытуды теңестіру Ferrari-ді оның берілуіне теңестіруге ұқсайды. Беріліс
                Ferrari-нің маңызды құрамдас бөлігі болып табылады, бірақ жай ғана берілу сізде
                Ferrari бар дегенді білдірмейді; бұл біреуін құруға бір қадам ғана. Бұл мысалды
                машинамен үйреніңіз. Біздің Ferrari (AI) құру үшін біз жоғары сапалы
                автомобильдердің (машиналық оқыту) құрамдас бөліктерін жинауымыз керек. Қазіргі
                уақытта компаниялар мен зерттеушілер өздігінен жүретін автомобильдер,
                автоматтандырылған акциялар саудасы немесе ауылшаруашылық өнімдерін талдау сияқты
                нақты мәселелерді шешу үшін әртүрлі машиналарды оқыту әдістерін біріктіреді. Бұл
                шынайы жасанды интеллект емес. Шын AI - бұл машина бұрын-соңды белгісіз кез-келген
                мәселені шеше алатын кез. Ал машиналық оқыту белгілі немесе белгісіз мәліметтерді
                бере отырып, белгілі және белгілі бір мәселені шешуге арналған. Автокөліктердің
                ұқсастығына тоқталатын болсақ, компаниялар 'ВИПОН' сияқты 'автомобильдің алғашқы
                моделін шығару үшін төмен сапалы компоненттері бар негізгі' AI 'құрды, бірақ 2019
                жылы Ford Model T моделін кім жұмысқа енгізеді? Бұл мысалдар - бұл көбінесе бірге
                жасаушылар «AI» деп аталатын, машинамен жұмыс істейтін көптеген желі. Алайда, бұл
                шынайы жасанды интеллект емес; шынайы жасанды интеллект әлі алда.
              </p>
            </>
          )}
          {add === 9 && (
            <>
              <h2 className="readRight__title">Нейрондық желілер және терең оқыту</h2>
              <p>
                Қазіргі уақытта AI, машиналық оқыту немесе компьютерлік ғылымның кез-келген басқа
                тақырыбын талқылау кезінде сіз «терең оқыту» немесе «нейрондық желі» тіркестерін
                кез-келген жерде кездестіресіз. Нейрондық желілер - бұл машинаны оқытудың ең төменгі
                нұсқасы, бірақ оның нұсқасы неғұрлым заманауи машиналық оқыту міндеттері қалай
                шешілетіндігі. Нейрондық жүйенің мақсаты - адамның миының сыртқы ынталандыруды көру,
                есту және басқа биологиялық реакцияларға қалай әсер ететінін елестету. Адамның миы
                өте күрделі тақырып болғандықтан, нейрондық желілер де бар, сондықтан мен сіздер
                туралы терең түсінікке ие болу үшін тек қысқаша шолу жасаймын. Нейрондық желілер
                ортасында «жасырын» қабаттармен бірге кіріс және шығыс қабатын қолданады. Бұл орта
                қабаттар алдыңғы қабаттағы мәліметтер негізінде шешім қабылдайды және келесі қабатқа
                «таңдау» ықтималдығын жариялайды. Қарапайым нейрондық желіде бұл ағын -
                жасырын-шығыс. «Терең оқыту» нейрондық желілер - бұл бірнеше жасырын қабаттары бар
                нейрондық желілер. Бұл шатастыратын сияқты, бірақ мидың нысанды қалай тани
                алатындығы туралы ойланыңыз. Алдымен ол пішінді алады, содан кейін су бөтелкесі,
                шляпа немесе кез-келген зат болу ықтималдығын шешеді. Бұл нейрондық желіге мысал,
                бірақ көп жағдайда формасы (бір қабаты) жеткіліксіз.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img9.png" alt="" />
                </p>{' '}
                Содан кейін сіздің миыңыз түс, мөлдірлік, белгілер сияқты басқа факторларға сүйене
                отырып шешім қабылдайды, тізім жалғасады. Мұны терең үйрету еліктеуге тырысады.
                Қарапайым екі қабатты терең білім беру желісінде біз пішін сияқты бір қабатты
                аламыз, содан кейін келесі қабаттың түсімен үйлесетін су құтысы, шляпалар немесе
                көлік деген ықтималдылықты анықтаймыз. Бұл шын мәнінде болып жатқанның өте
                жеңілдетілген нұсқасы, бірақ бұл тұжырымдаманы түсіну өте маңызды. Терең оқыту
                желілері сіз қалағанша көп қабаттарға ие бола алады және осылайша едәуір күрделі
                бола алады. Машинамен оқытудың кез-келген мәселесін тереңдетіп оқытуға көшуге
                болатындығын ескеру керек, бұл жай ғана деректерді баптауға және жинауға көп жұмысты
                қажет етеді. Терең білім беру желілері үлкен көлемде деректерді сіңіре алатындықтан,
                оларды ірі корпорациялар жиі қолдана бастады. Олар тіпті кейбір танымдық
                тапсырмаларды орындау барысында адамдарды ұрып-соғып үлгерді, мысалы IBM
                компаниясының Уотсон Джеопардиядағы бәсекелестерін ұрып жіберді.
              </p>
            </>
          )}
          {add === 10 && (
            <>
              <h2 className="readRight__title">Бақыланатын және бақыланбайтын оқыту</h2>
              <p>
                Машиналық оқыту модель алатын мәліметтер типіне байланысты екі бөлек категорияға
                бөлінеді. Жетекшілік ететін оқыту құрылымдық деректер жиынтығын пайдаланады, онда
                машиналар мәліметтерді дұрыс талдағанын көрсететін нәтижелер көрсетілген. Бақылаусыз
                оқыту құрылымы жоқ және дерексіз мәліметтер жиынтығын алдыңғы мәліметтерге
                негізделген тапсырма үшін заңдылық немесе қорытынды іздеу үшін пайдаланады.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img10.png" alt="" />
                </p>{' '}
                Бақылауды үйрену жағдайында сіз машинаны біреу дұрыс жауаппен белгіленген мәліметтер
                жиынтығын бере отырып, «бақылап отырасыз». Жеміс суреттерінен алманы тану туралы
                ойланыңыз. Сіз кескіндер жиынтығын құрып, олардың аттарын тиісті жемістерге қоюға
                болады. Машина модельдің әртүрлі әдістерін үйреніп, тексере бастағанда, оның жеміс
                түрін анықтай алған-алмағаны туралы нақты жауап (файл атауы негізінде) болады.
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img11.png" alt="" />
                </p>
                Екінші жағынан, бақылаусыз оқыту кезінде құрылғы белгісіз деректер жиынтығын немесе
                «белгісіз» деректерді пайдаланады. Бұл кең статистиканы құру кезінде пайдалы болуы
                мүмкін. Мысалы, жақында ит пен макаронды жақсы көретін алыс қашықтықтағы адамдарға
                бағытталған жарнамалық портфолиоларды құру Google және Facebook жарнамалық API-де
                мүмкін. Бұл машиналар сіздің деректеріңізде бақылаусыз оқумен айналысады,
                пайдаланушының мінез-құлқы мен алдыңғы әрекеті негізінде осындай профиль түрлерін
                болжау мүмкіндігіне ие болады. Біз біліп отырғанымыздай, бақыланбайтын оқыту
                әдістері бақыланатын әдістерге қарағанда анағұрлым құнды, өйткені қазіргі қоғамда
                белгісіз мәліметтер әлдеқайда көп. Бақылаусыз оқыту «дұрыс» немесе «бұрыс» дегенді
                айтпай-ақ, күрделі деректерді қарап, оны мағыналы жолдармен ұйымдастыра алады.
                Кез-келген мәселеге кез-келген әдісті қолдануға болатындығын білу маңызды, бірақ
                жағдайға байланысты бір әдіс, әдетте, басқасына қарағанда жақсы.
              </p>
            </>
          )}
          {add === 11 && (
            <>
              <h2 className="readRight__title">Жіктеу және регрессия</h2>
              <p>
                Мәселені шешу үшін машиналық оқытуды қолданғанда көбінесе нысанды анықтау немесе
                пайдаланушының кіруін болжау сияқты әртүрлі мақсаттар болады. Алма мәселесін шешіңіз
                - біздің мақсатымыз кескінді жіктеу және берілген мағынасыз пиксельдер жиынтығы
                қандай жемістерге қатысты болатындығын анықтау болды. Бұл «классификатор» деп
                айтылады, өйткені ол пиксель аймақтарын жіктейді және қандай жеміс болуы мүмкін
                екенін шешеді. Содан кейін клиенттің алдын-ала мәліметтері негізінде сатып алушының
                профилін болжаудың аналитикалық мәселесін шешіңіз. Бұл «регрессия» мәселесі, бұл
                клиенттің шынымен де макарон сүйетін, алыс қашықтықтағы, иттермен
                жүретін-жүрмейтіндігіне болжау жасау үшін алдын-ала мәліметтерді қолданумен
                байланысты.{' '}
                <p style={{ textAlign: 'center', margin: '15px 0 ' }}>
                  <img src="img/img12.png" alt="" />
                </p>{' '}
                Жіктеу дегеніміз - берілген объектіге затбелгі беру міндеті. Мысалы, өздігінен
                жүретін автомобиль жолдағы объект байкер, басқа көлік, құлатылған ағаш және т.б.
                екендігін анықтау үшін классификацияны қолданады. Осыны басқа машинамен оқыту
                модельдерімен бірге қолданушыға дұрыс жауап беру үшін қолдануға болады. жаңадан
                табылған объект. Классификацияның мақсаты - компьютерлерге объектілерді тануға
                мүмкіндік беру, әдетте суреттерден емес. Екінші жағынан регрессия мәліметтер
                негізінде статистикалық болжау жасау үшін қолданылады. Өздігінен жүретін
                автомобильдің мысалында регрессия жолдағы сызықтарды табу үшін қолданылатын
                технология болуы мүмкін. Жол сызықтарының бәрі бірдей жақсы боялмаған, кейбірінде
                олқылықтар, жарықтар бар немесе олар тіпті жоқ. Компьютерлік ғалымдар дискіде
                жиналған алдыңғы жол сызбасы туралы деректер негізінде болмаса да, сызықтың күткен
                жерін талдау үшін регрессияны қолдана алады. Жіктеу және регрессия терең білім
                алудың жалғыз әдісі емес. Бұл машиналарды оқыту алгоритмдерінің көпшілігіне жататын
                екі басым категория. Егер сіз машинаны оқыту алгоритмдерін зерттеуді қаласаңыз, мен
                осы мақаланы ұсынамын. Барлығын бірге әкелу Жасанды интеллект дегеніміз - кеңінен
                таралған термин, ол көбінесе машиналық оқумен бір-бірімен қолданылады, бірақ іс
                жүзінде машиналық оқыту - жасанды интеллекттің қосалқы бөлігі. Есіңізде болсын, AI -
                бұл Ferrari, ал машиналық оқыту - бұл трансмиссия сияқты мүмкін болатын
                компоненттердің бірі. Компьютерлерді адамдар сияқты ойлауға үйрету AI мақсаты болып
                табылады және ішінара машиналық оқыту арқылы жүзеге асырылады, бірақ белгілі бір
                тапсырма үшін. Нейрондық желілер - бұл миды еліктеудің басты мақсаты бар машиналық
                оқытуды жүзеге асыру. Бұл нейрондық желілерде кіріс деректеріне сүйене отырып
                қорытынды шығару үшін кем дегенде бір қабат бар. Бұл желілерге қосымша қабаттар
                қосуға болады және нәтиже - терең білім деп аталатын қосымша топтама. Терең оқу
                дегеніміз бірнеше қабаттан тұратын нейрондық желі дегенді білдіреді. Машинамен
                оқытуды кез-келген жеңілдету үшін болжам жасау үшін мәліметтер қажет болады. Бұл
                деректер белгіленбеуі немесе белгіленуі мүмкін және нәтижесінде алынған оқыту моделі
                сәйкесінше бақыланбайтын немесе бақыланатын ретінде белгілі болады. Бақылаусыз
                оқытудың артықшылықтары бар, мысалы, алдын-ала өңделген деректер жиынтығын жасау
                үшін адамның араласуын қажет етпейді, бірақ оңтайлы күйіне жету үшін көптеген
                мәліметтер қажет болатын сияқты кемшіліктерден зардап шегеді. Машиналық оқыту
                оқытудың екі негізгі тәсілін қолданады: классификация және регрессия. Жіктеу
                мәліметтерді қорытынды жасау және сол объектілерді 'класс' деп белгілеу үшін
                пайдаланады. Мысалы, акулалардың бейнелері балыққа, ал нәжіс орындыққа жатқызылуы
                мүмкін. Екінші жағынан регрессия мәліметтерді белгісіздер туралы болжам жасау үшін
                пайдаланады. Бұған мысал сатып алушыларға қолхаттар туралы мәліметтерді оларға сатып
                алынған купондарға электрондық пошта арқылы жіберу болып табылады. Бұл технология іс
                жүзінде әлемнің көптеген ірі азық-түлік дүкендерінде қолданылады. Машинамен оқытудың
                осы қысқаша мазмұны сіздің адамыңыздың пән туралы білуіне ықпал етті деп
                үміттенемін. Машиналық оқыту үлкен математикалық терминдер мен өрнектермен өте қиын
                болып көрінуі мүмкін. Сонымен, өтпес бұрын үлкен ұғымдарды түсінікті терминдерге
                бөлуді ұмытпаңыз. Егер сіз осы блогты ұнатсаңыз, менің соңғы жаңалықтарыммен
                (төмендегі twitter сілтемесі) хабардар болу үшін мені әлеуметтік желілерде қадағалап
                отырыңыз! 5. Деңгейлік тапсырмалар: 1-деңгей.  Нейрондық желілер және терең оқыту.
                 Бақыланатын және бақыланбайтын оқыту 2-деңгей.  Жіктеу дегеніміз не?  Регрессия
                дегеніміз не? 6. БОӨЖ тапсырмалары: Белгілерді таңдау үшін жүйелеу: Lasso SVM, SVM
                серпімді желісі, SFM, RFM астерлеу. kMeans, MeanShift, DBSCAN, Affinity Propagation.
                7. БӨЖ тапсырмалары: Стохастикалық градиент әдісі және ерекше жағдайлар: адаптивті
                сызықтық элемент
              </p>
            </>
          )}
          {add === 12 && (
            <>
              <h2 className="readRight__title">
                Лекция 4. Расс-Лассо регрессиясы: олардың дұрыс қолдануы
              </h2>
              <p>
                1. Лекция мақсаты мен міндеттері: OLS сызықтық регрессия туралы түсінік беру.
                Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керектігін айқындау. Бақыланатын
                машиналық оқыту: Регрессия Vs классификациясына анықтама беру. 2. Лекция мазмұны: 1.
                Расс-Лассо регрессиясы. 2. Жоталардың шығыс функциясы. 3. Lasso шығындар функциясы
                3. Оқытудың техникалық құралдары: Zoom онлайн оқыту платформасы 4. Лекция оқудың
                тәртібі, оқыту әдістері мен түрлері: баяндау, сұрақ – жауап, түсіндіру, кіріспе
                лекция Расс-Лассо регрессиясы: оларды қалай дұрыс ұстау керек? Жақында мен қазіргі
                кездегі деректанушы ғалымның жоталар мен лассо регрессиясының арасындағы
                айырмашылықты еске түсіру үшін күресетін мақаласын оқыдым. Бұл лауазымның мақсаты -
                деректер ғылымымен жаңадан келген және соған ұқсас күресіп жүрген адамдарға
                кӛмектесу, жақсы идеялар тізбегі мен лассо-регрессияны алуға кӛмектеседі. Бұл
                лауазымға қарапайым квадраттарды (OLS) және сызықты алгебраны білу ұсынылады Өзіңіз
                білетін нәрседен бастаңыз Жоталар мен лассо регрессиясы қарапайым ең кіші
                квадраттардың сызықтық регрессиясының «модификациясы» болып табылады. OLS бірнеше
                сызықтық регрессияда біздің шығындар функциясы: Егер жоғарыда айтылғандар сізге
                түсініксіз болса, онда сізде сызықтық алгебра мен векторлық белгілерде білім
                болмағандықтан болуы мүмкін. Бұл OLS құны функциясымен таныс болған кезде жақсы
                болуы мүмкін, егер сіз, ең болмағанда, тӛмендегі түйсікті ұстануыңыз мүмкін. Біздің
                y мәндеріміз y векторында, х-мәндері X матрицасында, ал сызықтық регрессия
                коэффициенттеріміз - векторда β. Егер сіз осы лауазымға ӛту барысында әлі де шатасып
                жатсаңыз, бірнеше сызықты регрессияны мұқият түсініп, осы лауазымға оралмас бұрын
                негізгі сызықтық алгебраны құруды ұсынамын. Білгенге сұрақ OLS сызықтық регрессия -
                бұл пайдалы әдіс, бірақ бұл әрқашан идеалды әдіс емес. Мысалы, егер бізде сатушылар
                бар болса ше? Немесе біздің кӛп модельділік модельге қалай әсер етуі мүмкін? Осындай
                сұрақтар қоюда OLS әрдайым регрессия үшін қолайлы әдіс емес екені белгілі болады.
                Сызықтық регрессияны кӛп полиноларлықты кӛрсететін қасиеттерде қолданғымыз келеді
                делік. Мультиколлинарлық біздің дисперсиямыздың жоғарылауына әкелуі мүмкін, бұл
                біздің модельге шамадан тыс сәйкес келуіне әкеледі. Біздің модельдеріміз жаңа
                деректерге жалпыланғанын қалаймыз, сондықтан мұндай жарамсыздықтың алдын-алу әдісі
                пайдалы. Регуляризация - бұл біздің моделімізде жоғары қарама-қайшылықты болдырмауға
                арналған әдіс. Ол үшін жоғарыда кӛрсетілген шығын функциясына айыппұл мерзімін
                енгіземіз. Осы жаза мерзімін қосу арқылы біз сызықтық функцияның коэффициенттерінің
                тым үлкен болуына жол бермейміз. Бұл жағымсыздықты енгізу дисперсияны азайтып,
                сәйкестікке жол бермеу керек. Жоталардың шығыс функциясы Жоталардың шығыны функциясы
                L2 нормасын of-ге айыппұл мерзімі ретінде қосады, бұл біз «барлық коэффициенттерді
                квадрат қосамыз» деп айтудың қиял тәсілі. Бұл ӛте дұрыс емес, ӛйткені L2 norm
                нормасы біздің модельге қаншалықты әсер ететінін бақылауды қалаймыз, сондықтан біз
                баптау параметріне кӛбейтеміз,. Егер λ едәуір үлкен болса, квадраттық қателіктер
                жиынтығы біздің шығындар функциясында аз болады. Жоғарыда аталған функцияны азайтуға
                тырысқанымыз үшін, бұл күш 0-ден 0-ге дейін жетеді. Сонымен, λ кӛбейген сайын values
                мәні азайғанын кӛреміз. Бұл біз қалаған мінез-құлық, ӛйткені ол дисперсияны
                азайтады. Неліктен бұлай екенін білу үшін дисперсияны кіші коэффициенттермен есептеу
                туралы ойлана аласыз. Lasso шығындар функциясы Лассо құны функциясы, екінші жағынан,
                L1 norm нормасын ӛзінің жаза мерзімі ретінде қолданады. L1 нормасы β - бұл біздің
                коэффициенттеріміздің абсолютті шамаларының қосындысы. Сол сияқты, significantly
                едәуір үлкен болған сайын 0 0-ге мәжбүр болады. Бірақ лассо құны функциясы туралы
                айта кететін маңызды нәрсе, біз коэффициенттеріміздің квадратының орнына абсолютті
                мәнді қолданатындықтан, маңызды емес коэффициенттер аз болуы мүмкін. бұл 0 мәнін
                тағайындады. Бұл әсіресе мүмкіндік таңдау үшін пайдалы. Айыппұл мерзімі
                коэффициенттердің нӛлге тең болуының себебі мен шектелетін аймаққа қатысты болуы
                мүмкін, бірақ мен мұнда кірмеймін, бірақ мен оқуды ұсынамын, ӛйткені бұл L1
                айыппұлына мүмкіндік беретін идеяны бекіту үшін пайдалы болады. кейбір
                коэффициенттер нӛлге тең болады. Lasso шектеу аймағы кӛк (сол жақта), жотасы (оң
                жақта) Бірге қою Жоталар мен лассо регрессиясының не істейтінін түсінгеннен кейін,
                қайсысы регулирование әдісін қолданатынын еске түсіру оңай болады. Жеке ӛзім сандық
                жолда сандарды нӛлге дейін түсіретін елестеткенді ұнатамын. Бұл маған лассо
                регрессиясы модельдің кейбір коэффициенттерін нӛлге әкелуі мүмкін екенін есіме
                салады. L1 нормасы мұны мүмкін ететін шектеуші аймақты құрайтындықтан, Лассо L1
                нормасын ӛзінің жаза мерзімі ретінде қолданатынын білеміз. Егер сіз Лассо мен
                жотаның L1 және L2 нормаларын айыппұл шарты ретінде қолданатындығын есіңізде
                сақтасаңыз, онда жотаның L2 нормасы қолданылады. Бұл біреуіне осы екі регрессиялық
                әдісті түзу ұстау қиынға соғатын адамға кӛмектесе алады деп үміттенемін.
              </p>
            </>
          )}
        </div>
      </div>
    </div>
  );
}

export default Read;
